{"version":3,"sources":["components/shared/InputButton/index.js","components/shared/InputButton/InputButton.js","components/BrewMethodInput/index.js","components/BrewMethodInput/BrewMethodInput.js","components/Instructions/index.js","components/Instructions/Instructions.js","components/shared/IncrementDecrementButton/index.js","components/shared/IncrementDecrementButton/IncrementDecrementButton.js","components/QuantityInput/IncrementDecrementQuantity/index.js","components/QuantityInput/IncrementDecrementQuantity/IncrementDecrementQuantity.js","components/QuantityInput/QuantityInput.js","components/QuantityInput/index.js","components/StrengthInput/index.js","components/StrengthInput/StrengthInput.js","components/Timer/Controls/index.js","components/Timer/Controls/Controls.js","components/Timer/TimerDisplay/index.js","components/Timer/TimerDisplay/TimerDisplay.js","components/Timer/index.js","components/Timer/Timer.js","utils/index.js","App.js","constants/index.js","index.js"],"names":["InputButton","_ref","className","id","name","value","onClick","react_default","a","createElement","type","BrewMethodInput","method","changeMethod","shared_InputButton","Instructions","grindSize","list","waterGrams","goldenRatio","listItems","map","item","index","key","IncrementDecrementButton","text","IncrementDecrementQuantity","title","measure","changeQuantity","concat","shared_IncrementDecrementButton","min","onChange","cupsFromWater","cupSize","water","possibleCups","Math","round","coffeeGramsFromWater","coffeeGrams","QuantityInput","updateWater","QuantityInput_IncrementDecrementQuantity","StrengthInput","setGoldenRatio","htmlFor","Controls","playPauseClick","resetClick","aria-hidden","TimerDisplay","time","Timer","seconds","stepTime","resetTimer","playPause","twoDigits","Timer_TimerDisplay","minutes","floor","secondsLeft","countdownView","Timer_Controls","stepDownValue","factor","stepUpValue","App","_useState","useState","_useState2","Object","slicedToArray","setCupSize","_useState3","_useState4","_useState5","instructionsData","_useState6","instructions","setInstructions","_useState7","_useState8","setMethod","_useState9","_useState10","setSeconds","_useState11","_useState12","timerOn","setTimerOn","_useState13","_useState14","setWaterGrams","useEffect","localStorage","getItem","parseFloat","tick","endTime","Date","getTime","updateClock","msLeft","setTimeout","getUTCMilliseconds","clearInterval","conversionFactors","cups","components_BrewMethodInput","event","target","ratio","brewTime","components_StrengthInput","components_QuantityInput","newWater","eventInfo","split","conversionFactor","incrementFactor","components_Timer","newSeconds","innerText","setItem","components_Instructions","steps","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2ce6703a.chunk.js","sourcesContent":["import InputButton from \"./InputButton\";\n\nexport default InputButton;","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst InputButton = ({ className, id, name, value, onClick }) => (\n  <span className=\"button\">\n    <input\n      className = {className}\n      type=\"button\"\n      id={id}\n      name={name}\n      value={value}\n      onClick={onClick}\n    />   \n  </span>\n);\n\nInputButton.propTypes = {\n    className: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onClick: PropTypes.func,\n};\n\nexport default InputButton;","import BrewMethodInput from \"./BrewMethodInput\";\n\nexport default BrewMethodInput;","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport InputButton from '../shared/InputButton';\n\nconst BrewMethodInput = ({ method, changeMethod }) => (\n\t\t<div className=\"adjustables\">\n\t\t  <h2 className=\"inputLabel\">Brew Method</h2>\n\t\t  <form className=\"interactions\">\n\t\t    <div className=\"method\">\n\t\t      <InputButton\n\t\t        className={method === \"AeroPress\" ? 'active' : 'inactive'}\n\t\t        id=\"aeroPress\"\n\t\t        name=\"method\"\n\t\t        value=\"AeroPress\"\n\t\t        onClick={changeMethod}\n\t\t      />\n\t\t    </div>\n\n\t\t    <div className=\"method\">\n\t\t      <InputButton\n\t\t        className={method === \"French Press\" ? 'active' : 'inactive'}\n\t\t        id=\"frenchPress\"\n\t\t        name=\"method\"\n\t\t        value=\"French Press\"\n\t\t        onClick={changeMethod}\n\t\t      />\n\t\t    </div>\n\n\t\t    <div className=\"method\">\n\t\t      <InputButton\n\t\t        className={method === \"Pour Over\" ? 'active' : 'inactive'}\n\t\t        id=\"pourOver\"\n\t\t        name=\"method\"\n\t\t        value=\"Pour Over\"\n\t\t        onClick={changeMethod}\n\t\t      />\n\t\t    </div>\n\t\t  </form>\n\t\t</div>\n);\n\nBrewMethodInput.propTypes = {\n    method: PropTypes.string,\n    changeMethod: PropTypes.func\n};\n\nexport default BrewMethodInput;","import Instructions from \"./Instructions\";\n\nexport default Instructions;","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Instructions = ({ grindSize, list, waterGrams, goldenRatio }) => {\n  if (!list) return null;\n  const listItems = list.map((item, index) => \n    <li key={index}> \n      {item} \n     </li>);\n  \n  return (\n    <div className=\"instructions\">\n      <h2>Brewing Instructions</h2>\n      <p>Grind size: {grindSize}</p>\n      <ol>{listItems}</ol>\n    </div>\n  )\n};\n\nInstructions.propTypes = {\n    grindSize: PropTypes.string,\n    list: PropTypes.array,\n    waterGrams: PropTypes.number,\n    goldenRatio: PropTypes.number,\n};\n\nexport default Instructions;","import IncrementDecrementButton from \"./IncrementDecrementButton\";\n\nexport default IncrementDecrementButton;","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst IncrementDecrementButton = ({ id, onClick, text }) => (\n    <button\n        className=\"incrementDecrement\"\n        id={id}\n        type=\"button\"\n        onClick={onClick}\n    >\n        {text}\n    </button>\n);\n\nIncrementDecrementButton.propTypes = {\n    id: PropTypes.string,\n    onClick: PropTypes.func,\n    text: PropTypes.string\n};\n\nexport default IncrementDecrementButton;","import IncrementDecrementQuantity from \"./IncrementDecrementQuantity\";\n\nexport default IncrementDecrementQuantity;","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport IncrementDecrementButton from '../../shared/IncrementDecrementButton'\n\nconst IncrementDecrementQuantity = ({ name, title, value, measure, changeQuantity }) => (\n    <div className=\"incrementDecrement\" id={`${name}-label`}>\n        <h2 className=\"title\">{title}</h2>\n        <p className=\"measure\">{measure}</p>\n        <div className=\"interactions\">\n            <div className=\"increment\">\n                <IncrementDecrementButton\n                    id={`${name}-increment`}\n                    text=\"+\"\n                    onClick={changeQuantity}\n                />\n                <input \n                    type=\"number\" \n                    min=\"0\"\n                    value={value}\n                    id={`${name}-amount`}\n                    onChange={changeQuantity}\n                />\n                <IncrementDecrementButton\n                    id={`${name}-decrement`}\n                    text=\"-\"\n                    onClick={changeQuantity}\n                />\n            </div>\n        </div>\n    </div>\n);\n\nIncrementDecrementQuantity.propTypes = {\n    name: PropTypes.string,\n    title: PropTypes.string,\n    value: PropTypes.number,\n    measure: PropTypes.string,\n    setQuantity: PropTypes.func\n};\n\nexport default IncrementDecrementQuantity;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport IncrementDecrementQuantity from './IncrementDecrementQuantity'\n\nconst cupsFromWater = (cupSize, water) => {\n  const possibleCups = water / cupSize\n  const roundedPossibleCups = Math.round(possibleCups * 4) / 4\n  return roundedPossibleCups\n};\n\nconst coffeeGramsFromWater = (goldenRatio, water) => {\n  const coffeeGrams = water / goldenRatio\n  return Math.round(coffeeGrams)\n};\n\n//wrap this in form not div\nconst QuantityInput = ({ cupSize, waterGrams, goldenRatio, updateWater }) => (\n    <div className=\"adjustables\"> \n      <IncrementDecrementQuantity\n        name=\"cups\"\n        title=\"Brewed Cups\"\n        value={cupsFromWater(cupSize, waterGrams)}\n        measure=\"8oz\"\n        changeQuantity={updateWater}\n      />\n      <IncrementDecrementQuantity\n        name=\"coffeeGrams\"\n        title=\"Ground Coffee\"\n        value={coffeeGramsFromWater(goldenRatio,waterGrams)}\n        measure=\"g\"\n        changeQuantity={updateWater}\n      />\n      <IncrementDecrementQuantity\n        name=\"waterGrams\"\n        title=\"Water\"\n        value={Math.round(waterGrams)}\n        measure=\"g/mL\"\n        changeQuantity={updateWater}\n      />\n    </div>\n);\n\nQuantityInput.propTypes = {\n    cupSize: PropTypes.number,\n    waterGrams: PropTypes.number,\n    goldenRatio: PropTypes.number,\n    updateWater: PropTypes.func\n};\n\nexport default QuantityInput;","import QuantityInput from \"./QuantityInput\";\n\nexport default QuantityInput;","import StrengthInput from \"./StrengthInput\";\n\nexport default StrengthInput;","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport InputButton from '../shared/InputButton';\n\nconst light = \"18\"\nconst med = \"15.5\"\nconst strong = \"13\"\n\nconst StrengthInput = ({ goldenRatio, setGoldenRatio }) => (\n\t\t<div className=\"adjustables\">\n\t\t  <h2 className=\"inputLabel\">1g Coffee : Xg Water</h2>\n\t\t  <form className=\"interactions\">\n\t\t    <div className=\"strength\">\n\t\t      <InputButton\n\t\t        className={goldenRatio === 18 ? 'active' : 'inactive'}\n\t\t        id=\"light\"\n\t\t        name=\"goldenRatio\"\n\t\t        value={light}\n\t\t        onClick={setGoldenRatio}\n\t\t      />\n\t\t      <label className=\"strength\" htmlFor=\"light\">\n\t\t        light\n\t\t      </label>\n\t\t    </div>\n\n\t\t    <div className=\"strength\">\n\t\t      <InputButton\n\t\t        className={goldenRatio === 15.5 ? 'active' : 'inactive'}\n\t\t        id=\"med\"\n\t\t        name=\"goldenRatio\"\n\t\t        value={med}\n\t\t        onClick={setGoldenRatio}\n\t\t      />\n\t\t      <label className=\"strength\" htmlFor=\"med\">\n\t\t        medium\n\t\t      </label>\n\t\t    </div>\n\n\t\t    <div className=\"strength\">\n\t\t      <InputButton\n\t\t        className={goldenRatio === 13 ? 'active' : 'inactive'}\n\t\t        id=\"strong\"\n\t\t        name=\"goldenRatio\"\n\t\t        value={strong}\n\t\t        onClick={setGoldenRatio}\n\t\t      />\n\t\t      <label className=\"strength\" htmlFor=\"strong\">\n\t\t        strong\n\t\t      </label>\n\t\t    </div>\n\t\t  </form>\n\t\t</div>\n);\n\nStrengthInput.propTypes = {\n    goldenRatio: PropTypes.number,\n    light: PropTypes.string,\n    med: PropTypes.string,\n    strong: PropTypes.string,\n    setGoldenRatio: PropTypes.func\n};\n\nexport default StrengthInput;","import Controls from \"./Controls\";\n\nexport default Controls;","import '@fortawesome/fontawesome-free/js/solid';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Controls = ({ playPauseClick, resetClick }) => (\n    <div className=\"controls\">\n        <button\n            id=\"start_stop\"\n            onClick={playPauseClick}\n        >\n            <i className=\"fa fa-play\" aria-hidden=\"true\"/>\n            <i className=\"fa fa-pause\" aria-hidden=\"true\"/>\n        </button>\n        <button\n            id=\"reset\"\n            onClick={resetClick}\n        >\n            <i className=\"fa fa-refresh\" aria-hidden=\"true\"/>\n        </button>\n    </div>\n);\n\nControls.propTypes = {\n    playPauseClick: PropTypes.func,\n    resetClick: PropTypes.func\n};\n\nexport default Controls;","import TimerDisplay from \"./TimerDisplay\";\n\nexport default TimerDisplay;","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst TimerDisplay = ({ time }) => (\n    <div \n        id=\"timer-display\"\n        className=\"timer\"\n    >\n        <h3 id=\"time-left\">\n            {time}\n        </h3>\n    </div>\n);\n\nTimerDisplay.propTypes = {\n    time: PropTypes.string\n};\n\nexport default TimerDisplay;","import Timer from \"./Timer\";\n\nexport default Timer;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport Controls from './Controls';\nimport TimerDisplay from './TimerDisplay';\nimport IncrementDecrementButton from '../shared/IncrementDecrementButton';\n\n\nconst Timer = ({seconds, stepTime, resetTimer, playPause}) => {  \n  let twoDigits = time => (time >= 10 ? time : `0${time}`);\n\n  const countdownView = (seconds) => {\n    let minutes = Math.floor(seconds/60);\n    let secondsLeft = seconds % 60;\n\n    return `${twoDigits(minutes) || '00'}:${twoDigits(secondsLeft) || '00'}`; \n  } \n  \n  return (\n    <div id=\"countdown-timer\">\n      <div className=\"increment timer\">\n        <IncrementDecrementButton \n          id=\"timer\"\n          onClick={stepTime}\n          text=\"+\"\n        />\n        <IncrementDecrementButton \n          id=\"timer\"\n          onClick={stepTime}\n          text=\"-\"\n        />\n      </div>\n      <TimerDisplay time={countdownView(seconds)} />\n      <Controls\n        playPauseClick={playPause}\n        resetClick={resetTimer}\n      />\n    </div>\n  );\n};\n\nTimer.propTypes = {\n    seconds: PropTypes.number,\n    stepTime: PropTypes.func,\n    countdownView: PropTypes.string,\n    playPause: PropTypes.func,\n    resetTimer: PropTypes.func\n};\n\nexport default Timer;","const stepDownValue = (value, factor) => {\n  if (value < factor) return 0;\n  return value - factor;\n};  \n\nconst stepUpValue = (value, factor) => {\n  return value + factor;\n};\n\nexport {stepDownValue, stepUpValue};","import React, { useState, useEffect } from 'react'\n\nimport './App.css'\n\nimport BrewMethodInput from './components/BrewMethodInput'\nimport Instructions from './components/Instructions'\nimport QuantityInput from './components/QuantityInput'\nimport StrengthInput from './components/StrengthInput'\nimport Timer from './components/Timer'\nimport {\n  aeroCupSize,\n  DefaultCupSize,\n  DefaultMethod,\n  DefaultRatio,\n  DefaultSeconds,\n  DefaultWater,\n} from './constants'\nimport { stepDownValue, stepUpValue } from './utils'\nimport instructionsData from \"./instructions.json\";\n\nconst App = () => {\n  const [cupSize, setCupSize] = useState(DefaultCupSize);\n  const [goldenRatio, setGoldenRatio] = useState(DefaultRatio);\n  const [instructions, setInstructions] = useState(instructionsData['Pour Over']);\n  const [method, setMethod] = useState(DefaultMethod);\n  const [seconds, setSeconds] = useState(DefaultSeconds);\n  const [timerOn, setTimerOn] = useState(false);\n  const [waterGrams, setWaterGrams] = useState(DefaultWater);\n\n  useEffect(() => {\n    const method = localStorage.getItem('method') || DefaultMethod\n    const goldenRatio =\n      parseFloat(localStorage.getItem('goldenRatio')) || DefaultRatio\n    const waterGrams =\n      parseFloat(localStorage.getItem('waterGrams')) || DefaultWater\n    const seconds =\n      parseFloat(localStorage.getItem('seconds')) || DefaultSeconds\n\n    setMethod(method)\n    setGoldenRatio(goldenRatio)\n    setWaterGrams(waterGrams)\n    setSeconds(seconds)\n  }, [])\n\n  useEffect(() => {\n    var tick = null\n\n    if (timerOn && seconds > 0) {\n      let endTime = new Date().getTime() + seconds * 1000 + 500\n\n      const updateClock = () => {\n        let msLeft = endTime - new Date().getTime()\n\n        if (msLeft >= 0) {\n          setSeconds(Math.floor(msLeft / 1000))\n\n          tick = setTimeout(\n            updateClock,\n            new Date(msLeft).getUTCMilliseconds() + 500\n          )\n        }\n      }\n      updateClock()\n    } else if (!timerOn) {\n      clearInterval(tick)\n    }\n    return () => clearInterval(tick)\n  }, [timerOn, seconds])\n\n  const stepTime = event => {\n    if (!timerOn && seconds < 420) {\n      let newSeconds =\n        event.target.innerText === '-'\n          ? stepDownValue(seconds, 1)\n          : stepUpValue(seconds, 1)\n      setSeconds(newSeconds)\n    }\n  }\n\n  const resetTimer = () => {\n    setSeconds(DefaultSeconds)\n    setTimerOn(false)\n  }\n\n  const playPause = () => {\n    setTimerOn(!timerOn)\n  }\n\n  const updateGoldenRatio = event => {\n    let ratio = event.target.value\n    setGoldenRatio(parseFloat(ratio))\n  }\n\n  const conversionFactors = {\n    cups: cupSize,\n    coffeeGrams: goldenRatio,\n    waterGrams: 1,\n  }\n\n  const updateWater = event => {\n    const eventInfo = event.target.id.split('-')\n    let conversionFactor = conversionFactors[eventInfo[0]]\n    let incrementFactor =\n      eventInfo[0] === 'cups' ? conversionFactor / 4 : conversionFactor\n    let value = event.target.type === 'number' ? event.target.value : waterGrams\n    let newWater\n\n    if (eventInfo[1] === 'decrement') {\n      newWater = stepDownValue(value, incrementFactor)\n    } else if (eventInfo[1] === 'increment') {\n      newWater = stepUpValue(value, incrementFactor)\n    } else if (eventInfo[1] === 'amount') {\n      newWater = value * conversionFactor\n    }\n    setWaterGrams(newWater)\n  }\n\n  // async fetchData () {\n  //   try {\n  //     const response = await fetch(instructionsUrl);\n  //     const json = await response.json();\n  //     console.log(json);\n  //   } catch (error) {\n  //       this.setError(error: error.message)\n  //   }\n  // }\n\n  const changeMethod = event => {\n    let method = event.target.value\n    let cupSize = (method === 'AeroPress') ? aeroCupSize : DefaultCupSize;\n    let ratio = (method === 'AeroPress') ? 13 : DefaultRatio;\n    let water = (method === 'AeroPress') ? 220 : DefaultWater;\n    let brewTime = (method === 'AeroPress') ? 120 : DefaultSeconds;\n    let instructions = (instructionsData[method]);\n\n    setInstructions(instructions);\n    setCupSize(cupSize);\n    setGoldenRatio(ratio);\n    setMethod(method);\n    setSeconds(brewTime);\n    setWaterGrams(water);\n  }\n\n  const saveSettings = () => {\n    localStorage.setItem('method', method)\n    localStorage.setItem('goldenRatio', goldenRatio)\n    localStorage.setItem('waterGrams', waterGrams)\n    localStorage.setItem('seconds', seconds)\n  }\n  if (!instructions) {return null;}\n  // console.log(instructions.steps);\n  return (\n    <div className=\"App\">\n      <main>\n        <BrewMethodInput\n          method={method}\n          changeMethod={changeMethod}\n        />\n        <StrengthInput\n          goldenRatio={goldenRatio}\n          setGoldenRatio={updateGoldenRatio}\n        />\n        <QuantityInput\n          waterGrams={waterGrams}\n          goldenRatio={goldenRatio}\n          cupSize={cupSize}\n          updateWater={updateWater}\n        />\n        <Timer\n          seconds={seconds}\n          stepTime={stepTime}\n          resetTimer={resetTimer}\n          playPause={playPause}\n        />\n        <button\n          id=\"saveSettings\"\n          className=\"rectButton\"\n          type=\"button\"\n          onClick={saveSettings}\n        >\n          Save Settings\n        </button>\n        <Instructions\n          grindSize={instructions[\"grind-size\"]}\n          list={instructions.steps}\n          goldenRatio={goldenRatio}\n          waterGrams={waterGrams}\n        />\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","\nconst aeroCupSize = 210;\nconst DefaultCupSize = 279;\nconst DefaultMethod = \"Pour Over\";\nconst DefaultRatio = 15.5;\nconst DefaultSeconds = 240;\nconst DefaultWater = 558;\n\nexport {aeroCupSize, DefaultCupSize, DefaultMethod,DefaultRatio, DefaultSeconds, DefaultWater};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n\t<App />, \n\tdocument.getElementById('root')\n);\n\nif (module.hot) {\n\tmodule.hot.accept();\n}\n"],"sourceRoot":""}