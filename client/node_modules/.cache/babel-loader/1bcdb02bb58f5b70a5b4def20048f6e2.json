{"ast":null,"code":"import _classCallCheck from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport BrewMethodInput from './components/BrewMethodInput';\nimport QuantityInput from './components/QuantityInput';\nimport StrengthInput from './components/StrengthInput';\nimport Timer from './components/Timer';\nvar DefaultMethod = \"pourOver\";\nvar DefaultWater = 558;\nvar DefaultRatio = 15.5;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.setGoldenRatio = function (event) {\n      var ratio = event.target.value.split(\":\");\n\n      _this.setState({\n        goldenRatio: parseFloat(ratio[1])\n      });\n    };\n\n    _this.updateWater = function (event) {\n      var _this$state = _this.state,\n          waterGrams = _this$state.waterGrams,\n          goldenRatio = _this$state.goldenRatio;\n      var eventInfo = event.target.id.split('-');\n      var value = event.target.type === 'number' ? event.target.value : waterGrams;\n      var newWater;\n\n      if (eventInfo[0] === 'cups') {\n        if (eventInfo[1] === 'amount') {\n          newWater = value * 279;\n        } else {\n          newWater = eventInfo[1] === 'decrement' && waterGrams >= 69.75 ? value - 69.75 : value + 69.75;\n        }\n      } else if (eventInfo[0] === 'coffeeGrams') {\n        if (eventInfo[1] === 'amount') {\n          newWater = value * goldenRatio;\n        } else {\n          newWater = eventInfo[1] === 'decrement' && waterGrams >= goldenRatio ? value - goldenRatio : value + goldenRatio;\n        }\n      } else if (eventInfo[0] === 'waterGrams') {\n        if (eventInfo[1] === 'amount') {\n          newWater = value;\n        } else {\n          newWater = eventInfo[1] === 'decrement' && waterGrams >= 1 ? value - 1 : value + 1;\n        }\n      }\n\n      _this.setState({\n        waterGrams: newWater\n      });\n    };\n\n    _this.saveSettings = function () {\n      var _this$state2 = _this.state,\n          goldenRatio = _this$state2.goldenRatio,\n          waterGrams = _this$state2.waterGrams;\n      localStorage.setItem('goldenRatio', goldenRatio);\n      localStorage.setItem('waterGrams', waterGrams);\n    };\n\n    _this.state = {\n      method: DefaultMethod,\n      goldenRatio: DefaultRatio,\n      waterGrams: DefaultWater,\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var goldenRatio = parseFloat(localStorage.getItem('goldenRatio')) || DefaultRatio;\n      var waterGrams = parseFloat(localStorage.getItem('waterGrams')) || DefaultWater;\n      this.setState({\n        goldenRatio: goldenRatio,\n        waterGrams: waterGrams\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          method = _this$state3.method,\n          goldenRatio = _this$state3.goldenRatio,\n          waterGrams = _this$state3.waterGrams;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(BrewMethodInput, {\n        method: method,\n        setMethod: this.setMethod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(StrengthInput, {\n        goldenRatio: goldenRatio,\n        setGoldenRatio: this.setGoldenRatio,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(QuantityInput, {\n        waterGrams: waterGrams,\n        goldenRatio: goldenRatio,\n        updateWater: this.updateWater,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Timer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"saveSettings\",\n        className: \"rectButton\",\n        type: \"button\",\n        onClick: this.saveSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Save Settings\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","Component","BrewMethodInput","QuantityInput","StrengthInput","Timer","DefaultMethod","DefaultWater","DefaultRatio","App","props","setGoldenRatio","event","ratio","target","value","split","setState","goldenRatio","parseFloat","updateWater","state","waterGrams","eventInfo","id","type","newWater","saveSettings","localStorage","setItem","method","error","getItem","setMethod"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport './App.css';\n\nimport BrewMethodInput from './components/BrewMethodInput'\nimport QuantityInput from './components/QuantityInput';\nimport StrengthInput from './components/StrengthInput';\nimport Timer from './components/Timer';\n\nconst DefaultMethod = \"pourOver\"\nconst DefaultWater = 558\nconst DefaultRatio = 15.5\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      method: DefaultMethod,\n      goldenRatio: DefaultRatio,\n      waterGrams: DefaultWater,\n      error: null,\n    }\n  }\n\n  componentDidMount() {\n    const goldenRatio = parseFloat(localStorage.getItem('goldenRatio')) || DefaultRatio;\n    const waterGrams = parseFloat(localStorage.getItem('waterGrams'))\n        || DefaultWater;\n\n    this.setState({ goldenRatio, waterGrams });\n  }\n\n  setGoldenRatio = (event) => {\n    let ratio = event.target.value.split(\":\");\n    this.setState({\n      goldenRatio: parseFloat(ratio[1]),\n    })\n  }\n\n  updateWater = (event) => {\n    const { waterGrams, goldenRatio } = this.state\n    const eventInfo = event.target.id.split('-')\n    let value = event.target.type === 'number' ? event.target.value : waterGrams\n    let newWater\n\n    if (eventInfo[0] === 'cups') {\n      if (eventInfo[1] === 'amount') {\n        newWater = value * 279\n      } else {\n        newWater =\n          eventInfo[1] === 'decrement' && waterGrams >= 69.75\n            ? value - 69.75\n            : value + 69.75\n      }\n    } else if (eventInfo[0] === 'coffeeGrams') {\n      if (eventInfo[1] === 'amount') {\n        newWater = value * goldenRatio\n      } else {\n        newWater =\n          eventInfo[1] === 'decrement' && waterGrams >= goldenRatio\n            ? value - goldenRatio\n            : value + goldenRatio\n      }\n    } else if (eventInfo[0] === 'waterGrams') {\n      if (eventInfo[1] === 'amount') {\n        newWater = value\n      } else {\n        newWater =\n          eventInfo[1] === 'decrement' && waterGrams >= 1\n            ? value - 1\n            : value + 1\n      }\n    }\n    this.setState({ waterGrams: newWater })\n  }\n\n  saveSettings = () => {\n    const { goldenRatio, waterGrams } = this.state;\n    localStorage.setItem('goldenRatio', goldenRatio);\n    localStorage.setItem('waterGrams', waterGrams);\n  \n  }\n\n  render() {\n    const { method, goldenRatio, waterGrams } = this.state\n\n    return (\n      <div className=\"App\">\n        <main>\n          <BrewMethodInput\n            method = {method}\n            setMethod = {this.setMethod}\n          />\n          <StrengthInput \n            goldenRatio = {goldenRatio}\n            setGoldenRatio = {this.setGoldenRatio}\n          />\n          <QuantityInput \n            waterGrams = {waterGrams}\n            goldenRatio = {goldenRatio}\n            updateWater = {this.updateWater}\n          />\n          <Timer />\n          <button\n            id=\"saveSettings\"\n            className=\"rectButton\"\n            type=\"button\"\n            onClick={this.saveSettings}\n          >\n            Save Settings\n          </button>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}