{"ast":null,"code":"import _defineProperty from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nvar DefaultCups = 2;\nvar DefaultCoffee = 36;\nvar DefaultWater = 560;\nvar DefaultRatio = 15.5;\nvar CoffeeGrindsLabel = \"g coffee (ground)\";\nvar CupsLabel = \"10oz cups\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      goldenRatio: DefaultRatio,\n      cups: DefaultCups,\n      coffee: DefaultCoffee,\n      water: DefaultWater,\n      error: null,\n      selectedButton: 'no'\n    };\n    _this.onSubmitChange = _this.onSubmitChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmitCoffee = _this.onSubmitCoffee.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmitCups = _this.onSubmitCups.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onSubmitChange\",\n    value: function onSubmitChange(event) {\n      var target = event.target;\n      var value = event.target.value;\n      var name = target.name;\n      target.type === 'checkbox' ? this.setState({\n        selectedButton: value\n      }) : !value ? //if empty string is submitted set state value to zero***\n      this.setState(_defineProperty({}, name, \"\")) : this.setState(_defineProperty({}, name, parseFloat(value)));\n    }\n  }, {\n    key: \"onSubmitCoffee\",\n    value: function onSubmitCoffee(event) {\n      var _this$state = this.state,\n          coffee = _this$state.coffee,\n          goldenRatio = _this$state.goldenRatio;\n      this.setCups(coffee, goldenRatio);\n      event.preventDefault();\n    }\n  }, {\n    key: \"onSubmitCups\",\n    value: function onSubmitCups(event) {\n      var _this$state2 = this.state,\n          cups = _this$state2.cups,\n          goldenRatio = _this$state2.goldenRatio;\n      this.setIngredients(cups, goldenRatio);\n      event.preventDefault();\n    }\n  }, {\n    key: \"setCups\",\n    value: function setCups(coffee, goldenRatio) {\n      var cupSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 280;\n      var possibleCups = (coffee * goldenRatio / cupSize).toFixed(1);\n      this.setIngredients(possibleCups, goldenRatio);\n    }\n  }, {\n    key: \"setIngredients\",\n    value: function setIngredients(cups, goldenRatio) {\n      var cupSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 280;\n      var waterGrams = Math.round(cups * cupSize);\n      var coffeeGrams = Math.round(waterGrams / goldenRatio);\n      this.setState({\n        cups: cups,\n        coffee: coffeeGrams,\n        water: waterGrams\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          cups = _this$state3.cups,\n          coffee = _this$state3.coffee,\n          water = _this$state3.water,\n          selectedButton = _this$state3.selectedButton;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Brew Ratio\")), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Coffee beans running low?\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Check \\\"yes\\\" below if you have a random amount of ground coffee left to brew.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Check \\\"no\\\" if you prefer to brew a specific number of cups.\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(RadioInput, {\n        value: \"yes\",\n        onChange: this.onSubmitChange,\n        checked: selectedButton === 'yes',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(RadioInput, {\n        value: \"no\",\n        onChange: this.onSubmitChange,\n        checked: selectedButton === 'no',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }))), selectedButton === 'yes' ? React.createElement(\"div\", {\n        className: \"grindsInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"How much ground beans do you have (g)?\", React.createElement(CupGrindInput, {\n        name: \"coffee\",\n        value: coffee,\n        onChange: this.onSubmitChange,\n        onSubmit: this.onSubmitCoffee,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))), React.createElement(Ingredients, {\n        coffee: cups,\n        water: water,\n        label: CupsLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        className: \"cupsInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Desired \", CupsLabel, \":\", React.createElement(CupGrindInput, {\n        name: \"cups\",\n        value: cups,\n        onChange: this.onSubmitChange,\n        onSubmit: this.onSubmitCups,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }))), React.createElement(Ingredients, {\n        coffee: coffee,\n        water: water,\n        label: CoffeeGrindsLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar CupGrindInput = function CupGrindInput(_ref) {\n  var name = _ref.name,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      onSubmit = _ref.onSubmit;\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: name,\n    type: \"number\",\n    step: \".01\",\n    value: value,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nvar Ingredients = function Ingredients(_ref2) {\n  var coffee = _ref2.coffee,\n      water = _ref2.water,\n      label = _ref2.label;\n  return React.createElement(\"div\", {\n    className: \"ingredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"coffeeOrCups\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, coffee, \" \", label), React.createElement(\"div\", {\n    className: \"water\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, water, \"g water\"));\n};\n\nvar RadioInput = function RadioInput(_ref3) {\n  var value = _ref3.value,\n      onChange = _ref3.onChange,\n      checked = _ref3.checked;\n  return React.createElement(\"span\", {\n    className: \"radioButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: value,\n    name: \"coffeeLowQuestion\",\n    value: value,\n    onChange: onChange,\n    checked: checked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, value));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","Component","DefaultCups","DefaultCoffee","DefaultWater","DefaultRatio","CoffeeGrindsLabel","CupsLabel","App","props","state","goldenRatio","cups","coffee","water","error","selectedButton","onSubmitChange","bind","onSubmitCoffee","onSubmitCups","event","target","value","name","type","setState","parseFloat","setCups","preventDefault","setIngredients","cupSize","possibleCups","toFixed","waterGrams","Math","round","coffeeGrams","CupGrindInput","onChange","onSubmit","Ingredients","label","RadioInput","checked"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst DefaultCups = 2;\nconst DefaultCoffee = 36;\nconst DefaultWater = 560;\nconst DefaultRatio = 15.5;\nconst CoffeeGrindsLabel = \"g coffee (ground)\";\nconst CupsLabel = \"10oz cups\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      goldenRatio: DefaultRatio, \n      cups: DefaultCups,\n      coffee: DefaultCoffee,\n      water: DefaultWater, \n      error: null,\n      selectedButton: 'no',\n    };\n\n    this.onSubmitChange = this.onSubmitChange.bind(this);\n    this.onSubmitCoffee = this.onSubmitCoffee.bind(this);\n    this.onSubmitCups = this.onSubmitCups.bind(this);\n  }\n\n  onSubmitChange(event) {\n    const target = event.target;\n    const value = event.target.value;\n    const name = target.name;\n\n    (target.type === 'checkbox') \n      ? this.setState({ selectedButton: value })\n      : (!value) //if empty string is submitted set state value to zero***\n      ? this.setState({ [name]: \"\"})\n      : this.setState({ [name]: parseFloat(value) });\n  }\n\n  onSubmitCoffee(event) {\n    const { coffee, goldenRatio } = this.state;\n    this.setCups(coffee, goldenRatio);\n    event.preventDefault();\n  }\n\n  onSubmitCups(event) {\n    const { cups, goldenRatio } = this.state;\n    this.setIngredients(cups, goldenRatio);\n    event.preventDefault();\n  }\n\n  setCups(coffee, goldenRatio, cupSize = 280) {\n    const possibleCups = ((coffee * goldenRatio) / cupSize).toFixed(1);\n    this.setIngredients(possibleCups, goldenRatio);\n  }\n\n  setIngredients(cups, goldenRatio, cupSize=280) {\n\n    const waterGrams = Math.round(cups * cupSize);\n    const coffeeGrams = Math.round(waterGrams / goldenRatio);\n\n    this.setState({\n        cups: cups,\n        coffee: coffeeGrams,\n        water: waterGrams\n    });\n  }\n\n  render() {\n    const { cups, coffee, water, selectedButton } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Brew Ratio</h1>\n        </header>\n        <main>\n          <div className=\"interactions\">\n            <h2>Coffee beans running low?</h2>\n            <p>Check \"yes\" below if you have a random amount of ground coffee left to brew.</p>\n            <p>Check \"no\" if you prefer to brew a specific number of cups.</p>\n            <form>\n              <RadioInput \n                value=\"yes\"\n                onChange={this.onSubmitChange}\n                checked={selectedButton === 'yes'}\n              />\n              <RadioInput \n                value=\"no\"\n                onChange={this.onSubmitChange}\n                checked={selectedButton === 'no'}\n              />\n              </form>\n          </div>\n          { (selectedButton === 'yes')\n            ? <div className=\"grindsInput\">\n                <div className=\"interactions\">\n                  <label>How much ground beans do you have (g)?\n                    <CupGrindInput \n                      name='coffee'\n                      value={coffee}\n                      onChange={this.onSubmitChange}\n                      onSubmit = {this.onSubmitCoffee}\n                    >\n                    </CupGrindInput>\n                  </label>\n                </div>  \n                <Ingredients\n                  coffee={cups}\n                  water={water}\n                  label={CupsLabel}\n                >\n                </Ingredients>\n              </div>  \n            : <div className=\"cupsInput\">\n                <div className=\"interactions\">\n                  <label>Desired {CupsLabel}:\n                    <CupGrindInput \n                      name='cups'\n                      value={cups}\n                      onChange={this.onSubmitChange}\n                      onSubmit = {this.onSubmitCups}\n                    >\n                    </CupGrindInput>\n                  </label>   \n                </div>\n                <Ingredients\n                  coffee={coffee}\n                  water={water}\n                  label={CoffeeGrindsLabel}\n                >\n                </Ingredients>\n              </div>\n            }  \n        </main>\n      </div>\n    );\n  }\n}\n\nconst CupGrindInput = ({name, value, onChange, onSubmit}) =>\n        <form onSubmit = {onSubmit}>\n            <input\n              name={name}\n              type=\"number\"\n              step=\".01\"\n              value={value}\n              onChange={onChange}\n            />\n          <button type=\"submit\" >\n            Submit\n          </button>\n        </form>\n\nconst Ingredients = ({ coffee, water, label }) =>\n  <div className=\"ingredients\">\n    <div className=\"coffeeOrCups\">\n      {coffee} {label}\n    </div>\n    <div className=\"water\"> \n      {water}g water\n    </div>\n  </div>\n\nconst RadioInput = ({ value, onChange, checked }) =>\n  <span className=\"radioButton\">\n    <input \n      type=\"checkbox\"\n      id={value}\n      name=\"coffeeLowQuestion\"\n      value={value}\n      onChange={onChange}\n      checked={checked}\n    />\n    <label htmlFor={value}>{value}</label>\n  </span>\n   \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}