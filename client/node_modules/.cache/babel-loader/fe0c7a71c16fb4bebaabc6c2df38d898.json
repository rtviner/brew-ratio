{"ast":null,"code":"import _defineProperty from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { Component } from 'react';\nimport { IncrementDecrementSet } from './increment.js';\nimport './App.css';\nvar DefaultCups = 2;\nvar DefaultCoffee = 36;\nvar DefaultWater = 560;\nvar DefaultRatio = \"15.5\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      goldenRatio: DefaultRatio,\n      cups: DefaultCups,\n      coffee: DefaultCoffee,\n      water: DefaultWater,\n      error: null\n    };\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmitCoffee = _this.onSubmitCoffee.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmitCups = _this.onSubmitCups.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onClick\",\n    value: function onClick(event) {\n      var target = event.target;\n      var value = event.target.value;\n      var name = target.name;\n      target.type === 'button' ? this.setState(_defineProperty({}, name, value)) : !value ? //if empty string is submitted set state value to zero***\n      this.setState(_defineProperty({}, name, \"\")) : this.setState(_defineProperty({}, name, parseFloat(value)));\n    }\n  }, {\n    key: \"onSubmitCoffee\",\n    value: function onSubmitCoffee(event) {\n      var _this$state = this.state,\n          coffee = _this$state.coffee,\n          goldenRatio = _this$state.goldenRatio;\n      this.setCups(coffee, parseFloat(goldenRatio));\n      event.preventDefault();\n    }\n  }, {\n    key: \"onSubmitCups\",\n    value: function onSubmitCups(event) {\n      var _this$state2 = this.state,\n          cups = _this$state2.cups,\n          goldenRatio = _this$state2.goldenRatio;\n      this.setIngredients(cups, parseFloat(goldenRatio));\n      event.preventDefault();\n    }\n  }, {\n    key: \"setCups\",\n    value: function setCups(coffee, goldenRatio) {\n      var cupSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 280;\n      var possibleCups = coffee * goldenRatio / cupSize;\n      var roundedPossibleCups = Math.round(possibleCups * 4) / 4;\n      this.setIngredients(roundedPossibleCups, goldenRatio);\n    }\n  }, {\n    key: \"setIngredients\",\n    value: function setIngredients(cups, goldenRatio) {\n      var cupSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 280;\n      var waterGrams = Math.round(cups * cupSize);\n      var coffeeGrams = Math.round(waterGrams / goldenRatio);\n      this.setState({\n        cups: cups,\n        coffee: coffeeGrams,\n        water: waterGrams\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          cups = _this$state3.cups,\n          coffee = _this$state3.coffee,\n          water = _this$state3.water,\n          goldenRatio = _this$state3.goldenRatio;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Brew Ratio\")), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"adjustables\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(IncrementDecrementSet, {\n        name: \"servings\",\n        title: \"Servings (8oz)\",\n        interval: cups,\n        setIntervalTime: this.onSubmitCups,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(IncrementDecrementSet, {\n        name: \"coffee\",\n        title: \"Ground Coffee (g)\",\n        interval: coffee,\n        setIntervalTime: this.onSubmitWater,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(IncrementDecrementSet, {\n        name: \"water\",\n        title: \"Water (g)\",\n        interval: water,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"strengthInput interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Coffee:1g Water\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(ButtonInput, {\n        className: goldenRatio === \"18\" ? \"active\" : \"inactive\",\n        id: \"light\",\n        name: \"goldenRatio\",\n        value: \"18\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"light\")), React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(ButtonInput, {\n        className: goldenRatio === \"15.5\" ? \"active\" : \"inactive\",\n        id: \"med\",\n        name: \"goldenRatio\",\n        value: \"15.5\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"med\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"medium\")), React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(ButtonInput, {\n        className: goldenRatio === \"13\" ? \"active\" : \"inactive\",\n        id: \"strong\",\n        name: \"goldenRatio\",\n        value: \"13\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"strong\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"strong\"))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar ButtonInput = function ButtonInput(_ref) {\n  var className = _ref.className,\n      id = _ref.id,\n      name = _ref.name,\n      value = _ref.value,\n      onClick = _ref.onClick;\n  return React.createElement(\"span\", {\n    className: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: className,\n    type: \"button\",\n    id: id,\n    name: name,\n    value: value,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","Component","IncrementDecrementSet","DefaultCups","DefaultCoffee","DefaultWater","DefaultRatio","App","props","state","goldenRatio","cups","coffee","water","error","onClick","bind","onSubmitCoffee","onSubmitCups","event","target","value","name","type","setState","parseFloat","setCups","preventDefault","setIngredients","cupSize","possibleCups","roundedPossibleCups","Math","round","waterGrams","coffeeGrams","onSubmitWater","ButtonInput","className","id"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AACA,OAAO,WAAP;AAEA,IAAMC,WAAW,GAAG,CAApB;AACA,IAAMC,aAAa,GAAG,EAAtB;AACA,IAAMC,YAAY,GAAG,GAArB;AACA,IAAMC,YAAY,GAAG,MAArB;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAEJ,YADF;AAEXK,MAAAA,IAAI,EAAER,WAFK;AAGXS,MAAAA,MAAM,EAAER,aAHG;AAIXS,MAAAA,KAAK,EAAER,YAJI;AAKXS,MAAAA,KAAK,EAAE;AALI,KAAb;AAQA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,uDAAf;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,uDAAtB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,uDAApB;AAbiB;AAclB;;;;4BAEOG,K,EAAO;AACb,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAGF,KAAK,CAACC,MAAN,CAAaC,KAA3B;AACA,UAAMC,IAAI,GAAGF,MAAM,CAACE,IAApB;AAECF,MAAAA,MAAM,CAACG,IAAP,KAAgB,QAAjB,GACI,KAAKC,QAAL,qBAAiBF,IAAjB,EAAwBD,KAAxB,EADJ,GAEK,CAAEA,KAAH,GAAW;AACX,WAAKG,QAAL,qBAAiBF,IAAjB,EAAwB,EAAxB,EADA,GAEA,KAAKE,QAAL,qBAAiBF,IAAjB,EAAwBG,UAAU,CAACJ,KAAD,CAAlC,EAJJ;AAKD;;;mCAEcF,K,EAAO;AAAA,wBACY,KAAKV,KADjB;AAAA,UACZG,MADY,eACZA,MADY;AAAA,UACJF,WADI,eACJA,WADI;AAEpB,WAAKgB,OAAL,CAAad,MAAb,EAAqBa,UAAU,CAACf,WAAD,CAA/B;AACAS,MAAAA,KAAK,CAACQ,cAAN;AACD;;;iCAEYR,K,EAAO;AAAA,yBACY,KAAKV,KADjB;AAAA,UACVE,IADU,gBACVA,IADU;AAAA,UACJD,WADI,gBACJA,WADI;AAElB,WAAKkB,cAAL,CAAoBjB,IAApB,EAA0Bc,UAAU,CAACf,WAAD,CAApC;AACAS,MAAAA,KAAK,CAACQ,cAAN;AACD;;;4BAEOf,M,EAAQF,W,EAA4B;AAAA,UAAfmB,OAAe,uEAAL,GAAK;AAC1C,UAAMC,YAAY,GAAIlB,MAAM,GAAGF,WAAV,GAAyBmB,OAA9C;AACA,UAAME,mBAAmB,GAAGC,IAAI,CAACC,KAAL,CAAWH,YAAY,GAAG,CAA1B,IAA+B,CAA3D;AAEA,WAAKF,cAAL,CAAoBG,mBAApB,EAAyCrB,WAAzC;AACD;;;mCAEcC,I,EAAMD,W,EAA0B;AAAA,UAAbmB,OAAa,uEAAL,GAAK;AAC7C,UAAMK,UAAU,GAAGF,IAAI,CAACC,KAAL,CAAWtB,IAAI,GAAGkB,OAAlB,CAAnB;AACA,UAAMM,WAAW,GAAGH,IAAI,CAACC,KAAL,CAAWC,UAAU,GAAGxB,WAAxB,CAApB;AAEA,WAAKc,QAAL,CAAc;AACVb,QAAAA,IAAI,EAAEA,IADI;AAEVC,QAAAA,MAAM,EAAEuB,WAFE;AAGVtB,QAAAA,KAAK,EAAEqB;AAHG,OAAd;AAKD;;;6BAEQ;AAAA,yBACsC,KAAKzB,KAD3C;AAAA,UACCE,IADD,gBACCA,IADD;AAAA,UACOC,MADP,gBACOA,MADP;AAAA,UACeC,KADf,gBACeA,KADf;AAAA,UACsBH,WADtB,gBACsBA,WADtB;AAGP,aAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,qBAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,KAAK,EAAC,gBAFR;AAGE,QAAA,QAAQ,EAAEC,IAHZ;AAIE,QAAA,eAAe,EAAE,KAAKO,YAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE,oBAAC,qBAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,mBAFR;AAGE,QAAA,QAAQ,EAAEN,MAHZ;AAIE,QAAA,eAAe,EAAE,KAAKwB,aAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAaE,oBAAC,qBAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAC,WAFR;AAGE,QAAA,QAAQ,EAAEvB,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,CADF,EAqBE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AACE,QAAA,SAAS,EAAKH,WAAW,KAAK,IAAjB,GAAyB,QAAzB,GAAoC,UADnD;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,IAAI,EAAC,aAHP;AAIE,QAAA,KAAK,EAAC,IAJR;AAKE,QAAA,OAAO,EAAE,KAAKK,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAQE;AAAO,QAAA,SAAS,EAAC,UAAjB;AAA4B,QAAA,OAAO,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,CAFF,EAaE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,SAAS,EAAKL,WAAW,KAAK,MAAjB,GAA2B,QAA3B,GAAsC,UADrD;AAEE,QAAA,EAAE,EAAC,KAFL;AAGE,QAAA,IAAI,EAAC,aAHP;AAIE,QAAA,KAAK,EAAC,MAJR;AAKE,QAAA,OAAO,EAAE,KAAKK,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE;AAAO,QAAA,SAAS,EAAC,UAAjB;AAA4B,QAAA,OAAO,EAAC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CAbF,EAwBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACG,QAAA,SAAS,EAAKL,WAAW,KAAK,IAAjB,GAAyB,QAAzB,GAAoC,UADpD;AAEE,QAAA,EAAE,EAAC,QAFL;AAGE,QAAA,IAAI,EAAC,aAHP;AAIE,QAAA,KAAK,EAAC,IAJR;AAKE,QAAA,OAAO,EAAE,KAAKK,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE;AAAO,QAAA,SAAS,EAAC,UAAjB;AAA4B,QAAA,OAAO,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CAxBF,CAFF,CArBF,CALF,CAFF;AAuED;;;;EArIed,S;;AAwIlB,IAAMoC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcC,EAAd,QAAcA,EAAd;AAAA,MAAkBjB,IAAlB,QAAkBA,IAAlB;AAAA,MAAwBD,KAAxB,QAAwBA,KAAxB;AAAA,MAA+BN,OAA/B,QAA+BA,OAA/B;AAAA,SAClB;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAIuB,SADf;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,EAAE,EAAEC,EAHN;AAIE,IAAA,IAAI,EAAEjB,IAJR;AAKE,IAAA,KAAK,EAAED,KALT;AAME,IAAA,OAAO,EAAEN,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADkB;AAAA,CAApB;;AAYA,eAAeR,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { IncrementDecrementSet } from './increment.js';\nimport './App.css';\n\nconst DefaultCups = 2;\nconst DefaultCoffee = 36;\nconst DefaultWater = 560;\nconst DefaultRatio = \"15.5\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      goldenRatio: DefaultRatio, \n      cups: DefaultCups,\n      coffee: DefaultCoffee,\n      water: DefaultWater, \n      error: null,\n    };\n\n    this.onClick = this.onClick.bind(this);\n    this.onSubmitCoffee = this.onSubmitCoffee.bind(this);\n    this.onSubmitCups = this.onSubmitCups.bind(this);\n  }\n\n  onClick(event) {\n    const target = event.target;\n    const value = event.target.value;\n    const name = target.name;\n\n    (target.type === 'button')\n      ? this.setState({ [name]: value })\n      : (!(value)) //if empty string is submitted set state value to zero***\n      ? this.setState({ [name]: \"\"})\n      : this.setState({ [name]: parseFloat(value)});\n  }\n\n  onSubmitCoffee(event) {\n    const { coffee, goldenRatio } = this.state;\n    this.setCups(coffee, parseFloat(goldenRatio));\n    event.preventDefault();\n  }\n\n  onSubmitCups(event) {\n    const { cups, goldenRatio } = this.state;\n    this.setIngredients(cups, parseFloat(goldenRatio));\n    event.preventDefault();\n  }\n\n  setCups(coffee, goldenRatio, cupSize = 280) {\n    const possibleCups = (coffee * goldenRatio) / cupSize;\n    const roundedPossibleCups = Math.round(possibleCups * 4) / 4;\n\n    this.setIngredients(roundedPossibleCups, goldenRatio);\n  }\n\n  setIngredients(cups, goldenRatio, cupSize=280) {   \n    const waterGrams = Math.round(cups * cupSize);\n    const coffeeGrams = Math.round(waterGrams / goldenRatio);\n\n    this.setState({\n        cups: cups,\n        coffee: coffeeGrams,\n        water: waterGrams\n    });\n  }\n\n  render() {\n    const { cups, coffee, water, goldenRatio } = this.state;\n\n    return (\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Brew Ratio</h1>\n        </header>\n\n        <main>\n          <div id=\"adjustables\">\n            <IncrementDecrementSet\n              name=\"servings\"\n              title=\"Servings (8oz)\"\n              interval={cups}\n              setIntervalTime={this.onSubmitCups}\n            />\n            <IncrementDecrementSet\n              name=\"coffee\"\n              title=\"Ground Coffee (g)\"\n              interval={coffee}\n              setIntervalTime={this.onSubmitWater}\n            />\n            <IncrementDecrementSet\n              name=\"water\"\n              title=\"Water (g)\"\n              interval={water}\n            />\n          </div>\n\n          <div className=\"strengthInput interactions\">\n            <h2>Coffee:1g Water</h2>\n            <form> \n\n              <div className=\"strength\"> \n                  <ButtonInput\n                    className = {(goldenRatio === \"18\") ? \"active\" : \"inactive\"} \n                    id=\"light\"\n                    name=\"goldenRatio\"\n                    value=\"18\"\n                    onClick={this.onClick}\n                  />\n                <label className=\"strength\" htmlFor=\"light\">light</label>\n              </div>\n\n              <div className=\"strength\">\n                <ButtonInput\n                  className = {(goldenRatio === \"15.5\") ? \"active\" : \"inactive\"} \n                  id=\"med\"\n                  name=\"goldenRatio\"\n                  value=\"15.5\"\n                  onClick={this.onClick}\n                />\n                <label className=\"strength\" htmlFor=\"med\">medium</label>\n              </div>\n\n              <div className=\"strength\">\n                <ButtonInput\n                   className = {(goldenRatio === \"13\") ? \"active\" : \"inactive\"}\n                  id=\"strong\"\n                  name=\"goldenRatio\"                \n                  value=\"13\"\n                  onClick={this.onClick}\n                />\n                <label className=\"strength\" htmlFor=\"strong\">strong</label>\n              </div>\n\n            </form>\n          </div>\n\n        </main>\n      </div>\n    );\n  }\n}\n\nconst ButtonInput = ({ className, id, name, value, onClick }) =>\n  <span className=\"button\">\n    <input\n      className = {className}\n      type=\"button\"\n      id={id}\n      name={name}\n      value={value}\n      onClick={onClick}\n    />   \n  </span>\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}