{"ast":null,"code":"import _slicedToArray from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport BrewMethodInput from './components/BrewMethodInput';\nimport QuantityInput from './components/QuantityInput';\nimport StrengthInput from './components/StrengthInput';\nimport Timer from './components/Timer';\nvar DefaultMethod = \"Pour Over\";\nvar DefaultWater = 558;\nvar DefaultRatio = 15.5;\nvar DefaultSeconds = 180;\n\nvar App = function App() {\n  var _useState = useState(DefaultMethod),\n      _useState2 = _slicedToArray(_useState, 2),\n      method = _useState2[0],\n      setMethod = _useState2[1];\n\n  var _useState3 = useState(DefaultRatio),\n      _useState4 = _slicedToArray(_useState3, 2),\n      goldenRatio = _useState4[0],\n      setGoldenRatio = _useState4[1];\n\n  var _useState5 = useState(DefaultWater),\n      _useState6 = _slicedToArray(_useState5, 2),\n      waterGrams = _useState6[0],\n      setWaterGrams = _useState6[1];\n\n  var _useState7 = useState(DefaultSeconds),\n      _useState8 = _slicedToArray(_useState7, 2),\n      seconds = _useState8[0],\n      setSeconds = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      timerOn = _useState10[0],\n      setTimerOn = _useState10[1]; // useEffect(() => {\n  //   const method = localStorage.getItem('method') || DefaultMethod;\n  //   const goldenRatio = parseFloat(localStorage.getItem('goldenRatio')) || DefaultRatio;\n  //   const waterGrams = parseFloat(localStorage.getItem('waterGrams'))\n  //       || DefaultWater;\n  //   const seconds = parseFloat(localStorage.getItem('seconds'))\n  //       || DefaultSeconds;\n  //   setMethod(method);\n  //   setGoldenRatio(goldenRatio);\n  //   setWaterGrams(waterGrams);\n  //   setSeconds(seconds);\n  // }, []);\n\n\n  useEffect(function () {\n    var tick = null;\n\n    if (timerOn && seconds > 0) {\n      var endTime = new Date().getTime() + seconds * 1000 + 500;\n\n      var updateClock = function updateClock() {\n        var msLeft = endTime - new Date().getTime();\n\n        if (msLeft >= 0) {\n          setSeconds(Math.floor(msLeft / 1000));\n          tick = setTimeout(updateClock, new Date(msLeft).getUTCMilliseconds() + 500);\n        }\n      };\n\n      updateClock();\n    } else if (!timerOn) {\n      clearInterval(tick);\n    }\n\n    return function () {\n      return clearInterval(tick);\n    };\n  }, [timerOn, seconds]);\n\n  var stepUpTime = function stepUpTime() {\n    var currentSeconds = seconds;\n\n    if (!timerOn && currentSeconds < 420) {\n      var newSeconds = currentSeconds + 1;\n      setSeconds(newSeconds);\n    }\n  };\n\n  var stepDownTime = function stepDownTime() {\n    var currentSeconds = seconds;\n\n    if (!timerOn && seconds > 0) {\n      var newSeconds = currentSeconds - 1;\n      setSeconds(newSeconds);\n    }\n  };\n\n  var resetTimer = function resetTimer() {\n    setSeconds(DefaultSeconds);\n    setTimerOn(false);\n  };\n\n  var playPause = function playPause() {\n    setTimerOn(!timerOn);\n  };\n\n  var changeMethod = function changeMethod(event) {\n    var method = event.target.value;\n    setMethod(method);\n  };\n\n  var updateGoldenRatio = function updateGoldenRatio(event) {\n    var ratio = event.target.value;\n    setGoldenRatio(parseFloat(ratio));\n  };\n\n  var updateWater = function updateWater(event) {\n    var eventInfo = event.target.id.split('-');\n    var value = event.target.type === 'number' ? event.target.value : waterGrams;\n    var newWater;\n\n    if (eventInfo[0] === 'cups') {\n      if (eventInfo[1] === 'amount') {\n        newWater = value * 279;\n      } else {\n        newWater = eventInfo[1] === 'decrement' && waterGrams >= 69.75 ? value - 69.75 : value + 69.75;\n      }\n    } else if (eventInfo[0] === 'coffeeGrams') {\n      if (eventInfo[1] === 'amount') {\n        newWater = value * goldenRatio;\n      } else {\n        newWater = eventInfo[1] === 'decrement' && waterGrams >= goldenRatio ? value - goldenRatio : value + goldenRatio;\n      }\n    } else if (eventInfo[0] === 'waterGrams') {\n      if (eventInfo[1] === 'amount') {\n        newWater = value;\n      } else {\n        newWater = eventInfo[1] === 'decrement' && waterGrams >= 1 ? value - 1 : value + 1;\n      }\n    }\n\n    setWaterGrams(newWater);\n  };\n\n  var saveSettings = function saveSettings() {\n    localStorage.setItem('method', method);\n    localStorage.setItem('goldenRatio', {\n      goldenRatio: goldenRatio\n    });\n    localStorage.setItem('waterGrams', {\n      waterGrams: waterGrams\n    });\n    localStorage.setItem('seconds', {\n      seconds: seconds\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(BrewMethodInput, {\n    method: method,\n    setMethod: changeMethod,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(StrengthInput, {\n    goldenRatio: goldenRatio,\n    setGoldenRatio: updateGoldenRatio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(QuantityInput, {\n    waterGrams: waterGrams,\n    goldenRatio: goldenRatio,\n    updateWater: updateWater,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(Timer, {\n    seconds: seconds,\n    stepUpTime: stepUpTime,\n    stepDownTime: stepDownTime,\n    resetTimer: resetTimer,\n    playPause: playPause,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    id: \"saveSettings\",\n    className: \"rectButton\",\n    type: \"button\",\n    onClick: saveSettings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Save Settings\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","useState","useEffect","BrewMethodInput","QuantityInput","StrengthInput","Timer","DefaultMethod","DefaultWater","DefaultRatio","DefaultSeconds","App","method","setMethod","goldenRatio","setGoldenRatio","waterGrams","setWaterGrams","seconds","setSeconds","timerOn","setTimerOn","tick","endTime","Date","getTime","updateClock","msLeft","Math","floor","setTimeout","getUTCMilliseconds","clearInterval","stepUpTime","currentSeconds","newSeconds","stepDownTime","resetTimer","playPause","changeMethod","event","target","value","updateGoldenRatio","ratio","parseFloat","updateWater","eventInfo","id","split","type","newWater","saveSettings","localStorage","setItem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport './App.css';\n\nimport BrewMethodInput from './components/BrewMethodInput'\nimport QuantityInput from './components/QuantityInput';\nimport StrengthInput from './components/StrengthInput';\nimport Timer from './components/Timer';\n\nconst DefaultMethod = \"Pour Over\"\nconst DefaultWater = 558\nconst DefaultRatio = 15.5\nconst DefaultSeconds = 180;\n\nconst App = () => {\n  const [method, setMethod] = useState(DefaultMethod);\n  const [goldenRatio, setGoldenRatio] = useState(DefaultRatio);\n  const [waterGrams, setWaterGrams] = useState(DefaultWater);\n  const [seconds, setSeconds] = useState(DefaultSeconds);\n  const [timerOn, setTimerOn] = useState(false);\n  \n  // useEffect(() => {\n  //   const method = localStorage.getItem('method') || DefaultMethod;\n  //   const goldenRatio = parseFloat(localStorage.getItem('goldenRatio')) || DefaultRatio;\n  //   const waterGrams = parseFloat(localStorage.getItem('waterGrams'))\n  //       || DefaultWater;\n  //   const seconds = parseFloat(localStorage.getItem('seconds'))\n  //       || DefaultSeconds;\n\n  //   setMethod(method);\n  //   setGoldenRatio(goldenRatio);\n  //   setWaterGrams(waterGrams);\n  //   setSeconds(seconds);\n  // }, []);\n\n  useEffect(() => {\n    var tick = null;\n    \n    if (timerOn && seconds > 0) {\n      let endTime = new Date().getTime() +seconds * 1000 + 500;\n\n      const updateClock = () => {\n        let msLeft = endTime - new Date().getTime();\n\n        if (msLeft >= 0) {\n          setSeconds(Math.floor(msLeft/1000));\n\n          tick = setTimeout(\n            updateClock,\n            new Date(msLeft).getUTCMilliseconds() + 500\n          );\n        }\n      }\n      updateClock()\n    } else if (!timerOn) {\n      clearInterval(tick);\n    }\n    return () => clearInterval(tick);\n  }, [timerOn, seconds]);\n\n  const stepUpTime = () => {\n    const currentSeconds = seconds;\n\n    if (!timerOn && currentSeconds < 420) {\n      let newSeconds = currentSeconds + 1;\n      setSeconds(newSeconds);\n    }\n  };\n\n  const stepDownTime = () => {\n    const currentSeconds = seconds;\n\n    if (!timerOn && seconds > 0) {\n      let newSeconds = currentSeconds - 1;\n      setSeconds(newSeconds);\n    }\n  };\n\n  const resetTimer = () => {\n    setSeconds(DefaultSeconds);\n    setTimerOn(false);\n  };\n\n  const playPause = () => {\n    setTimerOn(!timerOn);\n  };\n\n  const changeMethod = (event) => {\n    let method = event.target.value;\n    setMethod(method);\n  };\n\n  const updateGoldenRatio = (event) => {\n    let ratio = event.target.value;\n    setGoldenRatio(parseFloat(ratio));\n  };\n\n  const updateWater = (event) => {\n    const eventInfo = event.target.id.split('-')\n    let value = event.target.type === 'number' ? event.target.value : waterGrams\n    let newWater\n\n    if (eventInfo[0] === 'cups') {\n      if (eventInfo[1] === 'amount') {\n        newWater = value * 279\n      } else {\n        newWater =\n          eventInfo[1] === 'decrement' && waterGrams >= 69.75\n            ? value - 69.75\n            : value + 69.75\n      }\n    } else if (eventInfo[0] === 'coffeeGrams') {\n      if (eventInfo[1] === 'amount') {\n        newWater = value * goldenRatio\n      } else {\n        newWater =\n          eventInfo[1] === 'decrement' && waterGrams >= goldenRatio\n            ? value - goldenRatio\n            : value + goldenRatio\n      }\n    } else if (eventInfo[0] === 'waterGrams') {\n      if (eventInfo[1] === 'amount') {\n        newWater = value\n      } else {\n        newWater =\n          eventInfo[1] === 'decrement' && waterGrams >= 1\n            ? value - 1\n            : value + 1\n      }\n    }\n    setWaterGrams(newWater);\n  };\n\n  const saveSettings = () => {\n    localStorage.setItem('method', method);\n    localStorage.setItem('goldenRatio', \n      {goldenRatio});\n    localStorage.setItem('waterGrams', \n      {waterGrams});\n    localStorage.setItem('seconds', {seconds})\n  };\n\n  return (\n    <div className=\"App\">\n      <main>\n        <BrewMethodInput\n          method = {method}\n          setMethod = {changeMethod}\n        />\n        <StrengthInput \n          goldenRatio = {goldenRatio}\n          setGoldenRatio = {updateGoldenRatio}\n        />\n        <QuantityInput \n          waterGrams = {waterGrams}\n          goldenRatio = {goldenRatio}\n          updateWater = {updateWater}\n        />\n        <Timer \n          seconds = {seconds}\n          stepUpTime = {stepUpTime}\n          stepDownTime = {stepDownTime}\n          resetTimer = {resetTimer}\n          playPause = {playPause}\n        />\n        <button\n          id=\"saveSettings\"\n          className=\"rectButton\"\n          type=\"button\"\n          onClick={saveSettings}\n        >\n          Save Settings\n        </button>\n      </main>\n    </div>\n  );\n};\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}