{"ast":null,"code":"import _classCallCheck from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { Component } from 'react';\nimport { IncrementDecrementSet } from './increment.js';\nimport { InputButton } from \"./inputButton.js\";\nimport './App.css';\nvar DefaultServings = 2;\nvar DefaultCoffee = 36;\nvar DefaultWater = 560;\nvar DefaultRatio = \"15.5\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      goldenRatio: DefaultRatio,\n      servings: DefaultServings,\n      coffeeGrams: DefaultCoffee,\n      waterGrams: DefaultWater,\n      error: null\n    };\n    _this.setQuantity = _this.setQuantity.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmitCoffee = _this.onSubmitCoffee.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmitServings = _this.onSubmitServins.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"setQuantity\",\n    value: function setQuantity(event) {\n      console.log(event.target);\n      var _this$state = this.state,\n          servings = _this$state.servings,\n          coffeeGrams = _this$state.coffeeGrams,\n          waterGrams = _this$state.waterGrams,\n          goldenRatio = _this$state.goldenRatio;\n      var eventInfo = event.target.id.split(\"-\");\n      var name = eventInfo[0];\n      var currentQuantity = this.state[name];\n      console.log(\"eventInfo:\", eventInfo, \"currentQuantity:\", currentQuantity);\n    } // this is used only for golden ratio right now not working for other inputs...\n    // onClick(event) {\n    //   const target = event.target;\n    //   const value = event.target.value;\n    //   const name = target.name;\n    //   console.log(\"target:\", target, \"value:\", value, name);\n    //   (target.type === 'button')\n    //     ? this.setState({ [name]: value })\n    //     : (!(value)) //if empty string is submitted set state value to zero***\n    //     ? this.setState({ [name]: \"\"})\n    //     : this.setState({ [name]: parseFloat(value)});\n    // }\n    //no longer a submit button\n\n  }, {\n    key: \"onSubmitCoffee\",\n    value: function onSubmitCoffee(event) {\n      var _this$state2 = this.state,\n          coffeeGrams = _this$state2.coffeeGrams,\n          goldenRatio = _this$state2.goldenRatio;\n      this.setServings(coffeeGrams, parseFloat(goldenRatio));\n      event.preventDefault();\n    } //no longer a submit button\n\n  }, {\n    key: \"onSubmitServings\",\n    value: function onSubmitServings(event) {\n      var _this$state3 = this.state,\n          servings = _this$state3.servings,\n          goldenRatio = _this$state3.goldenRatio;\n      this.setIngredients(servings, parseFloat(goldenRatio));\n      event.preventDefault();\n    } //this is not being called right now\n\n  }, {\n    key: \"setServings\",\n    value: function setServings(coffeeGrams, goldenRatio) {\n      var servingSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 280;\n      var possibleServings = coffeeGrams * goldenRatio / servingSize;\n      var roundedPossibleServings = Math.round(possibleServings * 4) / 4;\n      this.setIngredients(roundedPossibleServings, goldenRatio);\n    } //this is not being called right now\n\n  }, {\n    key: \"setIngredients\",\n    value: function setIngredients(servings, goldenRatio) {\n      var servingSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 280;\n      var waterGrams = Math.round(servings * servingSize);\n      var coffeeGrams = Math.round(waterGrams / goldenRatio);\n      this.setState({\n        servings: servings,\n        coffeeGrams: coffeeGrams,\n        waterGrams: waterGrams\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state4 = this.state,\n          servings = _this$state4.servings,\n          coffeeGrams = _this$state4.coffeeGrams,\n          waterGrams = _this$state4.waterGrams,\n          goldenRatio = _this$state4.goldenRatio;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Brew Ratio\")), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"adjustables\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(IncrementDecrementSet, {\n        name: \"servings\",\n        title: \"Servings (8oz)\",\n        value: servings,\n        setIntervalTime: this.setQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(IncrementDecrementSet, {\n        name: \"coffee\",\n        title: \"Ground Coffee (g)\",\n        value: coffeeGrams,\n        setIntervalTime: this.setQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(IncrementDecrementSet, {\n        name: \"water\",\n        title: \"Water (g)\",\n        value: waterGrams,\n        setIntervalTime: this.setQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"strengthInput interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"g Coffee:1g Water\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(InputButton, {\n        className: goldenRatio === \"18\" ? \"active\" : \"inactive\",\n        id: \"light\",\n        name: \"goldenRatio\",\n        value: \"18\",\n        onClick: this.setQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"light\")), React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(InputButton, {\n        className: goldenRatio === \"15.5\" ? \"active\" : \"inactive\",\n        id: \"med\",\n        name: \"goldenRatio\",\n        value: \"15.5\",\n        onClick: this.setQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"med\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"medium\")), React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(InputButton, {\n        className: goldenRatio === \"13\" ? \"active\" : \"inactive\",\n        id: \"strong\",\n        name: \"goldenRatio\",\n        value: \"13\",\n        onClick: this.setQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"strong\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"strong\"))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","Component","IncrementDecrementSet","InputButton","DefaultServings","DefaultCoffee","DefaultWater","DefaultRatio","App","props","state","goldenRatio","servings","coffeeGrams","waterGrams","error","setQuantity","bind","onSubmitCoffee","onSubmitServings","onSubmitServins","event","console","log","target","eventInfo","id","split","name","currentQuantity","setServings","parseFloat","preventDefault","setIngredients","servingSize","possibleServings","roundedPossibleServings","Math","round","setState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { IncrementDecrementSet } from './increment.js';\nimport { InputButton } from \"./inputButton.js\";\nimport './App.css';\n\nconst DefaultServings = 2;\nconst DefaultCoffee = 36;\nconst DefaultWater = 560;\nconst DefaultRatio = \"15.5\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      goldenRatio: DefaultRatio, \n      servings: DefaultServings,\n      coffeeGrams: DefaultCoffee,\n      waterGrams: DefaultWater, \n      error: null,\n    };\n\n    this.setQuantity = this.setQuantity.bind(this);\n    this.onSubmitCoffee = this.onSubmitCoffee.bind(this);\n    this.onSubmitServings = this.onSubmitServins.bind(this);\n  }\n\n  setQuantity (event) {\n    console.log(event.target);\n\n    const { servings, coffeeGrams, waterGrams, goldenRatio } = this.state;\n    const eventInfo = event.target.id.split(\"-\");\n    const name = eventInfo[0];\n    const currentQuantity  = this.state[name];\n\n    console.log(\"eventInfo:\", eventInfo, \"currentQuantity:\", currentQuantity);\n  }\n\n// this is used only for golden ratio right now not working for other inputs...\n  // onClick(event) {\n  //   const target = event.target;\n  //   const value = event.target.value;\n  //   const name = target.name;\n  //   console.log(\"target:\", target, \"value:\", value, name);\n\n  //   (target.type === 'button')\n  //     ? this.setState({ [name]: value })\n  //     : (!(value)) //if empty string is submitted set state value to zero***\n  //     ? this.setState({ [name]: \"\"})\n  //     : this.setState({ [name]: parseFloat(value)});\n  // }\n\n//no longer a submit button\n\n  onSubmitCoffee(event) {\n    const { coffeeGrams, goldenRatio } = this.state;\n    this.setServings(coffeeGrams, parseFloat(goldenRatio));\n    event.preventDefault();\n  }\n\n//no longer a submit button\n  onSubmitServings(event) {\n    const { servings, goldenRatio } = this.state;\n    this.setIngredients(servings, parseFloat(goldenRatio));\n    event.preventDefault();\n  }\n\n//this is not being called right now\n  setServings(coffeeGrams, goldenRatio, servingSize = 280) {\n    const possibleServings = (coffeeGrams * goldenRatio) / servingSize;\n    const roundedPossibleServings = Math.round(possibleServings * 4) / 4;\n\n    this.setIngredients(roundedPossibleServings, goldenRatio);\n  }\n\n//this is not being called right now\n  setIngredients(servings, goldenRatio, servingSize=280) {   \n    const waterGrams = Math.round(servings * servingSize);\n    const coffeeGrams = Math.round(waterGrams / goldenRatio);\n\n    this.setState({\n        servings: servings,\n        coffeeGrams: coffeeGrams,\n        waterGrams: waterGrams\n    });\n  }\n\n  render() {\n    const { servings, coffeeGrams, waterGrams, goldenRatio } = this.state;\n\n    return (\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Brew Ratio</h1>\n        </header>\n\n        <main>\n          <div id=\"adjustables\">\n            <IncrementDecrementSet\n              name=\"servings\"\n              title=\"Servings (8oz)\"\n              value={servings}\n              setIntervalTime={this.setQuantity}\n            />\n            <IncrementDecrementSet\n              name=\"coffee\"\n              title=\"Ground Coffee (g)\"\n              value={coffeeGrams}\n              setIntervalTime={this.setQuantity}\n            />\n            <IncrementDecrementSet\n              name=\"water\"\n              title=\"Water (g)\"\n              value={waterGrams}\n              setIntervalTime={this.setQuantity}\n            />\n          </div>\n\n          <div className=\"strengthInput interactions\">\n            <h2>g Coffee:1g Water</h2>\n            <form> \n\n              <div className=\"strength\"> \n                  <InputButton\n                    className = {(goldenRatio === \"18\") ? \"active\" : \"inactive\"} \n                    id=\"light\"\n                    name=\"goldenRatio\"\n                    value=\"18\"\n                    onClick={this.setQuantity}\n                  />\n                <label className=\"strength\" htmlFor=\"light\">light</label>\n              </div>\n\n              <div className=\"strength\">\n                <InputButton\n                  className = {(goldenRatio === \"15.5\") ? \"active\" : \"inactive\"} \n                  id=\"med\"\n                  name=\"goldenRatio\"\n                  value=\"15.5\"\n                  onClick={this.setQuantity}\n                />\n                <label className=\"strength\" htmlFor=\"med\">medium</label>\n              </div>\n\n              <div className=\"strength\">\n                <InputButton\n                   className = {(goldenRatio === \"13\") ? \"active\" : \"inactive\"}\n                  id=\"strong\"\n                  name=\"goldenRatio\"                \n                  value=\"13\"\n                  onClick={this.setQuantity}\n                />\n                <label className=\"strength\" htmlFor=\"strong\">strong</label>\n              </div>\n\n            </form>\n          </div>\n\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}