{"ast":null,"code":"import _defineProperty from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nvar DefaultCups = 2;\nvar DefaultCoffee = 36;\nvar DefaultWater = 560;\nvar DefaultRatio = 15.5;\nvar CoffeeGrindsLabel = \"g coffee (ground)\";\nvar CupsLabel = \"10oz cups\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      goldenRatio: DefaultRatio,\n      cups: DefaultCups,\n      coffee: DefaultCoffee,\n      water: DefaultWater,\n      error: null,\n      coffeeLow: 'no'\n    };\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmitCoffee = _this.onSubmitCoffee.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmitCups = _this.onSubmitCups.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onClick\",\n    value: function onClick(event) {\n      var target = event.target;\n      console.log(\"target: \", target);\n      var value = event.target.value;\n      console.log(\"value: \", value);\n      var name = target.name;\n      console.log(\"name: \", name);\n      target.type === 'button' ? this.setState(_defineProperty({}, name, value)) : isNaN(value) ? //if empty string is submitted set state value to zero***\n      this.setState(_defineProperty({}, name, \"\")) : this.setState(_defineProperty({}, name, parseFloat(value)));\n    }\n  }, {\n    key: \"onSubmitCoffee\",\n    value: function onSubmitCoffee(event) {\n      var _this$state = this.state,\n          coffee = _this$state.coffee,\n          goldenRatio = _this$state.goldenRatio;\n      this.setCups(coffee, goldenRatio);\n      event.preventDefault();\n    }\n  }, {\n    key: \"onSubmitCups\",\n    value: function onSubmitCups(event) {\n      var _this$state2 = this.state,\n          cups = _this$state2.cups,\n          goldenRatio = _this$state2.goldenRatio;\n      this.setIngredients(cups, goldenRatio);\n      event.preventDefault();\n    }\n  }, {\n    key: \"setCups\",\n    value: function setCups(coffee, goldenRatio) {\n      var cupSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 280;\n      var possibleCups = coffee * goldenRatio / cupSize;\n      var roundedPossibleCups = Math.round(possibleCups * 4) / 4;\n      this.setIngredients(roundedPossibleCups, goldenRatio);\n    }\n  }, {\n    key: \"setIngredients\",\n    value: function setIngredients(cups, goldenRatio) {\n      var cupSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 280;\n      var waterGrams = Math.round(cups * cupSize);\n      var coffeeGrams = Math.round(waterGrams / goldenRatio);\n      this.setState({\n        cups: cups,\n        coffee: coffeeGrams,\n        water: waterGrams\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          cups = _this$state3.cups,\n          coffee = _this$state3.coffee,\n          water = _this$state3.water,\n          coffeeLow = _this$state3.coffeeLow;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Brew Ratio\")), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Coffee beans running low?\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Click \\\"yes\\\" below if you have a random amount of ground coffee left to brew.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Click \\\"no\\\" if you prefer to brew a specific number of cups.\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(ButtonInput, {\n        name: \"coffeeLow\",\n        value: \"yes\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(ButtonInput, {\n        name: \"coffeeLow\",\n        value: \"no\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"strengthInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Desired Strength\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(ButtonInput, {\n        id: \"light\",\n        name: \"goldenRatio\",\n        value: \"13\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"light\"), React.createElement(ButtonInput, {\n        id: \"med\",\n        name: \"goldenRatio\",\n        value: \"15.5\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"med\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"medium\"), React.createElement(ButtonInput, {\n        id: \"strong\",\n        name: \"goldenRatio\",\n        value: \"18\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"strong\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"strong\"))), coffeeLow === 'yes' ? React.createElement(\"div\", {\n        className: \"grindsInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"coffeeInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Ground Coffee (g):\")), React.createElement(CupGrindInput, {\n        id: \"coffeeInput\",\n        name: \"coffee\",\n        onChange: this.onSubmitChange,\n        onSubmit: this.onSubmitCoffee,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(Ingredients, {\n        coffee: cups,\n        water: water,\n        label: CupsLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        className: \"cupsInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"cupsInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Desired \", CupsLabel, \":\")), React.createElement(CupGrindInput, {\n        id: \"cupsInput\",\n        name: \"cups\",\n        onChange: this.onSubmitChange,\n        onSubmit: this.onSubmitCups,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })), React.createElement(Ingredients, {\n        coffee: coffee,\n        water: water,\n        label: CoffeeGrindsLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar CupGrindInput = function CupGrindInput(_ref) {\n  var name = _ref.name,\n      onChange = _ref.onChange,\n      onSubmit = _ref.onSubmit;\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: name,\n    type: \"number\",\n    step: \".01\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nvar Ingredients = function Ingredients(_ref2) {\n  var coffee = _ref2.coffee,\n      water = _ref2.water,\n      label = _ref2.label;\n  return React.createElement(\"div\", {\n    className: \"ingredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"coffeeOrCups\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, coffee, \" \", label), React.createElement(\"div\", {\n    className: \"water\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, water, \" g water\"));\n};\n\nvar ButtonInput = function ButtonInput(_ref3) {\n  var name = _ref3.name,\n      value = _ref3.value,\n      onClick = _ref3.onClick;\n  return React.createElement(\"span\", {\n    className: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"button\",\n    id: value,\n    name: name,\n    value: value,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","Component","DefaultCups","DefaultCoffee","DefaultWater","DefaultRatio","CoffeeGrindsLabel","CupsLabel","App","props","state","goldenRatio","cups","coffee","water","error","coffeeLow","onClick","bind","onSubmitCoffee","onSubmitCups","event","target","console","log","value","name","type","setState","isNaN","parseFloat","setCups","preventDefault","setIngredients","cupSize","possibleCups","roundedPossibleCups","Math","round","waterGrams","coffeeGrams","onSubmitChange","CupGrindInput","onChange","onSubmit","Ingredients","label","ButtonInput"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,IAAMC,WAAW,GAAG,CAApB;AACA,IAAMC,aAAa,GAAG,EAAtB;AACA,IAAMC,YAAY,GAAG,GAArB;AACA,IAAMC,YAAY,GAAG,IAArB;AACA,IAAMC,iBAAiB,GAAG,mBAA1B;AACA,IAAMC,SAAS,GAAG,WAAlB;;IAGMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAEN,YADF;AAEXO,MAAAA,IAAI,EAAEV,WAFK;AAGXW,MAAAA,MAAM,EAAEV,aAHG;AAIXW,MAAAA,KAAK,EAAEV,YAJI;AAKXW,MAAAA,KAAK,EAAE,IALI;AAMXC,MAAAA,SAAS,EAAE;AANA,KAAb;AASA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,uDAAf;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,uDAAtB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,uDAApB;AAdiB;AAelB;;;;4BAEOG,K,EAAO;AACb,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AACA,UAAMG,KAAK,GAAGJ,KAAK,CAACC,MAAN,CAAaG,KAA3B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,KAAvB;AACA,UAAMC,IAAI,GAAGJ,MAAM,CAACI,IAApB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,IAAtB;AAECJ,MAAAA,MAAM,CAACK,IAAP,KAAgB,QAAjB,GACI,KAAKC,QAAL,qBAAiBF,IAAjB,EAAwBD,KAAxB,EADJ,GAEKI,KAAK,CAACJ,KAAD,CAAN,GAAe;AACf,WAAKG,QAAL,qBAAiBF,IAAjB,EAAwB,EAAxB,EADA,GAEA,KAAKE,QAAL,qBAAiBF,IAAjB,EAAwBI,UAAU,CAACL,KAAD,CAAlC,EAJJ;AAKD;;;mCAEcJ,K,EAAO;AAAA,wBACY,KAAKX,KADjB;AAAA,UACZG,MADY,eACZA,MADY;AAAA,UACJF,WADI,eACJA,WADI;AAEpB,WAAKoB,OAAL,CAAalB,MAAb,EAAqBF,WAArB;AACAU,MAAAA,KAAK,CAACW,cAAN;AACD;;;iCAEYX,K,EAAO;AAAA,yBACY,KAAKX,KADjB;AAAA,UACVE,IADU,gBACVA,IADU;AAAA,UACJD,WADI,gBACJA,WADI;AAElB,WAAKsB,cAAL,CAAoBrB,IAApB,EAA0BD,WAA1B;AACAU,MAAAA,KAAK,CAACW,cAAN;AACD;;;4BAEOnB,M,EAAQF,W,EAA4B;AAAA,UAAfuB,OAAe,uEAAL,GAAK;AAC1C,UAAMC,YAAY,GAAItB,MAAM,GAAGF,WAAV,GAAyBuB,OAA9C;AACA,UAAME,mBAAmB,GAAGC,IAAI,CAACC,KAAL,CAAWH,YAAY,GAAG,CAA1B,IAA+B,CAA3D;AAEA,WAAKF,cAAL,CAAoBG,mBAApB,EAAyCzB,WAAzC;AACD;;;mCAEcC,I,EAAMD,W,EAA0B;AAAA,UAAbuB,OAAa,uEAAL,GAAK;AAC7C,UAAMK,UAAU,GAAGF,IAAI,CAACC,KAAL,CAAW1B,IAAI,GAAGsB,OAAlB,CAAnB;AACA,UAAMM,WAAW,GAAGH,IAAI,CAACC,KAAL,CAAWC,UAAU,GAAG5B,WAAxB,CAApB;AAEA,WAAKiB,QAAL,CAAc;AACVhB,QAAAA,IAAI,EAAEA,IADI;AAEVC,QAAAA,MAAM,EAAE2B,WAFE;AAGV1B,QAAAA,KAAK,EAAEyB;AAHG,OAAd;AAKD;;;6BAEQ;AAAA,yBACoC,KAAK7B,KADzC;AAAA,UACCE,IADD,gBACCA,IADD;AAAA,UACOC,MADP,gBACOA,MADP;AAAA,UACeC,KADf,gBACeA,KADf;AAAA,UACsBE,SADtB,gBACsBA,SADtB;AAGP,aAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,KAAK,EAAC,KAFR;AAGE,QAAA,OAAO,EAAE,KAAKC,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,WAAD;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,KAAK,EAAC,IAFR;AAGE,QAAA,OAAO,EAAE,KAAKA,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAJF,CAFF,EAoBE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,EAAE,EAAC,OADL;AAEE,QAAA,IAAI,EAAC,aAFP;AAGE,QAAA,KAAK,EAAC,IAHR;AAIE,QAAA,OAAO,EAAE,KAAKA,OAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,EAQE,oBAAC,WAAD;AACE,QAAA,EAAE,EAAC,KADL;AAEE,QAAA,IAAI,EAAC,aAFP;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,OAAO,EAAE,KAAKA,OAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EAcE;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,EAeE,oBAAC,WAAD;AACE,QAAA,EAAE,EAAC,QADL;AAEE,QAAA,IAAI,EAAC,aAFP;AAGE,QAAA,KAAK,EAAC,IAHR;AAIE,QAAA,OAAO,EAAE,KAAKA,OAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,EAqBE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBF,CAFF,CApBF,EA+CKD,SAAS,KAAK,KAAf,GACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA7B,CADF,EAEI,oBAAC,aAAD;AACE,QAAA,EAAE,EAAC,aADL;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,QAAQ,EAAE,KAAKyB,cAHjB;AAIE,QAAA,QAAQ,EAAI,KAAKtB,cAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADF,EAYE,oBAAC,WAAD;AACE,QAAA,MAAM,EAAEP,IADV;AAEE,QAAA,KAAK,EAAEE,KAFT;AAGE,QAAA,KAAK,EAAEP,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CADF,GAoBE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAaA,SAAb,MAA3B,CADF,EAEI,oBAAC,aAAD;AACE,QAAA,EAAE,EAAC,WADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAE,KAAKkC,cAHjB;AAIE,QAAA,QAAQ,EAAI,KAAKrB,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADF,EAYE,oBAAC,WAAD;AACE,QAAA,MAAM,EAAEP,MADV;AAEE,QAAA,KAAK,EAAEC,KAFT;AAGE,QAAA,KAAK,EAAER,iBAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CAnEN,CALF,CAFF;AAoGD;;;;EAtKeL,S;;AAyKlB,IAAMyC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MAAEhB,IAAF,QAAEA,IAAF;AAAA,MAAQiB,QAAR,QAAQA,QAAR;AAAA,MAAkBC,QAAlB,QAAkBA,QAAlB;AAAA,SACd;AAAM,IAAA,QAAQ,EAAIA,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACE,IAAA,IAAI,EAAElB,IADR;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,IAAI,EAAC,KAHP;AAIE,IAAA,QAAQ,EAAEiB,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CADc;AAAA,CAAtB;;AAaA,IAAME,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGhC,MAAH,SAAGA,MAAH;AAAA,MAAWC,KAAX,SAAWA,KAAX;AAAA,MAAkBgC,KAAlB,SAAkBA,KAAlB;AAAA,SAClB;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjC,MADH,OACYiC,KADZ,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhC,KADH,aAJF,CADkB;AAAA,CAApB;;AAUA,IAAMiC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGrB,IAAH,SAAGA,IAAH;AAAA,MAASD,KAAT,SAASA,KAAT;AAAA,MAAgBR,OAAhB,SAAgBA,OAAhB;AAAA,SAClB;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,EAAE,EAAEQ,KAFN;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,KAAK,EAAED,KAJT;AAKE,IAAA,OAAO,EAAER,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADkB;AAAA,CAApB;;AAaA,eAAeT,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst DefaultCups = 2;\nconst DefaultCoffee = 36;\nconst DefaultWater = 560;\nconst DefaultRatio = 15.5;\nconst CoffeeGrindsLabel = \"g coffee (ground)\";\nconst CupsLabel = \"10oz cups\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      goldenRatio: DefaultRatio, \n      cups: DefaultCups,\n      coffee: DefaultCoffee,\n      water: DefaultWater, \n      error: null,\n      coffeeLow: 'no',\n    };\n\n    this.onClick = this.onClick.bind(this);\n    this.onSubmitCoffee = this.onSubmitCoffee.bind(this);\n    this.onSubmitCups = this.onSubmitCups.bind(this);\n  }\n\n  onClick(event) {\n    const target = event.target;\n    console.log(\"target: \", target);\n    const value = event.target.value;\n    console.log(\"value: \", value);\n    const name = target.name;\n    console.log(\"name: \", name);\n\n    (target.type === 'button')\n      ? this.setState({ [name]: value })\n      : (isNaN(value)) //if empty string is submitted set state value to zero***\n      ? this.setState({ [name]: \"\"})\n      : this.setState({ [name]: parseFloat(value) });\n  }\n\n  onSubmitCoffee(event) {\n    const { coffee, goldenRatio } = this.state;\n    this.setCups(coffee, goldenRatio);\n    event.preventDefault();\n  }\n\n  onSubmitCups(event) {\n    const { cups, goldenRatio } = this.state;\n    this.setIngredients(cups, goldenRatio);\n    event.preventDefault();\n  }\n\n  setCups(coffee, goldenRatio, cupSize = 280) {\n    const possibleCups = (coffee * goldenRatio) / cupSize;\n    const roundedPossibleCups = Math.round(possibleCups * 4) / 4;\n\n    this.setIngredients(roundedPossibleCups, goldenRatio);\n  }\n\n  setIngredients(cups, goldenRatio, cupSize=280) {   \n    const waterGrams = Math.round(cups * cupSize);\n    const coffeeGrams = Math.round(waterGrams / goldenRatio);\n\n    this.setState({\n        cups: cups,\n        coffee: coffeeGrams,\n        water: waterGrams\n    });\n  }\n\n  render() {\n    const { cups, coffee, water, coffeeLow } = this.state;\n\n    return (\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Brew Ratio</h1>\n        </header>\n\n        <main>\n\n          <div className=\"interactions\">\n            <h2>Coffee beans running low?</h2>\n            <p>Click \"yes\" below if you have a random amount of ground coffee left to brew.</p>\n            <p>Click \"no\" if you prefer to brew a specific number of cups.</p>\n            <form>\n              <ButtonInput\n                name=\"coffeeLow\" \n                value=\"yes\"\n                onClick={this.onClick}\n              />\n              <ButtonInput \n                name=\"coffeeLow\"\n                value=\"no\"\n                onClick={this.onClick}\n              />\n              </form>\n          </div>\n\n          <div className=\"strengthInput\">\n            <h3>Desired Strength</h3>\n            <form>\n              <ButtonInput\n                id=\"light\"\n                name=\"goldenRatio\"                \n                value=\"13\"\n                onClick={this.onClick}\n              />\n              <label htmlFor=\"light\">light</label>\n              <ButtonInput \n                id=\"med\"\n                name=\"goldenRatio\"\n                value=\"15.5\"\n                onClick={this.onClick}\n              />\n              <label htmlFor=\"med\">medium</label>\n              <ButtonInput \n                id=\"strong\"\n                name=\"goldenRatio\"\n                value=\"18\"\n                onClick={this.onClick}\n              />\n              <label htmlFor=\"strong\">strong</label>\n            </form>\n          </div>\n\n          { (coffeeLow === 'yes')\n            ? <div className=\"grindsInput\">\n                <div className=\"interactions\">\n                  <label htmlFor=\"coffeeInput\"><h3>Ground Coffee (g):</h3></label>\n                    <CupGrindInput \n                      id=\"coffeeInput\"\n                      name='coffee'\n                      onChange={this.onSubmitChange}\n                      onSubmit = {this.onSubmitCoffee}\n                    >\n                    </CupGrindInput>\n                  \n                </div>  \n                <Ingredients\n                  coffee={cups}\n                  water={water}\n                  label={CupsLabel}\n                >\n                </Ingredients>\n              </div>  \n            : <div className=\"cupsInput\">\n                <div className=\"interactions\">\n                  <label htmlFor=\"cupsInput\"><h3>Desired {CupsLabel}:</h3></label>\n                    <CupGrindInput \n                      id=\"cupsInput\"\n                      name='cups'\n                      onChange={this.onSubmitChange}\n                      onSubmit = {this.onSubmitCups}\n                    >\n                    </CupGrindInput>\n                     \n                </div>\n                <Ingredients\n                  coffee={coffee}\n                  water={water}\n                  label={CoffeeGrindsLabel}\n                >\n                </Ingredients>\n              </div>\n            } \n\n\n\n        </main>\n      </div>\n    );\n  }\n}\n\nconst CupGrindInput = ({name, onChange, onSubmit}) =>\n        <form onSubmit = {onSubmit}>\n            <input\n              name={name}\n              type=\"number\"\n              step=\".01\"\n              onChange={onChange}\n            />\n          <button type=\"submit\" >\n            Submit\n          </button>\n        </form>\n\nconst Ingredients = ({ coffee, water, label }) =>\n  <div className=\"ingredients\">\n    <div className=\"coffeeOrCups\">\n      {coffee} {label}\n    </div>\n    <div className=\"water\"> \n      {water} g water\n    </div>\n  </div>\n\nconst ButtonInput = ({ name, value, onClick }) =>\n  <span className=\"button\">\n    <input\n      type=\"button\"\n      id={value}\n      name={name}\n      value={value}\n      onClick={onClick}\n    />\n    \n  </span>\n   \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}