{"ast":null,"code":"import _slicedToArray from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { DefaultWater, DefaultRatio, DefaultSeconds, cupSize } from './defaultValues.js';\nimport { stepDownValue, stepUpValue } from './stepValue.js';\nimport QuantityInput from './components/QuantityInput';\nimport StrengthInput from './components/StrengthInput';\nimport Timer from './components/Timer';\n\nvar App = function App() {\n  var _useState = useState(DefaultRatio),\n      _useState2 = _slicedToArray(_useState, 2),\n      goldenRatio = _useState2[0],\n      setGoldenRatio = _useState2[1];\n\n  var _useState3 = useState(DefaultWater),\n      _useState4 = _slicedToArray(_useState3, 2),\n      waterGrams = _useState4[0],\n      setWaterGrams = _useState4[1];\n\n  var _useState5 = useState(DefaultSeconds),\n      _useState6 = _slicedToArray(_useState5, 2),\n      seconds = _useState6[0],\n      setSeconds = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      timerOn = _useState8[0],\n      setTimerOn = _useState8[1];\n\n  useEffect(function () {\n    var goldenRatio = parseFloat(localStorage.getItem('goldenRatio')) || DefaultRatio;\n    var waterGrams = parseFloat(localStorage.getItem('waterGrams')) || DefaultWater;\n    var seconds = parseFloat(localStorage.getItem('seconds')) || DefaultSeconds;\n    setGoldenRatio(goldenRatio);\n    setWaterGrams(waterGrams);\n    setSeconds(seconds);\n  }, []);\n  useEffect(function () {\n    var tick = null;\n\n    if (timerOn && seconds > 0) {\n      var endTime = new Date().getTime() + seconds * 1000 + 500;\n\n      var updateClock = function updateClock() {\n        var msLeft = endTime - new Date().getTime();\n\n        if (msLeft >= 0) {\n          setSeconds(Math.floor(msLeft / 1000));\n          tick = setTimeout(updateClock, new Date(msLeft).getUTCMilliseconds() + 500);\n        }\n      };\n\n      updateClock();\n    } else if (!timerOn) {\n      clearInterval(tick);\n    }\n\n    return function () {\n      return clearInterval(tick);\n    };\n  }, [timerOn, seconds]);\n\n  var stepTime = function stepTime(event) {\n    if (!timerOn && seconds < 420) {\n      var newSeconds = event.target.innerText === '-' ? stepDownValue(seconds, 1) : stepUpValue(seconds, 1);\n      setSeconds(newSeconds);\n    }\n  };\n\n  var resetTimer = function resetTimer() {\n    setSeconds(DefaultSeconds);\n    setTimerOn(false);\n  };\n\n  var playPause = function playPause() {\n    setTimerOn(!timerOn);\n  };\n\n  var updateGoldenRatio = function updateGoldenRatio(event) {\n    var ratio = event.target.value;\n    setGoldenRatio(parseFloat(ratio));\n  };\n\n  var conversionFactors = {\n    cups: cupSize,\n    coffeeGrams: goldenRatio,\n    waterGrams: 1\n  };\n\n  var updateWater = function updateWater(event) {\n    var eventInfo = event.target.id.split('-');\n    var conversionFactor = conversionFactors[eventInfo[0]];\n    var incrementFactor = eventInfo[0] === 'cups' ? conversionFactor / 4 : conversionFactor;\n    var value = event.target.type === 'number' ? event.target.value : waterGrams;\n    var newWater;\n\n    if (eventInfo[1] === 'decrement') {\n      newWater = stepDownValue(value, incrementFactor);\n    } else if (eventInfo[1] === 'increment') {\n      newWater = stepUpValue(value, incrementFactor);\n    } else if (eventInfo[1] === 'amount') {\n      newWater = value * conversionFactor;\n    }\n\n    ;\n    setWaterGrams(newWater);\n  };\n\n  var saveSettings = function saveSettings() {\n    localStorage.setItem('goldenRatio', goldenRatio);\n    localStorage.setItem('waterGrams', waterGrams);\n    localStorage.setItem('seconds', seconds);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(StrengthInput, {\n    goldenRatio: goldenRatio,\n    setGoldenRatio: updateGoldenRatio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(QuantityInput, {\n    waterGrams: waterGrams,\n    goldenRatio: goldenRatio,\n    updateWater: updateWater,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(Timer, {\n    seconds: seconds,\n    stepTime: stepTime,\n    resetTimer: resetTimer,\n    playPause: playPause,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    id: \"saveSettings\",\n    className: \"rectButton\",\n    type: \"button\",\n    onClick: saveSettings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Save Settings\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","useState","useEffect","DefaultWater","DefaultRatio","DefaultSeconds","cupSize","stepDownValue","stepUpValue","QuantityInput","StrengthInput","Timer","App","goldenRatio","setGoldenRatio","waterGrams","setWaterGrams","seconds","setSeconds","timerOn","setTimerOn","parseFloat","localStorage","getItem","tick","endTime","Date","getTime","updateClock","msLeft","Math","floor","setTimeout","getUTCMilliseconds","clearInterval","stepTime","event","newSeconds","target","innerText","resetTimer","playPause","updateGoldenRatio","ratio","value","conversionFactors","cups","coffeeGrams","updateWater","eventInfo","id","split","conversionFactor","incrementFactor","type","newWater","saveSettings","setItem"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,WAAP;AACA,SAAQC,YAAR,EAAsBC,YAAtB,EAAoCC,cAApC,EAAoDC,OAApD,QAAkE,oBAAlE;AACA,SAAQC,aAAR,EAAuBC,WAAvB,QAAyC,gBAAzC;AAEA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACsBX,QAAQ,CAACG,YAAD,CAD9B;AAAA;AAAA,MACTS,WADS;AAAA,MACIC,cADJ;;AAAA,mBAEoBb,QAAQ,CAACE,YAAD,CAF5B;AAAA;AAAA,MAETY,UAFS;AAAA,MAEGC,aAFH;;AAAA,mBAGcf,QAAQ,CAACI,cAAD,CAHtB;AAAA;AAAA,MAGTY,OAHS;AAAA,MAGAC,UAHA;;AAAA,mBAIcjB,QAAQ,CAAC,KAAD,CAJtB;AAAA;AAAA,MAITkB,OAJS;AAAA,MAIAC,UAJA;;AAMhBlB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMW,WAAW,GAAGQ,UAAU,CAACC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAD,CAAV,IAAmDnB,YAAvE;AACA,QAAMW,UAAU,GAAGM,UAAU,CAACC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAD,CAAV,IACZpB,YADP;AAEA,QAAMc,OAAO,GAAGI,UAAU,CAACC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAD,CAAV,IACTlB,cADP;AAGAS,IAAAA,cAAc,CAACD,WAAD,CAAd;AACAG,IAAAA,aAAa,CAACD,UAAD,CAAb;AACAG,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD,GAVQ,EAUN,EAVM,CAAT;AAYAf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIsB,IAAI,GAAG,IAAX;;AAEA,QAAIL,OAAO,IAAIF,OAAO,GAAG,CAAzB,EAA4B;AAC1B,UAAIQ,OAAO,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAsBV,OAAO,GAAG,IAAhC,GAAuC,GAArD;;AAEA,UAAMW,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,YAAIC,MAAM,GAAGJ,OAAO,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAvB;;AAEA,YAAIE,MAAM,IAAI,CAAd,EAAiB;AACfX,UAAAA,UAAU,CAACY,IAAI,CAACC,KAAL,CAAWF,MAAM,GAAC,IAAlB,CAAD,CAAV;AAEAL,UAAAA,IAAI,GAAGQ,UAAU,CACfJ,WADe,EAEf,IAAIF,IAAJ,CAASG,MAAT,EAAiBI,kBAAjB,KAAwC,GAFzB,CAAjB;AAID;AACF,OAXD;;AAYAL,MAAAA,WAAW;AACZ,KAhBD,MAgBO,IAAI,CAACT,OAAL,EAAc;AACnBe,MAAAA,aAAa,CAACV,IAAD,CAAb;AACD;;AACD,WAAO;AAAA,aAAMU,aAAa,CAACV,IAAD,CAAnB;AAAA,KAAP;AACD,GAvBQ,EAuBN,CAACL,OAAD,EAAUF,OAAV,CAvBM,CAAT;;AAyBA,MAAMkB,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,QAAI,CAACjB,OAAD,IAAYF,OAAO,GAAG,GAA1B,EAA+B;AAC7B,UAAIoB,UAAU,GACXD,KAAK,CAACE,MAAN,CAAaC,SAAb,KAA2B,GAA5B,GACAhC,aAAa,CAACU,OAAD,EAAU,CAAV,CADb,GAEAT,WAAW,CAACS,OAAD,EAAU,CAAV,CAHb;AAIAC,MAAAA,UAAU,CAACmB,UAAD,CAAV;AACD;AACF,GARD;;AAUA,MAAMG,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBtB,IAAAA,UAAU,CAACb,cAAD,CAAV;AACAe,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHD;;AAKA,MAAMqB,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBrB,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIA,MAAMuB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACN,KAAD,EAAW;AACnC,QAAIO,KAAK,GAAGP,KAAK,CAACE,MAAN,CAAaM,KAAzB;AACA9B,IAAAA,cAAc,CAACO,UAAU,CAACsB,KAAD,CAAX,CAAd;AACD,GAHD;;AAKA,MAAME,iBAAiB,GAAG;AACxBC,IAAAA,IAAI,EAAExC,OADkB;AAExByC,IAAAA,WAAW,EAAElC,WAFW;AAGxBE,IAAAA,UAAU,EAAE;AAHY,GAA1B;;AAMA,MAAMiC,WAAW,GAAG,SAAdA,WAAc,CAACZ,KAAD,EAAW;AAC7B,QAAMa,SAAS,GAAGb,KAAK,CAACE,MAAN,CAAaY,EAAb,CAAgBC,KAAhB,CAAsB,GAAtB,CAAlB;AACA,QAAIC,gBAAgB,GAAGP,iBAAiB,CAACI,SAAS,CAAC,CAAD,CAAV,CAAxC;AACA,QAAII,eAAe,GAAIJ,SAAS,CAAC,CAAD,CAAT,KAAiB,MAAlB,GAA4BG,gBAAgB,GAAC,CAA7C,GAAiDA,gBAAvE;AACA,QAAIR,KAAK,GAAGR,KAAK,CAACE,MAAN,CAAagB,IAAb,KAAsB,QAAtB,GAAiClB,KAAK,CAACE,MAAN,CAAaM,KAA9C,GAAsD7B,UAAlE;AACA,QAAIwC,QAAJ;;AAEA,QAAIN,SAAS,CAAC,CAAD,CAAT,KAAiB,WAArB,EAAkC;AAChCM,MAAAA,QAAQ,GAAGhD,aAAa,CAACqC,KAAD,EAAOS,eAAP,CAAxB;AACD,KAFD,MAEO,IAAIJ,SAAS,CAAC,CAAD,CAAT,KAAiB,WAArB,EAAkC;AACvCM,MAAAA,QAAQ,GAAG/C,WAAW,CAACoC,KAAD,EAAOS,eAAP,CAAtB;AACD,KAFM,MAEA,IAAIJ,SAAS,CAAC,CAAD,CAAT,KAAiB,QAArB,EAA+B;AACpCM,MAAAA,QAAQ,GAAGX,KAAK,GAAGQ,gBAAnB;AACD;;AAAA;AACDpC,IAAAA,aAAa,CAACuC,QAAD,CAAb;AACD,GAfD;;AAiBA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBlC,IAAAA,YAAY,CAACmC,OAAb,CAAqB,aAArB,EACE5C,WADF;AAEAS,IAAAA,YAAY,CAACmC,OAAb,CAAqB,YAArB,EACE1C,UADF;AAEAO,IAAAA,YAAY,CAACmC,OAAb,CAAqB,SAArB,EAAgCxC,OAAhC;AACD,GAND;;AAQA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,WAAW,EAAIJ,WADjB;AAEE,IAAA,cAAc,EAAI6B,iBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,aAAD;AACE,IAAA,UAAU,EAAI3B,UADhB;AAEE,IAAA,WAAW,EAAIF,WAFjB;AAGE,IAAA,WAAW,EAAImC,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAUE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAI/B,OADb;AAEE,IAAA,QAAQ,EAAIkB,QAFd;AAGE,IAAA,UAAU,EAAIK,UAHhB;AAIE,IAAA,SAAS,EAAIC,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAgBE;AACE,IAAA,EAAE,EAAC,cADL;AAEE,IAAA,SAAS,EAAC,YAFZ;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,OAAO,EAAEe,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAhBF,CADF,CADF;AA6BD,CA/HD;;AAiIA,eAAe5C,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport './App.css';\nimport {DefaultWater, DefaultRatio, DefaultSeconds, cupSize} from './defaultValues.js'\nimport {stepDownValue, stepUpValue} from './stepValue.js'\n\nimport QuantityInput from './components/QuantityInput';\nimport StrengthInput from './components/StrengthInput';\nimport Timer from './components/Timer';\n\nconst App = () => {\n  const [goldenRatio, setGoldenRatio] = useState(DefaultRatio);\n  const [waterGrams, setWaterGrams] = useState(DefaultWater);\n  const [seconds, setSeconds] = useState(DefaultSeconds);\n  const [timerOn, setTimerOn] = useState(false);\n  \n  useEffect(() => {\n    const goldenRatio = parseFloat(localStorage.getItem('goldenRatio')) || DefaultRatio;\n    const waterGrams = parseFloat(localStorage.getItem('waterGrams'))\n        || DefaultWater;\n    const seconds = parseFloat(localStorage.getItem('seconds'))\n        || DefaultSeconds;\n\n    setGoldenRatio(goldenRatio);\n    setWaterGrams(waterGrams);\n    setSeconds(seconds);\n  }, []);\n\n  useEffect(() => {\n    var tick = null;\n    \n    if (timerOn && seconds > 0) {\n      let endTime = new Date().getTime() +seconds * 1000 + 500;\n\n      const updateClock = () => {\n        let msLeft = endTime - new Date().getTime();\n\n        if (msLeft >= 0) {\n          setSeconds(Math.floor(msLeft/1000));\n\n          tick = setTimeout(\n            updateClock,\n            new Date(msLeft).getUTCMilliseconds() + 500\n          );\n        }\n      }\n      updateClock()\n    } else if (!timerOn) {\n      clearInterval(tick);\n    }\n    return () => clearInterval(tick);\n  }, [timerOn, seconds]);\n\n  const stepTime = (event) => {\n    if (!timerOn && seconds < 420) {\n      let newSeconds = \n        (event.target.innerText === '-') ? \n        stepDownValue(seconds, 1) :\n        stepUpValue(seconds, 1);\n      setSeconds(newSeconds);\n    }  \n  }\n\n  const resetTimer = () => {\n    setSeconds(DefaultSeconds);\n    setTimerOn(false);\n  };\n\n  const playPause = () => {\n    setTimerOn(!timerOn);\n  };\n\n  const updateGoldenRatio = (event) => {\n    let ratio = event.target.value;\n    setGoldenRatio(parseFloat(ratio));\n  };\n\n  const conversionFactors = {\n    cups: cupSize,\n    coffeeGrams: goldenRatio,\n    waterGrams: 1\n  };\n\n  const updateWater = (event) => {\n    const eventInfo = event.target.id.split('-');\n    let conversionFactor = conversionFactors[eventInfo[0]];\n    let incrementFactor = (eventInfo[0] === 'cups') ? conversionFactor/4 : conversionFactor;\n    let value = event.target.type === 'number' ? event.target.value : waterGrams;\n    let newWater;\n\n    if (eventInfo[1] === 'decrement') { \n      newWater = stepDownValue(value,incrementFactor);\n    } else if (eventInfo[1] === 'increment') {\n      newWater = stepUpValue(value,incrementFactor);\n    } else if (eventInfo[1] === 'amount') {\n      newWater = value * conversionFactor;\n    };\n    setWaterGrams(newWater);\n  };\n\n  const saveSettings = () => {\n    localStorage.setItem('goldenRatio', \n      goldenRatio);\n    localStorage.setItem('waterGrams', \n      waterGrams);\n    localStorage.setItem('seconds', seconds)\n  };\n\n  return (\n    <div className=\"App\">\n      <main>\n        <StrengthInput \n          goldenRatio = {goldenRatio}\n          setGoldenRatio = {updateGoldenRatio}\n        />\n        <QuantityInput \n          waterGrams = {waterGrams}\n          goldenRatio = {goldenRatio}\n          updateWater = {updateWater}\n        />\n        <Timer \n          seconds = {seconds}\n          stepTime = {stepTime}\n          resetTimer = {resetTimer}\n          playPause = {playPause}\n        />\n        <button\n          id=\"saveSettings\"\n          className=\"rectButton\"\n          type=\"button\"\n          onClick={saveSettings}\n        >\n          Save Settings\n        </button>\n      </main>\n    </div>\n  );\n};\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}