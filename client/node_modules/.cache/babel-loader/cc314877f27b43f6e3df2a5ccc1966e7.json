{"ast":null,"code":"import _slicedToArray from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { aeroCupSize, cupSize, DefaultMethod, DefaultRatio, DefaultSeconds, DefaultWater } from './defaultValues.js';\nimport { stepDownValue, stepUpValue } from './stepValue.js';\nimport BrewMethodInput from './components/BrewMethodInput';\nimport QuantityInput from './components/QuantityInput';\nimport StrengthInput from './components/StrengthInput';\nimport Timer from './components/Timer';\n\nvar App = function App() {\n  var _useState = useState(DefaultMethod),\n      _useState2 = _slicedToArray(_useState, 2),\n      method = _useState2[0],\n      setMethod = _useState2[1];\n\n  var _useState3 = useState(DefaultRatio),\n      _useState4 = _slicedToArray(_useState3, 2),\n      goldenRatio = _useState4[0],\n      setGoldenRatio = _useState4[1];\n\n  var _useState5 = useState(DefaultWater),\n      _useState6 = _slicedToArray(_useState5, 2),\n      waterGrams = _useState6[0],\n      setWaterGrams = _useState6[1];\n\n  var _useState7 = useState(DefaultSeconds),\n      _useState8 = _slicedToArray(_useState7, 2),\n      seconds = _useState8[0],\n      setSeconds = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      timerOn = _useState10[0],\n      setTimerOn = _useState10[1];\n\n  useEffect(function () {\n    var method = localStorage.getItem('method') || DefaultMethod;\n    var goldenRatio = parseFloat(localStorage.getItem('goldenRatio')) || DefaultRatio;\n    var waterGrams = parseFloat(localStorage.getItem('waterGrams')) || DefaultWater;\n    var seconds = parseFloat(localStorage.getItem('seconds')) || DefaultSeconds;\n    setMethod(method);\n    setGoldenRatio(goldenRatio);\n    setWaterGrams(waterGrams);\n    setSeconds(seconds);\n  }, []);\n  useEffect(function () {\n    var tick = null;\n\n    if (timerOn && seconds > 0) {\n      var endTime = new Date().getTime() + seconds * 1000 + 500;\n\n      var updateClock = function updateClock() {\n        var msLeft = endTime - new Date().getTime();\n\n        if (msLeft >= 0) {\n          setSeconds(Math.floor(msLeft / 1000));\n          tick = setTimeout(updateClock, new Date(msLeft).getUTCMilliseconds() + 500);\n        }\n      };\n\n      updateClock();\n    } else if (!timerOn) {\n      clearInterval(tick);\n    }\n\n    return function () {\n      return clearInterval(tick);\n    };\n  }, [timerOn, seconds]);\n\n  var stepTime = function stepTime(event) {\n    if (!timerOn && seconds < 420) {\n      var newSeconds = event.target.innerText === '-' ? stepDownValue(seconds, 1) : stepUpValue(seconds, 1);\n      setSeconds(newSeconds);\n    }\n  };\n\n  var resetTimer = function resetTimer() {\n    setSeconds(DefaultSeconds);\n    setTimerOn(false);\n  };\n\n  var playPause = function playPause() {\n    setTimerOn(!timerOn);\n  };\n\n  var updateGoldenRatio = function updateGoldenRatio(event) {\n    var ratio = event.target.value;\n    setGoldenRatio(parseFloat(ratio));\n  };\n\n  var conversionFactors = {\n    cups: cupSize,\n    coffeeGrams: goldenRatio,\n    waterGrams: 1\n  };\n\n  var updateWater = function updateWater(event) {\n    var eventInfo = event.target.id.split('-');\n    var conversionFactor = conversionFactors[eventInfo[0]];\n    var incrementFactor = eventInfo[0] === 'cups' ? conversionFactor / 4 : conversionFactor;\n    var value = event.target.type === 'number' ? event.target.value : waterGrams;\n    var newWater;\n\n    if (eventInfo[1] === 'decrement') {\n      newWater = stepDownValue(value, incrementFactor);\n    } else if (eventInfo[1] === 'increment') {\n      newWater = stepUpValue(value, incrementFactor);\n    } else if (eventInfo[1] === 'amount') {\n      newWater = value * conversionFactor;\n    }\n\n    setWaterGrams(newWater);\n  };\n\n  var changeMethod = function changeMethod(event) {\n    //when method changes\n    //cupsize, ratio changes for aeroPress only\n    //time and directions change for each method...\n    //change that here?\n    var method = event.target.value;\n    setMethod(method);\n  };\n\n  var saveSettings = function saveSettings() {\n    localStorage.setItem('method', method);\n    localStorage.setItem('goldenRatio', goldenRatio);\n    localStorage.setItem('waterGrams', waterGrams);\n    localStorage.setItem('seconds', seconds);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(BrewMethodInput, {\n    method: method,\n    changeMethod: changeMethod,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(StrengthInput, {\n    goldenRatio: goldenRatio,\n    setGoldenRatio: updateGoldenRatio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(QuantityInput, {\n    waterGrams: waterGrams,\n    goldenRatio: goldenRatio,\n    updateWater: updateWater,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(Timer, {\n    seconds: seconds,\n    stepTime: stepTime,\n    resetTimer: resetTimer,\n    playPause: playPause,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    id: \"saveSettings\",\n    className: \"rectButton\",\n    type: \"button\",\n    onClick: saveSettings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Save Settings\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","useState","useEffect","aeroCupSize","cupSize","DefaultMethod","DefaultRatio","DefaultSeconds","DefaultWater","stepDownValue","stepUpValue","BrewMethodInput","QuantityInput","StrengthInput","Timer","App","method","setMethod","goldenRatio","setGoldenRatio","waterGrams","setWaterGrams","seconds","setSeconds","timerOn","setTimerOn","localStorage","getItem","parseFloat","tick","endTime","Date","getTime","updateClock","msLeft","Math","floor","setTimeout","getUTCMilliseconds","clearInterval","stepTime","event","newSeconds","target","innerText","resetTimer","playPause","updateGoldenRatio","ratio","value","conversionFactors","cups","coffeeGrams","updateWater","eventInfo","id","split","conversionFactor","incrementFactor","type","newWater","changeMethod","saveSettings","setItem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport './App.css'\nimport {\n  aeroCupSize,\n  cupSize,\n  DefaultMethod,\n  DefaultRatio,\n  DefaultSeconds,\n  DefaultWater,\n} from './defaultValues.js'\nimport { stepDownValue, stepUpValue } from './stepValue.js'\n\nimport BrewMethodInput from './components/BrewMethodInput'\nimport QuantityInput from './components/QuantityInput'\nimport StrengthInput from './components/StrengthInput'\nimport Timer from './components/Timer'\n\nconst App = () => {\n  const [method, setMethod] = useState(DefaultMethod)\n  const [goldenRatio, setGoldenRatio] = useState(DefaultRatio)\n  const [waterGrams, setWaterGrams] = useState(DefaultWater)\n  const [seconds, setSeconds] = useState(DefaultSeconds)\n  const [timerOn, setTimerOn] = useState(false)\n\n  useEffect(() => {\n    const method = localStorage.getItem('method') || DefaultMethod\n    const goldenRatio =\n      parseFloat(localStorage.getItem('goldenRatio')) || DefaultRatio\n    const waterGrams =\n      parseFloat(localStorage.getItem('waterGrams')) || DefaultWater\n    const seconds =\n      parseFloat(localStorage.getItem('seconds')) || DefaultSeconds\n\n    setMethod(method)\n    setGoldenRatio(goldenRatio)\n    setWaterGrams(waterGrams)\n    setSeconds(seconds)\n  }, [])\n\n  useEffect(() => {\n    var tick = null\n\n    if (timerOn && seconds > 0) {\n      let endTime = new Date().getTime() + seconds * 1000 + 500\n\n      const updateClock = () => {\n        let msLeft = endTime - new Date().getTime()\n\n        if (msLeft >= 0) {\n          setSeconds(Math.floor(msLeft / 1000))\n\n          tick = setTimeout(\n            updateClock,\n            new Date(msLeft).getUTCMilliseconds() + 500\n          )\n        }\n      }\n      updateClock()\n    } else if (!timerOn) {\n      clearInterval(tick)\n    }\n    return () => clearInterval(tick)\n  }, [timerOn, seconds])\n\n  const stepTime = event => {\n    if (!timerOn && seconds < 420) {\n      let newSeconds =\n        event.target.innerText === '-'\n          ? stepDownValue(seconds, 1)\n          : stepUpValue(seconds, 1)\n      setSeconds(newSeconds)\n    }\n  }\n\n  const resetTimer = () => {\n    setSeconds(DefaultSeconds)\n    setTimerOn(false)\n  }\n\n  const playPause = () => {\n    setTimerOn(!timerOn)\n  }\n\n  const updateGoldenRatio = event => {\n    let ratio = event.target.value\n    setGoldenRatio(parseFloat(ratio))\n  }\n\n  const conversionFactors = {\n    cups: cupSize,\n    coffeeGrams: goldenRatio,\n    waterGrams: 1,\n  }\n\n  const updateWater = event => {\n    const eventInfo = event.target.id.split('-')\n    let conversionFactor = conversionFactors[eventInfo[0]]\n    let incrementFactor =\n      eventInfo[0] === 'cups' ? conversionFactor / 4 : conversionFactor\n    let value = event.target.type === 'number' ? event.target.value : waterGrams\n    let newWater\n\n    if (eventInfo[1] === 'decrement') {\n      newWater = stepDownValue(value, incrementFactor)\n    } else if (eventInfo[1] === 'increment') {\n      newWater = stepUpValue(value, incrementFactor)\n    } else if (eventInfo[1] === 'amount') {\n      newWater = value * conversionFactor\n    }\n    setWaterGrams(newWater)\n  }\n\n  const changeMethod = event => {\n    //when method changes\n    //cupsize, ratio changes for aeroPress only\n    //time and directions change for each method...\n    //change that here?\n    let method = event.target.value\n\n    setMethod(method)\n  }\n\n  const saveSettings = () => {\n    localStorage.setItem('method', method)\n    localStorage.setItem('goldenRatio', goldenRatio)\n    localStorage.setItem('waterGrams', waterGrams)\n    localStorage.setItem('seconds', seconds)\n  }\n\n  return (\n    <div className=\"App\">\n      <main>\n        <BrewMethodInput method={method} changeMethod={changeMethod} />\n        <StrengthInput\n          goldenRatio={goldenRatio}\n          setGoldenRatio={updateGoldenRatio}\n        />\n        <QuantityInput\n          waterGrams={waterGrams}\n          goldenRatio={goldenRatio}\n          updateWater={updateWater}\n        />\n        <Timer\n          seconds={seconds}\n          stepTime={stepTime}\n          resetTimer={resetTimer}\n          playPause={playPause}\n        />\n        <button\n          id=\"saveSettings\"\n          className=\"rectButton\"\n          type=\"button\"\n          onClick={saveSettings}\n        >\n          Save Settings\n        </button>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}