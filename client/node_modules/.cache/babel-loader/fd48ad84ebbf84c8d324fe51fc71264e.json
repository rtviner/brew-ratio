{"ast":null,"code":"import _defineProperty from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { Component } from 'react';\nimport { IncrementDecrementSet } from './increment.js';\nimport { InputButton } from \"./inputButton.js\";\nimport './App.css'; // const DefaultCups = 2;\n\nvar DefaultBrewAmt = 20;\nvar DefaultCoffee = 38;\nvar DefaultWater = 592;\nvar DefaultRatio = \"15.5\";\nvar waterGramsPerOz = 29.574;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      goldenRatio: DefaultRatio,\n      brewAmount: DefaultBrewAmt,\n      coffeeGrams: DefaultCoffee,\n      waterGrams: DefaultWater,\n      error: null\n    };\n    _this.incrementOrDecrementQuantity = _this.incrementOrDecrementQuantity.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.waterOzToGrams = _this.waterOzToGrams.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.waterGramsToOz = _this.waterGramsToOz.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.updateQuantities = this\n    //   .updateQuantities.bind(this);\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"updateAllQuantities\",\n    value: function updateAllQuantities(quantity1, quantity2) {}\n  }, {\n    key: \"incrementOrDecrementQuantity\",\n    value: function incrementOrDecrementQuantity(event) {\n      var eventInfo = event.target.id.split(\"-\");\n      var name = eventInfo[0];\n      var currentQuantity = this.state[name];\n      var newQuantity;\n\n      if (eventInfo[1] === \"increment\") {\n        newQuantity = currentQuantity + 1;\n      }\n\n      if (eventInfo[1] === \"decrement\" && currentQuantity > 1) {\n        newQuantity = currentQuantity - 1;\n      }\n\n      this.setState(_defineProperty({}, name, newQuantity));\n\n      if (name === \"brewAmount\") {\n        this.setState({\n          waterGrams: this.waterOzToGrams(newQuantity)\n        });\n      }\n\n      if (name === \"waterGrams\") {\n        this.setState({\n          brewAmount: this.waterGramsToOz(newQuantity)\n        });\n      }\n    } //no longer a submit button\n    //   onSubmitCoffee(event) {\n    //     const { coffeeGrams, goldenRatio } = this.state;\n    //     this.setServings(coffeeGrams, parseFloat(goldenRatio));\n    //     event.preventDefault();\n    //   }\n    // //no longer a submit button\n    //   onSubmitServings(event) {\n    //     const { servings, goldenRatio } = this.state;\n    //     this.setIngredients(servings, parseFloat(goldenRatio));\n    //     event.preventDefault();\n    //   }\n    //this is not being called right now\n    // setServings(coffeeGrams, goldenRatio, servingSize = 280) {\n    //   const possibleServings = (coffeeGrams * goldenRatio) / servingSize;\n    //   const roundedPossibleServings = Math.round(possibleServings * 4) / 4;\n    //   this.setIngredients(roundedPossibleServings, goldenRatio);\n    // }\n    //convert waterGrams to oz\n\n  }, {\n    key: \"waterGramsToOz\",\n    value: function waterGramsToOz(waterGrams) {\n      var brewAmountOz = Math.round(waterGrams / waterGramsPerOz);\n      return brewAmountOz;\n    } //convert water in oz to grams\n\n  }, {\n    key: \"waterOzToGrams\",\n    value: function waterOzToGrams(waterOz) {\n      var waterGrams = Math.round(waterOz * waterGramsPerOz);\n      console.log(waterGrams);\n      return waterGrams;\n    } //use the goldenRatio and water amount to calculate cofee needed in grams;\n\n  }, {\n    key: \"coffeeGrams\",\n    value: function coffeeGrams(waterGrams, goldenRatio) {\n      var coffeeGrams = Math.round(waterGrams / goldenRatio);\n      return coffeeGrams;\n    } // //this is not being called right now\n    //   setIngredients(brewAmount, goldenRatio, servingSize=280) {   \n    //     const waterGrams = Math.round(brewAmount * servingSize);\n    //     const coffeeGrams = Math.round(waterGrams / goldenRatio);\n    //     this.setState({\n    //         brewAmount: brewAmount,\n    //         coffeeGrams: coffeeGrams,\n    //         waterGrams: waterGrams\n    //     });\n    //   }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          brewAmount = _this$state.brewAmount,\n          coffeeGrams = _this$state.coffeeGrams,\n          waterGrams = _this$state.waterGrams,\n          goldenRatio = _this$state.goldenRatio;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Brew Ratio\")), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"adjustables\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(IncrementDecrementSet, {\n        name: \"brewAmount\",\n        title: \"Brew Amount\",\n        value: \"\".concat(brewAmount, \" (oz)\"),\n        setQuantity: this.incrementOrDecrementQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(IncrementDecrementSet, {\n        name: \"coffeeGrams\",\n        title: \"Ground Coffee\",\n        value: \"\".concat(coffeeGrams, \" (g)\"),\n        setQuantity: this.incrementOrDecrementQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(IncrementDecrementSet, {\n        name: \"waterGrams\",\n        title: \"Water\",\n        value: \"\".concat(waterGrams, \" (g/mL)\"),\n        setQuantity: this.incrementOrDecrementQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"strengthInput interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"g Coffee:1g Water\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(InputButton, {\n        className: goldenRatio === \"18\" ? \"active\" : \"inactive\",\n        id: \"light\",\n        name: \"goldenRatio\",\n        value: \"18\",\n        onClick: this.setQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"light\")), React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(InputButton, {\n        className: goldenRatio === \"15.5\" ? \"active\" : \"inactive\",\n        id: \"med\",\n        name: \"goldenRatio\",\n        value: \"15.5\",\n        onClick: this.setQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"med\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"medium\")), React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(InputButton, {\n        className: goldenRatio === \"13\" ? \"active\" : \"inactive\",\n        id: \"strong\",\n        name: \"goldenRatio\",\n        value: \"13\",\n        onClick: this.setQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"strong\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"strong\"))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","Component","IncrementDecrementSet","InputButton","DefaultBrewAmt","DefaultCoffee","DefaultWater","DefaultRatio","waterGramsPerOz","App","props","state","goldenRatio","brewAmount","coffeeGrams","waterGrams","error","incrementOrDecrementQuantity","bind","waterOzToGrams","waterGramsToOz","quantity1","quantity2","event","eventInfo","target","id","split","name","currentQuantity","newQuantity","setState","brewAmountOz","Math","round","waterOz","console","log","setQuantity"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { IncrementDecrementSet } from './increment.js';\nimport { InputButton } from \"./inputButton.js\";\nimport './App.css';\n\n// const DefaultCups = 2;\nconst DefaultBrewAmt = 20;\nconst DefaultCoffee = 38;\nconst DefaultWater = 592;\nconst DefaultRatio = \"15.5\";\nconst waterGramsPerOz = 29.574;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      goldenRatio: DefaultRatio, \n      brewAmount: DefaultBrewAmt,\n      coffeeGrams: DefaultCoffee,\n      waterGrams: DefaultWater, \n      error: null,\n    };\n\n    this.incrementOrDecrementQuantity = this\n      .incrementOrDecrementQuantity.bind(this);\n    this.waterOzToGrams = this.waterOzToGrams.bind(this);\n    this.waterGramsToOz = this.waterGramsToOz.bind(this);\n    // this.updateQuantities = this\n    //   .updateQuantities.bind(this);\n\n  }\n\n  updateAllQuantities(quantity1, quantity2) {\n\n  };\n\n  incrementOrDecrementQuantity (event) {\n    const eventInfo = event.target.id.split(\"-\");\n    const name = eventInfo[0];\n    const currentQuantity  = this.state[name];\n    let newQuantity;\n\n    if (eventInfo[1] === \"increment\" ) {\n      newQuantity = currentQuantity + 1;\n    }\n\n    if (eventInfo[1] === \"decrement\" && currentQuantity > 1) {\n      newQuantity = currentQuantity - 1;\n    }\n    this.setState({ [name]: newQuantity });\n\n    if (name === \"brewAmount\") {\n      this.setState({ waterGrams: this.waterOzToGrams(newQuantity )});\n    }\n    if (name === \"waterGrams\") {\n      this.setState({ brewAmount: this.waterGramsToOz(newQuantity )});\n    }\n  }\n\n//no longer a submit button\n\n//   onSubmitCoffee(event) {\n//     const { coffeeGrams, goldenRatio } = this.state;\n//     this.setServings(coffeeGrams, parseFloat(goldenRatio));\n//     event.preventDefault();\n//   }\n\n// //no longer a submit button\n//   onSubmitServings(event) {\n//     const { servings, goldenRatio } = this.state;\n//     this.setIngredients(servings, parseFloat(goldenRatio));\n//     event.preventDefault();\n//   }\n\n//this is not being called right now\n  // setServings(coffeeGrams, goldenRatio, servingSize = 280) {\n  //   const possibleServings = (coffeeGrams * goldenRatio) / servingSize;\n  //   const roundedPossibleServings = Math.round(possibleServings * 4) / 4;\n\n  //   this.setIngredients(roundedPossibleServings, goldenRatio);\n  // }\n\n//convert waterGrams to oz\n  waterGramsToOz (waterGrams) {\n    const brewAmountOz = Math.round(waterGrams / waterGramsPerOz);\n    return brewAmountOz;\n  }\n\n//convert water in oz to grams\n  waterOzToGrams (waterOz) {\n    const waterGrams = Math.round(waterOz * waterGramsPerOz);\n    console.log(waterGrams);\n    return waterGrams;\n  }\n\n//use the goldenRatio and water amount to calculate cofee needed in grams;\n  coffeeGrams (waterGrams, goldenRatio) {\n    const coffeeGrams = Math.round(waterGrams / goldenRatio);\n    return coffeeGrams;\n  }\n\n// //this is not being called right now\n//   setIngredients(brewAmount, goldenRatio, servingSize=280) {   \n//     const waterGrams = Math.round(brewAmount * servingSize);\n//     const coffeeGrams = Math.round(waterGrams / goldenRatio);\n\n//     this.setState({\n//         brewAmount: brewAmount,\n//         coffeeGrams: coffeeGrams,\n//         waterGrams: waterGrams\n//     });\n//   }\n\n  render() {\n    const { brewAmount, coffeeGrams, waterGrams, goldenRatio } = this.state;\n\n    return (\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Brew Ratio</h1>\n        </header>\n\n        <main>\n          <div id=\"adjustables\">\n            <IncrementDecrementSet\n              name=\"brewAmount\"\n              title=\"Brew Amount\"\n              value={`${brewAmount} (oz)`}\n              setQuantity=\n                {this.incrementOrDecrementQuantity}\n            />\n            <IncrementDecrementSet\n              name=\"coffeeGrams\"\n              title=\"Ground Coffee\"\n              value={`${coffeeGrams} (g)`}\n              setQuantity=\n                {this.incrementOrDecrementQuantity}\n            />\n            <IncrementDecrementSet\n              name=\"waterGrams\"\n              title=\"Water\"\n              value={`${waterGrams} (g/mL)`}\n              setQuantity=\n                {this.incrementOrDecrementQuantity}\n            />\n          </div>\n\n          <div className=\"strengthInput interactions\">\n            <h2>g Coffee:1g Water</h2>\n            <form> \n\n              <div className=\"strength\"> \n                  <InputButton\n                    className = {(goldenRatio === \"18\") ? \"active\" : \"inactive\"} \n                    id=\"light\"\n                    name=\"goldenRatio\"\n                    value=\"18\"\n                    onClick={this.setQuantity}\n                  />\n                <label className=\"strength\" htmlFor=\"light\">light</label>\n              </div>\n\n              <div className=\"strength\">\n                <InputButton\n                  className = {(goldenRatio === \"15.5\") ? \"active\" : \"inactive\"} \n                  id=\"med\"\n                  name=\"goldenRatio\"\n                  value=\"15.5\"\n                  onClick={this.setQuantity}\n                />\n                <label className=\"strength\" htmlFor=\"med\">medium</label>\n              </div>\n\n              <div className=\"strength\">\n                <InputButton\n                   className = {(goldenRatio === \"13\") ? \"active\" : \"inactive\"}\n                  id=\"strong\"\n                  name=\"goldenRatio\"                \n                  value=\"13\"\n                  onClick={this.setQuantity}\n                />\n                <label className=\"strength\" htmlFor=\"strong\">strong</label>\n              </div>\n\n            </form>\n          </div>\n\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}