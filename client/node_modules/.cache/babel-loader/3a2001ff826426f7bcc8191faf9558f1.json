{"ast":null,"code":"import _slicedToArray from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport BrewMethodInput from './components/BrewMethodInput';\nimport Instructions from './components/Instructions';\nimport QuantityInput from './components/QuantityInput';\nimport StrengthInput from './components/StrengthInput';\nimport Timer from './components/Timer';\nimport { aeroCupSize, DefaultCupSize, DefaultMethod, DefaultRatio, DefaultSeconds, DefaultWater } from './constants';\nimport { stepDownValue, stepUpValue } from './utils';\nimport instructionsData from \"./instructions.json\";\n\nvar App = function App() {\n  var _useState = useState(DefaultCupSize),\n      _useState2 = _slicedToArray(_useState, 2),\n      cupSize = _useState2[0],\n      setCupSize = _useState2[1];\n\n  var _useState3 = useState(DefaultRatio),\n      _useState4 = _slicedToArray(_useState3, 2),\n      goldenRatio = _useState4[0],\n      setGoldenRatio = _useState4[1];\n\n  var _useState5 = useState(instructionsData['Pour Over']),\n      _useState6 = _slicedToArray(_useState5, 2),\n      instructions = _useState6[0],\n      setInstructions = _useState6[1];\n\n  var _useState7 = useState(DefaultMethod),\n      _useState8 = _slicedToArray(_useState7, 2),\n      method = _useState8[0],\n      setMethod = _useState8[1];\n\n  var _useState9 = useState(DefaultSeconds),\n      _useState10 = _slicedToArray(_useState9, 2),\n      seconds = _useState10[0],\n      setSeconds = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      timerOn = _useState12[0],\n      setTimerOn = _useState12[1];\n\n  var _useState13 = useState(DefaultWater),\n      _useState14 = _slicedToArray(_useState13, 2),\n      waterGrams = _useState14[0],\n      setWaterGrams = _useState14[1];\n\n  useEffect(function () {\n    var method = localStorage.getItem('method') || DefaultMethod;\n    var goldenRatio = parseFloat(localStorage.getItem('goldenRatio')) || DefaultRatio;\n    var waterGrams = parseFloat(localStorage.getItem('waterGrams')) || DefaultWater;\n    var seconds = parseFloat(localStorage.getItem('seconds')) || DefaultSeconds;\n    setMethod(method);\n    setGoldenRatio(goldenRatio);\n    setWaterGrams(waterGrams);\n    setSeconds(seconds);\n  }, []);\n  useEffect(function () {\n    var tick = null;\n\n    if (timerOn && seconds > 0) {\n      var endTime = new Date().getTime() + seconds * 1000 + 500;\n\n      var updateClock = function updateClock() {\n        var msLeft = endTime - new Date().getTime();\n\n        if (msLeft >= 0) {\n          setSeconds(Math.floor(msLeft / 1000));\n          tick = setTimeout(updateClock, new Date(msLeft).getUTCMilliseconds() + 500);\n        }\n      };\n\n      updateClock();\n    } else if (!timerOn) {\n      clearInterval(tick);\n    }\n\n    return function () {\n      return clearInterval(tick);\n    };\n  }, [timerOn, seconds]);\n\n  var stepTime = function stepTime(event) {\n    if (!timerOn && seconds < 420) {\n      var newSeconds = event.target.innerText === '-' ? stepDownValue(seconds, 1) : stepUpValue(seconds, 1);\n      setSeconds(newSeconds);\n    }\n  };\n\n  var resetTimer = function resetTimer() {\n    setSeconds(DefaultSeconds);\n    setTimerOn(false);\n  };\n\n  var playPause = function playPause() {\n    setTimerOn(!timerOn);\n  };\n\n  var updateGoldenRatio = function updateGoldenRatio(event) {\n    var ratio = event.target.value;\n    setGoldenRatio(parseFloat(ratio));\n  };\n\n  var conversionFactors = {\n    cups: cupSize,\n    coffeeGrams: goldenRatio,\n    waterGrams: 1\n  };\n\n  var updateWater = function updateWater(event) {\n    var eventInfo = event.target.id.split('-');\n    var conversionFactor = conversionFactors[eventInfo[0]];\n    var incrementFactor = eventInfo[0] === 'cups' ? conversionFactor / 4 : conversionFactor;\n    var value = event.target.type === 'number' ? event.target.value : waterGrams;\n    var newWater;\n\n    if (eventInfo[1] === 'decrement') {\n      newWater = stepDownValue(value, incrementFactor);\n    } else if (eventInfo[1] === 'increment') {\n      newWater = stepUpValue(value, incrementFactor);\n    } else if (eventInfo[1] === 'amount') {\n      newWater = value * conversionFactor;\n    }\n\n    setWaterGrams(newWater);\n  }; // async fetchData () {\n  //   try {\n  //     const response = await fetch(instructionsUrl);\n  //     const json = await response.json();\n  //     console.log(json);\n  //   } catch (error) {\n  //       this.setError(error: error.message)\n  //   }\n  // }\n\n\n  var changeMethod = function changeMethod(event) {\n    var method = event.target.value;\n    var cupSize = method === 'AeroPress' ? aeroCupSize : DefaultCupSize;\n    var ratio = method === 'AeroPress' ? 13 : DefaultRatio;\n    var water = method === 'AeroPress' ? 220 : DefaultWater;\n    var brewTime = method === 'AeroPress' ? 120 : DefaultSeconds;\n    var instructions = instructionsData[method];\n    setInstructions(instructions);\n    setCupSize(cupSize);\n    setGoldenRatio(ratio);\n    setMethod(method);\n    setSeconds(brewTime);\n    setWaterGrams(water);\n  };\n\n  var saveSettings = function saveSettings() {\n    localStorage.setItem('method', method);\n    localStorage.setItem('goldenRatio', goldenRatio);\n    localStorage.setItem('waterGrams', waterGrams);\n    localStorage.setItem('seconds', seconds);\n  };\n\n  if (!instructions) {\n    return null;\n  } // console.log(instructions.steps);\n\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(BrewMethodInput, {\n    method: method,\n    changeMethod: changeMethod,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(StrengthInput, {\n    goldenRatio: goldenRatio,\n    setGoldenRatio: updateGoldenRatio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(QuantityInput, {\n    waterGrams: waterGrams,\n    goldenRatio: goldenRatio,\n    cupSize: cupSize,\n    updateWater: updateWater,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), React.createElement(Timer, {\n    seconds: seconds,\n    stepTime: stepTime,\n    resetTimer: resetTimer,\n    playPause: playPause,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    id: \"saveSettings\",\n    className: \"rectButton\",\n    type: \"button\",\n    onClick: saveSettings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Save Settings\"), React.createElement(Instructions, {\n    grindSize: instructions[\"grind-size\"],\n    list: instructions.steps,\n    goldenRatio: goldenRatio,\n    waterGrams: waterGrams,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","useState","useEffect","BrewMethodInput","Instructions","QuantityInput","StrengthInput","Timer","aeroCupSize","DefaultCupSize","DefaultMethod","DefaultRatio","DefaultSeconds","DefaultWater","stepDownValue","stepUpValue","instructionsData","App","cupSize","setCupSize","goldenRatio","setGoldenRatio","instructions","setInstructions","method","setMethod","seconds","setSeconds","timerOn","setTimerOn","waterGrams","setWaterGrams","localStorage","getItem","parseFloat","tick","endTime","Date","getTime","updateClock","msLeft","Math","floor","setTimeout","getUTCMilliseconds","clearInterval","stepTime","event","newSeconds","target","innerText","resetTimer","playPause","updateGoldenRatio","ratio","value","conversionFactors","cups","coffeeGrams","updateWater","eventInfo","id","split","conversionFactor","incrementFactor","type","newWater","changeMethod","water","brewTime","saveSettings","setItem","steps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport './App.css'\n\nimport BrewMethodInput from './components/BrewMethodInput'\nimport Instructions from './components/Instructions'\nimport QuantityInput from './components/QuantityInput'\nimport StrengthInput from './components/StrengthInput'\nimport Timer from './components/Timer'\nimport {\n  aeroCupSize,\n  DefaultCupSize,\n  DefaultMethod,\n  DefaultRatio,\n  DefaultSeconds,\n  DefaultWater,\n} from './constants'\nimport { stepDownValue, stepUpValue } from './utils'\nimport instructionsData from \"./instructions.json\";\n\nconst App = () => {\n  const [cupSize, setCupSize] = useState(DefaultCupSize);\n  const [goldenRatio, setGoldenRatio] = useState(DefaultRatio);\n  const [instructions, setInstructions] = useState(instructionsData['Pour Over']);\n  const [method, setMethod] = useState(DefaultMethod);\n  const [seconds, setSeconds] = useState(DefaultSeconds);\n  const [timerOn, setTimerOn] = useState(false);\n  const [waterGrams, setWaterGrams] = useState(DefaultWater);\n\n  useEffect(() => {\n    const method = localStorage.getItem('method') || DefaultMethod\n    const goldenRatio =\n      parseFloat(localStorage.getItem('goldenRatio')) || DefaultRatio\n    const waterGrams =\n      parseFloat(localStorage.getItem('waterGrams')) || DefaultWater\n    const seconds =\n      parseFloat(localStorage.getItem('seconds')) || DefaultSeconds\n\n    setMethod(method)\n    setGoldenRatio(goldenRatio)\n    setWaterGrams(waterGrams)\n    setSeconds(seconds)\n  }, [])\n\n  useEffect(() => {\n    var tick = null\n\n    if (timerOn && seconds > 0) {\n      let endTime = new Date().getTime() + seconds * 1000 + 500\n\n      const updateClock = () => {\n        let msLeft = endTime - new Date().getTime()\n\n        if (msLeft >= 0) {\n          setSeconds(Math.floor(msLeft / 1000))\n\n          tick = setTimeout(\n            updateClock,\n            new Date(msLeft).getUTCMilliseconds() + 500\n          )\n        }\n      }\n      updateClock()\n    } else if (!timerOn) {\n      clearInterval(tick)\n    }\n    return () => clearInterval(tick)\n  }, [timerOn, seconds])\n\n  const stepTime = event => {\n    if (!timerOn && seconds < 420) {\n      let newSeconds =\n        event.target.innerText === '-'\n          ? stepDownValue(seconds, 1)\n          : stepUpValue(seconds, 1)\n      setSeconds(newSeconds)\n    }\n  }\n\n  const resetTimer = () => {\n    setSeconds(DefaultSeconds)\n    setTimerOn(false)\n  }\n\n  const playPause = () => {\n    setTimerOn(!timerOn)\n  }\n\n  const updateGoldenRatio = event => {\n    let ratio = event.target.value\n    setGoldenRatio(parseFloat(ratio))\n  }\n\n  const conversionFactors = {\n    cups: cupSize,\n    coffeeGrams: goldenRatio,\n    waterGrams: 1,\n  }\n\n  const updateWater = event => {\n    const eventInfo = event.target.id.split('-')\n    let conversionFactor = conversionFactors[eventInfo[0]]\n    let incrementFactor =\n      eventInfo[0] === 'cups' ? conversionFactor / 4 : conversionFactor\n    let value = event.target.type === 'number' ? event.target.value : waterGrams\n    let newWater\n\n    if (eventInfo[1] === 'decrement') {\n      newWater = stepDownValue(value, incrementFactor)\n    } else if (eventInfo[1] === 'increment') {\n      newWater = stepUpValue(value, incrementFactor)\n    } else if (eventInfo[1] === 'amount') {\n      newWater = value * conversionFactor\n    }\n    setWaterGrams(newWater)\n  }\n\n  // async fetchData () {\n  //   try {\n  //     const response = await fetch(instructionsUrl);\n  //     const json = await response.json();\n  //     console.log(json);\n  //   } catch (error) {\n  //       this.setError(error: error.message)\n  //   }\n  // }\n\n  const changeMethod = event => {\n    let method = event.target.value\n    let cupSize = (method === 'AeroPress') ? aeroCupSize : DefaultCupSize;\n    let ratio = (method === 'AeroPress') ? 13 : DefaultRatio;\n    let water = (method === 'AeroPress') ? 220 : DefaultWater;\n    let brewTime = (method === 'AeroPress') ? 120 : DefaultSeconds;\n    let instructions = (instructionsData[method]);\n\n    setInstructions(instructions);\n    setCupSize(cupSize);\n    setGoldenRatio(ratio);\n    setMethod(method);\n    setSeconds(brewTime);\n    setWaterGrams(water);\n  }\n\n  const saveSettings = () => {\n    localStorage.setItem('method', method)\n    localStorage.setItem('goldenRatio', goldenRatio)\n    localStorage.setItem('waterGrams', waterGrams)\n    localStorage.setItem('seconds', seconds)\n  }\n  if (!instructions) {return null;}\n  // console.log(instructions.steps);\n  return (\n    <div className=\"App\">\n      <main>\n        <BrewMethodInput\n          method={method}\n          changeMethod={changeMethod}\n        />\n        <StrengthInput\n          goldenRatio={goldenRatio}\n          setGoldenRatio={updateGoldenRatio}\n        />\n        <QuantityInput\n          waterGrams={waterGrams}\n          goldenRatio={goldenRatio}\n          cupSize={cupSize}\n          updateWater={updateWater}\n        />\n        <Timer\n          seconds={seconds}\n          stepTime={stepTime}\n          resetTimer={resetTimer}\n          playPause={playPause}\n        />\n        <button\n          id=\"saveSettings\"\n          className=\"rectButton\"\n          type=\"button\"\n          onClick={saveSettings}\n        >\n          Save Settings\n        </button>\n        <Instructions\n          grindSize={instructions[\"grind-size\"]}\n          list={instructions.steps}\n          goldenRatio={goldenRatio}\n          waterGrams={waterGrams}\n        />\n      </main>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}