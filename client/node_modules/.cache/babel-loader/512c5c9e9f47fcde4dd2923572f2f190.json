{"ast":null,"code":"import _defineProperty from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nvar DefaultCups = 2;\nvar DefaultRatio = 15.5;\nvar CoffeeGrindsLabel = \"g coffee (ground)\";\nvar CupsLabel = \"10oz cups\"; //input coffeeGrams available (user input number) and goldenRatio and outPuts number of cups possible\n\nvar DesiredCups = function DesiredCups(coffeeGrams) {\n  var goldenRatio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 15;\n  return coffeeGrams / goldenRatio;\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      cups: DefaultCups,\n      goldenRatio: DefaultRatio,\n      ingredients: '',\n      error: null,\n      selectedButton: 'no'\n    };\n    _this.onSubmitChange = _this.onSubmitChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onSubmitChange\",\n    value: function onSubmitChange(event) {\n      var target = event.target;\n      var value = event.target.value;\n      var name = target.name; //make sure input is a number here or post an error message\n\n      if (target.type === 'checkbox') {\n        this.setState({\n          selectedButton: value\n        });\n      } else {\n        isNaN(value) ? this.setState(_defineProperty({}, name, 0)) : this.setState(_defineProperty({}, name, parseFloat(value)));\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      var cups = this.state.cups;\n      var goldenRatio = this.state.goldenRatio;\n      this.setIngredients(cups, goldenRatio);\n      event.preventDefault();\n    }\n  }, {\n    key: \"setCups\",\n    value: function setCups(coffee, goldenRatio) {\n      var possibleCups = Math.round(coffee / goldenRatio);\n      this.setIngredients(possibleCups, goldenRatio);\n    }\n  }, {\n    key: \"setIngredients\",\n    value: function setIngredients(cups, goldenRatio) {\n      var cupSize = 280;\n      var waterGrams = Math.round(cupSize * cups); // const coffeeGrams = (waterGrams, goldenRatio = 15) => waterGrams / goldenRatio;\n\n      var coffeeGrams = Math.round(waterGrams / goldenRatio);\n      this.setState({\n        ingredients: {\n          coffee: coffeeGrams,\n          water: waterGrams\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          cups = _this$state.cups,\n          ingredients = _this$state.ingredients,\n          selectedButton = _this$state.selectedButton;\n      var coffee = ingredients.coffee;\n      var water = ingredients.water;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Brew Ratio\")), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Coffee beans running low?\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Check \\\"yes\\\" below if you have a random amount of ground coffee left to brew.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Check \\\"no\\\" if you prefer to brew a specific number of cups.\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(RadioInput, {\n        value: \"yes\",\n        onChange: this.onSubmitChange,\n        checked: this.state.selectedButton === 'yes',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(RadioInput, {\n        value: \"no\",\n        onChange: this.onSubmitChange,\n        checked: this.state.selectedButton === 'no',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }))), this.state.selectedButton === 'yes' ? React.createElement(\"div\", {\n        className: \"grindsInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"How much ground beans do you have (g)?\", React.createElement(CupGrindInput, {\n        name: 'coffee',\n        value: ingredients.coffee,\n        onChange: this.onSubmitChange,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))), React.createElement(Ingredients, {\n        coffee: cups,\n        water: water,\n        label: CupsLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        className: \"cupsInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Desired \", CupsLabel, \":\", React.createElement(CupGrindInput, {\n        name: 'cups',\n        value: cups,\n        onChange: this.onSubmitChange,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }))), React.createElement(Ingredients, {\n        coffee: coffee,\n        water: water,\n        label: CoffeeGrindsLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar CupGrindInput = function CupGrindInput(_ref) {\n  var name = _ref.name,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      onSubmit = _ref.onSubmit;\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: name,\n    type: \"number\",\n    step: \".01\",\n    value: value,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nvar Ingredients = function Ingredients(_ref2) {\n  var coffee = _ref2.coffee,\n      water = _ref2.water,\n      label = _ref2.label;\n  return React.createElement(\"div\", {\n    className: \"ingredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"coffeeOrCups\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, coffee, \" \", label), React.createElement(\"div\", {\n    className: \"water\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, water, \"g water\"));\n};\n\nvar RadioInput = function RadioInput(_ref3) {\n  var value = _ref3.value,\n      onChange = _ref3.onChange,\n      checked = _ref3.checked;\n  return React.createElement(\"span\", {\n    className: \"radioButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: value,\n    name: \"coffeeLowQuestion\",\n    value: value,\n    onChange: onChange,\n    checked: checked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, value));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","Component","DefaultCups","DefaultRatio","CoffeeGrindsLabel","CupsLabel","DesiredCups","coffeeGrams","goldenRatio","App","props","state","cups","ingredients","error","selectedButton","onSubmitChange","bind","onSubmit","event","target","value","name","type","setState","isNaN","parseFloat","setIngredients","preventDefault","coffee","possibleCups","Math","round","cupSize","waterGrams","water","CupGrindInput","onChange","Ingredients","label","RadioInput","checked"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst DefaultCups = 2;\nconst DefaultRatio = 15.5;\nconst CoffeeGrindsLabel = \"g coffee (ground)\";\nconst CupsLabel = \"10oz cups\"\n\n//input coffeeGrams available (user input number) and goldenRatio and outPuts number of cups possible\nconst DesiredCups = (coffeeGrams, goldenRatio = 15) => coffeeGrams / goldenRatio;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cups: DefaultCups,\n      goldenRatio: DefaultRatio,\n      ingredients: '',\n      error: null,\n      selectedButton: 'no',\n    };\n\n    this.onSubmitChange = this.onSubmitChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n\n\n  onSubmitChange(event) {\n    const target = event.target;\n    const value = event.target.value;\n    const name = target.name;\n    //make sure input is a number here or post an error message\n    if (target.type === 'checkbox') {\n      this.setState({ selectedButton: value });\n    }\n    else {  \n      (isNaN(value)) \n      ? this.setState({ [name]: 0})\n      : this.setState({ [name]: parseFloat(value) });\n    } \n  }\n\n  onSubmit(event) {\n    const { cups } = this.state;\n    const { goldenRatio } = this.state;\n    this.setIngredients(cups, goldenRatio); \n    event.preventDefault();\n  }\n\n  setCups(coffee, goldenRatio) {\n    const possibleCups = Math.round(coffee / goldenRatio);\n    this.setIngredients(possibleCups, goldenRatio);\n  }\n\n  setIngredients(cups, goldenRatio) {\n    const cupSize = 280;\n    const waterGrams = Math.round(cupSize * cups);\n    // const coffeeGrams = (waterGrams, goldenRatio = 15) => waterGrams / goldenRatio;\n    const coffeeGrams = Math.round(waterGrams / goldenRatio);\n\n    this.setState({\n      ingredients: {\n        coffee: coffeeGrams,\n        water: waterGrams\n      }\n    });\n  }\n\n  render() {\n    const { cups, ingredients, selectedButton } = this.state;\n    const coffee = (ingredients.coffee);\n    const water = (ingredients.water);\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Brew Ratio</h1>\n        </header>\n        <main>\n          <div className=\"interactions\">\n            <h2>Coffee beans running low?</h2>\n            <p>Check \"yes\" below if you have a random amount of ground coffee left to brew.</p>\n            <p>Check \"no\" if you prefer to brew a specific number of cups.</p>\n            <form>\n              <RadioInput \n                value=\"yes\"\n                onChange={this.onSubmitChange}\n                checked={this.state.selectedButton === 'yes'}\n              />\n              <RadioInput \n                value=\"no\"\n                onChange={this.onSubmitChange}\n                checked={this.state.selectedButton === 'no'}\n              />\n              </form>\n          </div>\n          { (this.state.selectedButton === 'yes')\n            ? <div className=\"grindsInput\">\n                <div className=\"interactions\">\n                  <label>How much ground beans do you have (g)?\n                    <CupGrindInput \n                      name={'coffee'}\n                      value={ingredients.coffee}\n                      onChange={this.onSubmitChange}\n                      onSubmit = {this.onSubmit}\n                    >\n                    </CupGrindInput>\n                  </label>\n                </div>  \n                <Ingredients\n                  coffee={cups}\n                  water={water}\n                  label={CupsLabel}\n                >\n                </Ingredients>\n              </div>  \n            : <div className=\"cupsInput\">\n                <div className=\"interactions\">\n                  <label>Desired {CupsLabel}:\n                    <CupGrindInput \n                      name={'cups'}\n                      value={cups}\n                      onChange={this.onSubmitChange}\n                      onSubmit = {this.onSubmit}\n                    >\n                    </CupGrindInput>\n                  </label>   \n                </div>\n                <Ingredients\n                  coffee={coffee}\n                  water={water}\n                  label={CoffeeGrindsLabel}\n                >\n                </Ingredients>\n              </div>\n            }  \n        </main>\n      </div>\n    );\n  }\n}\n\nconst CupGrindInput = ({name, value, onChange, onSubmit}) =>\n        <form onSubmit = {onSubmit}>\n            <input\n              name={name}\n              type=\"number\"\n              step=\".01\"\n              value={value}\n              onChange={onChange}\n            />\n          <button type=\"submit\" >\n            Submit\n          </button>\n        </form>\n\nconst Ingredients = ({ coffee, water, label }) =>\n  <div className=\"ingredients\">\n    <div className=\"coffeeOrCups\">\n      {coffee} {label}\n    </div>\n    <div className=\"water\"> \n      {water}g water\n    </div>\n  </div>\n\nconst RadioInput = ({ value, onChange, checked }) =>\n  <span className=\"radioButton\">\n    <input \n      type=\"checkbox\"\n      id={value}\n      name=\"coffeeLowQuestion\"\n      value={value}\n      onChange={onChange}\n      checked={checked}\n    />\n    <label for={value}>{value}</label>\n  </span>\n   \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}