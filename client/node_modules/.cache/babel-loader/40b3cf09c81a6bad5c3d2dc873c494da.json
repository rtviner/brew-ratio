{"ast":null,"code":"import _defineProperty from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { Component } from 'react';\nimport { IncrementDecrementSet } from './increment.js';\nimport { InputButton } from \"./inputButton.js\";\nimport './App.css';\nvar DefaultCups = 2; // const DefaultBrewAmt = 20;\n\nvar DefaultCoffee = 36;\nvar DefaultWater = 560;\nvar DefaultRatio = \"15.5\";\nvar waterGramsPerOz = 29.574;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      goldenRatio: DefaultRatio,\n      cups: DefaultCups,\n      // brewAmount: DefaultBrewAmt,\n      coffeeGrams: DefaultCoffee,\n      waterGrams: DefaultWater,\n      error: null\n    };\n    _this.updateQuantity = _this.updateQuantity.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.waterOzToGrams = _this.waterOzToGrams.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.waterGramsToOz = _this.waterGramsToOz.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.updateQuantities = this\n    //   .updateQuantities.bind(this);\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"updateAllQuantities\",\n    value: function updateAllQuantities(quantity1, quantity2) {}\n  }, {\n    key: \"updateQuantity\",\n    value: function updateQuantity(event) {\n      var eventInfo = event.target.id.split(\"-\");\n      var name = eventInfo[0];\n      var currentQuantity = this.state[name];\n      var newQuantity;\n\n      if (event.target.type === \"number\") {\n        newQuantity = parseFloat(event.target.value);\n      }\n\n      if (event.target.type === \"button\") {\n        if (eventInfo[1] === \"increment\") {\n          newQuantity = currentQuantity + 1;\n        }\n\n        if (eventInfo[1] === \"decrement\" && currentQuantity > 1) {\n          newQuantity = currentQuantity - 1;\n        }\n      }\n\n      this.setState(_defineProperty({}, name, newQuantity)); // if (name === \"brewAmount\") {\n      //   this.setState({ waterGrams: this.waterOzToGrams(newQuantity )});\n      // }\n      // if (name === \"waterGrams\") {\n      //   this.setState({ brewAmount: this.waterGramsToOz(newQuantity )});\n      // }\n    } //no longer a submit button\n    //   onSubmitCoffee(event) {\n    //     const { coffeeGrams, goldenRatio } = this.state;\n    //     this.setServings(coffeeGrams, parseFloat(goldenRatio));\n    //     event.preventDefault();\n    //   }\n    // //no longer a submit button\n    //   onSubmitServings(event) {\n    //     const { servings, goldenRatio } = this.state;\n    //     this.setIngredients(servings, parseFloat(goldenRatio));\n    //     event.preventDefault();\n    //   }\n    //this is not being called right now\n    // setServings(coffeeGrams, goldenRatio, servingSize = 280) {\n    //   const possibleServings = (coffeeGrams * goldenRatio) / servingSize;\n    //   const roundedPossibleServings = Math.round(possibleServings * 4) / 4;\n    //   this.setIngredients(roundedPossibleServings, goldenRatio);\n    // }\n    //convert waterGrams to oz\n\n  }, {\n    key: \"waterGramsToOz\",\n    value: function waterGramsToOz(waterGrams) {\n      var brewAmountOz = Math.round(waterGrams / waterGramsPerOz);\n      return brewAmountOz;\n    } //convert water in oz to grams\n\n  }, {\n    key: \"waterOzToGrams\",\n    value: function waterOzToGrams(waterOz) {\n      var waterGrams = Math.round(waterOz * waterGramsPerOz);\n      console.log(waterGrams);\n      return waterGrams;\n    } //use the goldenRatio and water amount to calculate cofee needed in grams;\n\n  }, {\n    key: \"coffeeGrams\",\n    value: function coffeeGrams(waterGrams, goldenRatio) {\n      var coffeeGrams = Math.round(waterGrams / goldenRatio);\n      return coffeeGrams;\n    } // //this is not being called right now\n    //   setIngredients(brewAmount, goldenRatio, servingSize=280) {   \n    //     const waterGrams = Math.round(brewAmount * servingSize);\n    //     const coffeeGrams = Math.round(waterGrams / goldenRatio);\n    //     this.setState({\n    //         brewAmount: brewAmount,\n    //         coffeeGrams: coffeeGrams,\n    //         waterGrams: waterGrams\n    //     });\n    //   }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          cups = _this$state.cups,\n          coffeeGrams = _this$state.coffeeGrams,\n          waterGrams = _this$state.waterGrams,\n          goldenRatio = _this$state.goldenRatio;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Brew Ratio\")), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"adjustables\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(IncrementDecrementSet, {\n        name: \"cups\",\n        title: \"Brewed Cups\",\n        value: cups,\n        measure: \"x 8oz\",\n        setQuantity: this.updateQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(IncrementDecrementSet, {\n        name: \"coffeeGrams\",\n        title: \"Ground Coffee\",\n        value: coffeeGrams,\n        measure: \"g\",\n        setQuantity: this.updateQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(IncrementDecrementSet, {\n        name: \"waterGrams\",\n        title: \"Water\",\n        value: waterGrams,\n        measure: \"mL or g\",\n        setQuantity: this.updateQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"strengthInput interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Coffee : Water\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(InputButton, {\n        className: goldenRatio === \"18\" ? \"active\" : \"inactive\",\n        id: \"light\",\n        name: \"goldenRatio\",\n        value: \"18\",\n        onClick: this.setQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"light\")), React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(InputButton, {\n        className: goldenRatio === \"15.5\" ? \"active\" : \"inactive\",\n        id: \"med\",\n        name: \"goldenRatio\",\n        value: \"15.5\",\n        onClick: this.setQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"med\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"medium\")), React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(InputButton, {\n        className: goldenRatio === \"13\" ? \"active\" : \"inactive\",\n        id: \"strong\",\n        name: \"goldenRatio\",\n        value: \"13\",\n        onClick: this.setQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"strong\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"strong\"))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","Component","IncrementDecrementSet","InputButton","DefaultCups","DefaultCoffee","DefaultWater","DefaultRatio","waterGramsPerOz","App","props","state","goldenRatio","cups","coffeeGrams","waterGrams","error","updateQuantity","bind","waterOzToGrams","waterGramsToOz","quantity1","quantity2","event","eventInfo","target","id","split","name","currentQuantity","newQuantity","type","parseFloat","value","setState","brewAmountOz","Math","round","waterOz","console","log","setQuantity"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { IncrementDecrementSet } from './increment.js';\nimport { InputButton } from \"./inputButton.js\";\nimport './App.css';\n\nconst DefaultCups = 2;\n// const DefaultBrewAmt = 20;\nconst DefaultCoffee = 36;\nconst DefaultWater = 560;\nconst DefaultRatio = \"15.5\";\nconst waterGramsPerOz = 29.574;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      goldenRatio: DefaultRatio,\n      cups: DefaultCups,\n      // brewAmount: DefaultBrewAmt,\n      coffeeGrams: DefaultCoffee,\n      waterGrams: DefaultWater, \n      error: null,\n    };\n\n    this.updateQuantity = this\n      .updateQuantity.bind(this);\n    this.waterOzToGrams = this.waterOzToGrams.bind(this);\n    this.waterGramsToOz = this.waterGramsToOz.bind(this);\n    // this.updateQuantities = this\n    //   .updateQuantities.bind(this);\n\n  }\n\n  updateAllQuantities(quantity1, quantity2) {\n\n  };\n\n  updateQuantity (event) {\n    const eventInfo = event.target.id.split(\"-\");\n    const name = eventInfo[0];\n    const currentQuantity  = this.state[name];\n    let newQuantity;\n\n    if (event.target.type === \"number\") {\n      newQuantity = parseFloat(event.target.value);\n    }\n\n    if (event.target.type === \"button\") {\n      if (eventInfo[1] === \"increment\" ) {\n        newQuantity = currentQuantity + 1;\n      }\n      if (eventInfo[1] === \"decrement\" && currentQuantity > 1) {\n        newQuantity = currentQuantity - 1;\n      }\n    }\n   \n    this.setState({ [name]: newQuantity });\n\n    // if (name === \"brewAmount\") {\n    //   this.setState({ waterGrams: this.waterOzToGrams(newQuantity )});\n    // }\n    // if (name === \"waterGrams\") {\n    //   this.setState({ brewAmount: this.waterGramsToOz(newQuantity )});\n    // }\n  }\n\n//no longer a submit button\n\n//   onSubmitCoffee(event) {\n//     const { coffeeGrams, goldenRatio } = this.state;\n//     this.setServings(coffeeGrams, parseFloat(goldenRatio));\n//     event.preventDefault();\n//   }\n\n// //no longer a submit button\n//   onSubmitServings(event) {\n//     const { servings, goldenRatio } = this.state;\n//     this.setIngredients(servings, parseFloat(goldenRatio));\n//     event.preventDefault();\n//   }\n\n//this is not being called right now\n  // setServings(coffeeGrams, goldenRatio, servingSize = 280) {\n  //   const possibleServings = (coffeeGrams * goldenRatio) / servingSize;\n  //   const roundedPossibleServings = Math.round(possibleServings * 4) / 4;\n\n  //   this.setIngredients(roundedPossibleServings, goldenRatio);\n  // }\n\n//convert waterGrams to oz\n  waterGramsToOz (waterGrams) {\n    const brewAmountOz = Math.round(waterGrams / waterGramsPerOz);\n    return brewAmountOz;\n  }\n\n//convert water in oz to grams\n  waterOzToGrams (waterOz) {\n    const waterGrams = Math.round(waterOz * waterGramsPerOz);\n    console.log(waterGrams);\n    return waterGrams;\n  }\n\n//use the goldenRatio and water amount to calculate cofee needed in grams;\n  coffeeGrams (waterGrams, goldenRatio) {\n    const coffeeGrams = Math.round(waterGrams / goldenRatio);\n    return coffeeGrams;\n  }\n\n// //this is not being called right now\n//   setIngredients(brewAmount, goldenRatio, servingSize=280) {   \n//     const waterGrams = Math.round(brewAmount * servingSize);\n//     const coffeeGrams = Math.round(waterGrams / goldenRatio);\n\n//     this.setState({\n//         brewAmount: brewAmount,\n//         coffeeGrams: coffeeGrams,\n//         waterGrams: waterGrams\n//     });\n//   }\n\n  render() {\n    const { cups, coffeeGrams, waterGrams, goldenRatio } = this.state;\n\n    return (\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Brew Ratio</h1>\n        </header>\n\n        <main>\n          <div id=\"adjustables\">\n            <IncrementDecrementSet\n              name=\"cups\"\n              title=\"Brewed Cups\"\n              value={cups}\n              measure=\"x 8oz\"\n              setQuantity=\n                {this.updateQuantity}\n            />\n            <IncrementDecrementSet\n              name=\"coffeeGrams\"\n              title=\"Ground Coffee\"\n              value={coffeeGrams}\n              measure=\"g\"\n              setQuantity=\n                {this.updateQuantity}\n            />\n            <IncrementDecrementSet\n              name=\"waterGrams\"\n              title=\"Water\"\n              value={waterGrams}\n              measure=\"mL or g\"\n              setQuantity=\n                {this.updateQuantity}\n            />\n          </div>\n\n          <div className=\"strengthInput interactions\">\n            <h2>Coffee : Water</h2>\n            <form> \n\n              <div className=\"strength\"> \n                  <InputButton\n                    className = {(goldenRatio === \"18\") ? \"active\" : \"inactive\"} \n                    id=\"light\"\n                    name=\"goldenRatio\"\n                    value=\"18\"\n                    onClick={this.setQuantity}\n                  />\n                <label className=\"strength\" htmlFor=\"light\">light</label>\n              </div>\n\n              <div className=\"strength\">\n                <InputButton\n                  className = {(goldenRatio === \"15.5\") ? \"active\" : \"inactive\"} \n                  id=\"med\"\n                  name=\"goldenRatio\"\n                  value=\"15.5\"\n                  onClick={this.setQuantity}\n                />\n                <label className=\"strength\" htmlFor=\"med\">medium</label>\n              </div>\n\n              <div className=\"strength\">\n                <InputButton\n                   className = {(goldenRatio === \"13\") ? \"active\" : \"inactive\"}\n                  id=\"strong\"\n                  name=\"goldenRatio\"                \n                  value=\"13\"\n                  onClick={this.setQuantity}\n                />\n                <label className=\"strength\" htmlFor=\"strong\">strong</label>\n              </div>\n\n            </form>\n          </div>\n\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}