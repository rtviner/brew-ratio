{"ast":null,"code":"import _classCallCheck from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nvar DefaultCups = 2; // input grams of water per 1 cup and desired cups (user input number) and output will be the number of grams of water required to make those desired cups\n// const WaterGrams = (cupSizeML = 280, desiredCups) => cupSizeML * desiredCups;\n//input waterGrams needed for desiredCups of coffee and goldenRatio (grams of water per 1 gram coffee) and outputs coffee grams required to make desired cups.\n// const CoffeeGrams = (waterGrams, goldenRatio = 15) => waterGrams / goldenRatio;\n//input coffeeGrams available (user input number) and goldenRatio and outPuts number of cups possible\n// const DesiredCups = (coffeeGrams, goldenRatio = 15) => coffeeGrams / goldenRatio;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      cups: DefaultCups,\n      ingredients: '',\n      error: null\n    };\n    _this.onSubmitChange = _this.onSubmitChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onCupsSubmit = _this.onCupsSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onSubmitChange\",\n    value: function onSubmitChange(event) {\n      this.setState({\n        cups: event.target.value\n      });\n    }\n  }, {\n    key: \"onCupsSubmit\",\n    value: function onCupsSubmit(event) {\n      var cups = this.state.cups;\n      this.setIngredients(cups);\n      event.preventDefault();\n    }\n  }, {\n    key: \"setIngredients\",\n    value: function setIngredients(cups) {\n      var desiredCups = cups.desiredCups;\n\n      var waterGrams = function waterGrams() {\n        var cupSizeML = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 280;\n        var desiredCups = arguments.length > 1 ? arguments[1] : undefined;\n        return cupSizeML * desiredCups;\n      };\n\n      var coffeeGrams = function coffeeGrams(waterGrams) {\n        var goldenRatio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 15;\n        return waterGrams / goldenRatio;\n      };\n\n      this.setState({\n        ingredients: {\n          coffee: coffeeGrams,\n          water: waterGrams\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          cups = _this$state.cups,\n          ingredients = _this$state.ingredients,\n          error = _this$state.error;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Brew Ratio\")), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(CupInput, {\n        value: cups,\n        onChange: this.onSubmitChange,\n        onSubmit: this.onCupsSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(Ingredients, {\n        coffeeGrams: ingredients.coffee,\n        waterGrams: ingredients.water,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar CupInput = function CupInput(_ref) {\n  var value = _ref.value,\n      onChange = _ref.onChange,\n      onSubmit = _ref.onSubmit;\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Desired Cups:\", React.createElement(\"input\", {\n    type: \"text\",\n    value: value,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nvar Ingredients = function Ingredients(_ref2) {\n  var coffeeGrams = _ref2.coffeeGrams,\n      waterGrams = _ref2.waterGrams;\n  return React.createElement(\"div\", {\n    className: \"ingredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"coffee\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, coffeeGrams, \"(g)\"), React.createElement(\"div\", {\n    className: \"water\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, waterGrams, \"(g)\"));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","Component","DefaultCups","App","props","state","cups","ingredients","error","onSubmitChange","bind","onCupsSubmit","event","setState","target","value","setIngredients","preventDefault","desiredCups","waterGrams","cupSizeML","coffeeGrams","goldenRatio","coffee","water","CupInput","onChange","onSubmit","Ingredients"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst DefaultCups = 2;\n\n// input grams of water per 1 cup and desired cups (user input number) and output will be the number of grams of water required to make those desired cups\n// const WaterGrams = (cupSizeML = 280, desiredCups) => cupSizeML * desiredCups;\n\n//input waterGrams needed for desiredCups of coffee and goldenRatio (grams of water per 1 gram coffee) and outputs coffee grams required to make desired cups.\n// const CoffeeGrams = (waterGrams, goldenRatio = 15) => waterGrams / goldenRatio;\n\n//input coffeeGrams available (user input number) and goldenRatio and outPuts number of cups possible\n// const DesiredCups = (coffeeGrams, goldenRatio = 15) => coffeeGrams / goldenRatio;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cups: DefaultCups,\n      ingredients: '',\n      error: null,\n    };\n\n    this.onSubmitChange = this.onSubmitChange.bind(this);\n    this.onCupsSubmit = this.onCupsSubmit.bind(this);\n  }\n\n  onSubmitChange(event) {\n    this.setState({ cups: event.target.value });\n  }\n\n  onCupsSubmit(event) {\n    const { cups } = this.state;\n    this.setIngredients(cups); \n    event.preventDefault();\n  }\n\n  setIngredients(cups) {\n    const { desiredCups } = cups;\n    const waterGrams = (cupSizeML = 280, desiredCups) => cupSizeML * desiredCups;\n    const coffeeGrams = (waterGrams, goldenRatio = 15) => waterGrams / goldenRatio;\n\n    this.setState({\n      ingredients: {\n        coffee: coffeeGrams,\n        water: waterGrams\n      }\n    });\n  }\n\n  render() {\n    const { cups, ingredients, error} = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Brew Ratio</h1>\n        </header>\n        <main>\n          <div className=\"interactions\">\n            <CupInput \n              value={cups}\n              onChange={this.onSubmitChange}\n              onSubmit = {this.onCupsSubmit}\n            >\n            </CupInput>\n          </div>\n          <Ingredients\n            coffeeGrams={ingredients.coffee}\n            waterGrams={ingredients.water}\n          >\n          </Ingredients>\n        </main>\n      </div>\n    );\n  }\n}\n\nconst CupInput = ({value, onChange, onSubmit}) =>\n        <form onSubmit = {onSubmit}>\n          <label>\n            Desired Cups:\n            <input\n              type=\"text\"\n              value={value}\n              onChange={onChange}\n            />\n          </label>\n          <button type=\"submit\" >\n            Submit\n          </button>\n        </form>\n\nconst Ingredients = ({ coffeeGrams, waterGrams }) =>\n  <div className=\"ingredients\">\n    <div className=\"coffee\">\n      {coffeeGrams}\n      (g)\n    </div>\n    <div className=\"water\"> \n      {waterGrams}\n      (g)\n    </div>\n  </div>\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}