{"ast":null,"code":"import _slicedToArray from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport BrewMethodInput from './components/BrewMethodInput';\nimport QuantityInput from './components/QuantityInput';\nimport StrengthInput from './components/StrengthInput';\nimport Timer from './components/Timer';\nvar DefaultMethod = \"Pour Over\";\nvar DefaultWater = 558;\nvar DefaultRatio = 15.5;\nvar DefaultSeconds = 180;\nvar cupSize = 279;\n\nvar App = function App() {\n  var _useState = useState(DefaultMethod),\n      _useState2 = _slicedToArray(_useState, 2),\n      method = _useState2[0],\n      setMethod = _useState2[1];\n\n  var _useState3 = useState(DefaultRatio),\n      _useState4 = _slicedToArray(_useState3, 2),\n      goldenRatio = _useState4[0],\n      setGoldenRatio = _useState4[1];\n\n  var _useState5 = useState(DefaultWater),\n      _useState6 = _slicedToArray(_useState5, 2),\n      waterGrams = _useState6[0],\n      setWaterGrams = _useState6[1];\n\n  var _useState7 = useState(DefaultSeconds),\n      _useState8 = _slicedToArray(_useState7, 2),\n      seconds = _useState8[0],\n      setSeconds = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      timerOn = _useState10[0],\n      setTimerOn = _useState10[1];\n\n  useEffect(function () {\n    var method = localStorage.getItem('method') || DefaultMethod;\n    var goldenRatio = parseFloat(localStorage.getItem('goldenRatio')) || DefaultRatio;\n    var waterGrams = parseFloat(localStorage.getItem('waterGrams')) || DefaultWater;\n    var seconds = parseFloat(localStorage.getItem('seconds')) || DefaultSeconds;\n    setMethod(method);\n    setGoldenRatio(goldenRatio);\n    setWaterGrams(waterGrams);\n    setSeconds(seconds);\n  }, []);\n  useEffect(function () {\n    var tick = null;\n\n    if (timerOn && seconds > 0) {\n      var endTime = new Date().getTime() + seconds * 1000 + 500;\n\n      var updateClock = function updateClock() {\n        var msLeft = endTime - new Date().getTime();\n\n        if (msLeft >= 0) {\n          setSeconds(Math.floor(msLeft / 1000));\n          tick = setTimeout(updateClock, new Date(msLeft).getUTCMilliseconds() + 500);\n        }\n      };\n\n      updateClock();\n    } else if (!timerOn) {\n      clearInterval(tick);\n    }\n\n    return function () {\n      return clearInterval(tick);\n    };\n  }, [timerOn, seconds]);\n\n  var stepUpTime = function stepUpTime() {\n    var currentSeconds = seconds;\n\n    if (!timerOn && currentSeconds < 420) {\n      var newSeconds = currentSeconds + 1;\n      setSeconds(newSeconds);\n    }\n  };\n\n  var stepDownTime = function stepDownTime() {\n    var currentSeconds = seconds;\n\n    if (!timerOn && currentSeconds > 0) {\n      var newSeconds = currentSeconds - 1;\n      setSeconds(newSeconds);\n    }\n  };\n\n  var stepDownValue = function stepDownValue(value, conversionFactor) {\n    if (value > conversionFactor) {\n      return value - conversionFactor;\n    }\n  };\n\n  var stepUpValue = function stepUpValue(value, conversionFactor) {\n    return value + conversionFactor;\n  };\n\n  var resetTimer = function resetTimer() {\n    setSeconds(DefaultSeconds);\n    setTimerOn(false);\n  };\n\n  var playPause = function playPause() {\n    setTimerOn(!timerOn);\n  };\n\n  var changeMethod = function changeMethod(event) {\n    var method = event.target.value;\n    setMethod(method);\n  };\n\n  var updateGoldenRatio = function updateGoldenRatio(event) {\n    var ratio = event.target.value;\n    setGoldenRatio(parseFloat(ratio));\n  };\n\n  var updateWater = function updateWater(event) {\n    var conversionFactors = {\n      cups: cupSize,\n      coffeeGrams: goldenRatio,\n      waterGrams: 1\n    };\n    var eventInfo = event.target.id.split('-');\n    var conversionFactor = conversionFactors[eventInfo[0]];\n    var incrementFactor = eventInfo[0] === 'cups' ? conversionFactor / 4 : conversionFactor;\n    var value = event.target.type === 'number' ? event.target.value : waterGrams;\n    var newWater;\n\n    if (eventInfo[1] === 'decrement') {\n      newWater = stepDownValue(value, incrementFactor);\n    } else if (eventInfo[1] === 'increment') {\n      newWater = stepUpValue(value, incrementFactor);\n    } else {\n      newWater = value * conversionFactor;\n    }\n\n    ;\n    setWaterGrams(newWater);\n  };\n\n  var saveSettings = function saveSettings() {\n    localStorage.setItem('method', method);\n    localStorage.setItem('goldenRatio', goldenRatio);\n    localStorage.setItem('waterGrams', waterGrams);\n    localStorage.setItem('seconds', seconds);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(BrewMethodInput, {\n    method: method,\n    changeMethod: changeMethod,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(StrengthInput, {\n    goldenRatio: goldenRatio,\n    setGoldenRatio: updateGoldenRatio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(QuantityInput, {\n    waterGrams: waterGrams,\n    goldenRatio: goldenRatio,\n    updateWater: updateWater,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(Timer, {\n    seconds: seconds,\n    stepUpTime: stepUpTime,\n    stepDownTime: stepDownTime,\n    resetTimer: resetTimer,\n    playPause: playPause,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    id: \"saveSettings\",\n    className: \"rectButton\",\n    type: \"button\",\n    onClick: saveSettings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Save Settings\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","useState","useEffect","BrewMethodInput","QuantityInput","StrengthInput","Timer","DefaultMethod","DefaultWater","DefaultRatio","DefaultSeconds","cupSize","App","method","setMethod","goldenRatio","setGoldenRatio","waterGrams","setWaterGrams","seconds","setSeconds","timerOn","setTimerOn","localStorage","getItem","parseFloat","tick","endTime","Date","getTime","updateClock","msLeft","Math","floor","setTimeout","getUTCMilliseconds","clearInterval","stepUpTime","currentSeconds","newSeconds","stepDownTime","stepDownValue","value","conversionFactor","stepUpValue","resetTimer","playPause","changeMethod","event","target","updateGoldenRatio","ratio","updateWater","conversionFactors","cups","coffeeGrams","eventInfo","id","split","incrementFactor","type","newWater","saveSettings","setItem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport './App.css';\n\nimport BrewMethodInput from './components/BrewMethodInput'\nimport QuantityInput from './components/QuantityInput';\nimport StrengthInput from './components/StrengthInput';\nimport Timer from './components/Timer';\n\nconst DefaultMethod = \"Pour Over\"\nconst DefaultWater = 558\nconst DefaultRatio = 15.5\nconst DefaultSeconds = 180;\nconst cupSize = 279;\n\nconst App = () => {\n  const [method, setMethod] = useState(DefaultMethod);\n  const [goldenRatio, setGoldenRatio] = useState(DefaultRatio);\n  const [waterGrams, setWaterGrams] = useState(DefaultWater);\n  const [seconds, setSeconds] = useState(DefaultSeconds);\n  const [timerOn, setTimerOn] = useState(false);\n  \n  useEffect(() => {\n    const method = localStorage.getItem('method') || DefaultMethod;\n    const goldenRatio = parseFloat(localStorage.getItem('goldenRatio')) || DefaultRatio;\n    const waterGrams = parseFloat(localStorage.getItem('waterGrams'))\n        || DefaultWater;\n    const seconds = parseFloat(localStorage.getItem('seconds'))\n        || DefaultSeconds;\n\n    setMethod(method);\n    setGoldenRatio(goldenRatio);\n    setWaterGrams(waterGrams);\n    setSeconds(seconds);\n  }, []);\n\n  useEffect(() => {\n    var tick = null;\n    \n    if (timerOn && seconds > 0) {\n      let endTime = new Date().getTime() +seconds * 1000 + 500;\n\n      const updateClock = () => {\n        let msLeft = endTime - new Date().getTime();\n\n        if (msLeft >= 0) {\n          setSeconds(Math.floor(msLeft/1000));\n\n          tick = setTimeout(\n            updateClock,\n            new Date(msLeft).getUTCMilliseconds() + 500\n          );\n        }\n      }\n      updateClock()\n    } else if (!timerOn) {\n      clearInterval(tick);\n    }\n    return () => clearInterval(tick);\n  }, [timerOn, seconds]);\n\n  const stepUpTime = () => {\n    const currentSeconds = seconds;\n\n    if (!timerOn && currentSeconds < 420) {\n      let newSeconds = currentSeconds + 1;\n      setSeconds(newSeconds);\n    }\n  };\n\n  const stepDownTime = () => {\n    const currentSeconds = seconds;\n\n    if (!timerOn && currentSeconds > 0) {\n      let newSeconds = currentSeconds - 1;\n      setSeconds(newSeconds);\n    }\n  };\n\n  const stepDownValue = (value, conversionFactor) => {\n    if (value > conversionFactor) {\n      return value - conversionFactor;\n    } \n  }\n  \n\n  const stepUpValue = (value, conversionFactor) => {\n    return value + conversionFactor;\n  }\n\n  const resetTimer = () => {\n    setSeconds(DefaultSeconds);\n    setTimerOn(false);\n  };\n\n  const playPause = () => {\n    setTimerOn(!timerOn);\n  };\n\n  const changeMethod = (event) => {\n    let method = event.target.value;\n    setMethod(method);\n  };\n\n  const updateGoldenRatio = (event) => {\n    let ratio = event.target.value;\n    setGoldenRatio(parseFloat(ratio));\n  };\n\n  const updateWater = (event) => {\n    const conversionFactors = {\n      cups: cupSize,\n      coffeeGrams: goldenRatio,\n      waterGrams: 1\n    };\n    const eventInfo = event.target.id.split('-');\n    let conversionFactor = conversionFactors[eventInfo[0]];\n    let incrementFactor = (eventInfo[0] === 'cups') ? conversionFactor/4 : conversionFactor;\n    let value = event.target.type === 'number' ? event.target.value : waterGrams;\n    let newWater;\n\n    if (eventInfo[1] === 'decrement') { \n      newWater = stepDownValue(value,incrementFactor);\n    } else if (eventInfo[1] === 'increment') {\n      newWater = stepUpValue(value,incrementFactor);\n    } else {\n      newWater = value * conversionFactor;\n    };\n    \n    setWaterGrams(newWater);\n  };\n\n  const saveSettings = () => {\n    localStorage.setItem('method', method);\n    localStorage.setItem('goldenRatio', \n      goldenRatio);\n    localStorage.setItem('waterGrams', \n      waterGrams);\n    localStorage.setItem('seconds', seconds)\n  };\n\n  return (\n    <div className=\"App\">\n      <main>\n        <BrewMethodInput\n          method = {method}\n          changeMethod = {changeMethod}\n        />\n        <StrengthInput \n          goldenRatio = {goldenRatio}\n          setGoldenRatio = {updateGoldenRatio}\n        />\n        <QuantityInput \n          waterGrams = {waterGrams}\n          goldenRatio = {goldenRatio}\n          updateWater = {updateWater}\n        />\n        <Timer \n          seconds = {seconds}\n          stepUpTime = {stepUpTime}\n          stepDownTime = {stepDownTime}\n          resetTimer = {resetTimer}\n          playPause = {playPause}\n        />\n        <button\n          id=\"saveSettings\"\n          className=\"rectButton\"\n          type=\"button\"\n          onClick={saveSettings}\n        >\n          Save Settings\n        </button>\n      </main>\n    </div>\n  );\n};\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}