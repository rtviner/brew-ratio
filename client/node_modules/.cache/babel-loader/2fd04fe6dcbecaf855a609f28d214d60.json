{"ast":null,"code":"import _classCallCheck from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nvar DefaultCups = 2; // input grams of water per 1 cup and desired cups (user input number) and output will be the number of grams of water required to make those desired cups\n\nvar WaterGrams = function WaterGrams() {\n  var cupSizeML = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 280;\n  var desiredCups = arguments.length > 1 ? arguments[1] : undefined;\n  return cupSizeML * desiredCups;\n}; //input waterGrams needed for desiredCups of coffee and goldenRatio (grams of water per 1 gram coffee) and outputs coffee grams required to make desired cups.\n\n\nvar CoffeeGrams = function CoffeeGrams(waterGrams) {\n  var goldenRatio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 15;\n  return waterGrams / goldenRatio;\n}; //input coffeeGrams available (user input number) and goldenRatio and outPuts number of cups possible\n\n\nvar DesiredCups = function DesiredCups(coffeeGrams) {\n  var goldenRatio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 15;\n  return coffeeGrams / goldenRatio;\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      cups: '',\n      ingredients: '',\n      error: null\n    };\n    _this.onCupsSubmit = _this.onCupsSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onCupsSubmit\",\n    value: function onCupsSubmit(event) {\n      this.setState({\n        cups: event.target.value\n      });\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Brew Ratio\")), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(CupInput, {\n        onSubmit: this.onCupsSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Ingredients, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar CupInput = function CupInput(onSubmit) {\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Desired Cups:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"cups\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nvar Ingredients = function Ingredients(waterGrams, coffeeGrams) {\n  return React.createElement(\"div\", {\n    className: \"ingredients-result\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"coffee\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"(g)\"), React.createElement(\"div\", {\n    className: \"water\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"(g)\"));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","Component","DefaultCups","WaterGrams","cupSizeML","desiredCups","CoffeeGrams","waterGrams","goldenRatio","DesiredCups","coffeeGrams","App","props","state","cups","ingredients","error","onCupsSubmit","bind","event","setState","target","value","preventDefault","CupInput","onSubmit","Ingredients"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,IAAMC,WAAW,GAAG,CAApB,C,CAEA;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,MAACC,SAAD,uEAAa,GAAb;AAAA,MAAkBC,WAAlB;AAAA,SAAkCD,SAAS,GAAGC,WAA9C;AAAA,CAAnB,C,CAEA;;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,UAAD;AAAA,MAAaC,WAAb,uEAA2B,EAA3B;AAAA,SAAkCD,UAAU,GAAGC,WAA/C;AAAA,CAApB,C,CAEA;;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,WAAD;AAAA,MAAcF,WAAd,uEAA4B,EAA5B;AAAA,SAAmCE,WAAW,GAAGF,WAAjD;AAAA,CAApB;;IAEMG,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAMA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AATiB;AAUlB;;;;iCAEYC,K,EAAO;AAClB,WAAKC,QAAL,CAAc;AAACN,QAAAA,IAAI,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAApB,OAAd;AAEAH,MAAAA,KAAK,CAACI,cAAN;AACD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAI,KAAKN,YADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CAJF,CADF;AAeD;;;;EAnCehB,S;;AAsClB,IAAMuB,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD;AAAA,SACT;AAAM,IAAA,QAAQ,EAAIA,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAQE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADS;AAAA,CAAjB;;AAcA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACnB,UAAD,EAAaG,WAAb;AAAA,SAClB;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAKE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,CADkB;AAAA,CAApB;;AAYA,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst DefaultCups = 2;\n\n// input grams of water per 1 cup and desired cups (user input number) and output will be the number of grams of water required to make those desired cups\nconst WaterGrams = (cupSizeML = 280, desiredCups) => cupSizeML * desiredCups;\n\n//input waterGrams needed for desiredCups of coffee and goldenRatio (grams of water per 1 gram coffee) and outputs coffee grams required to make desired cups.\nconst CoffeeGrams = (waterGrams, goldenRatio = 15) => waterGrams / goldenRatio;\n\n//input coffeeGrams available (user input number) and goldenRatio and outPuts number of cups possible\nconst DesiredCups = (coffeeGrams, goldenRatio = 15) => coffeeGrams / goldenRatio;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cups: '',\n      ingredients: '',\n      error: null,\n    };\n\n    this.onCupsSubmit = this.onCupsSubmit.bind(this);\n  }\n\n  onCupsSubmit(event) {\n    this.setState({cups: event.target.value});\n\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Brew Ratio</h1>\n        </header>\n        <main>\n          <CupInput \n            onSubmit = {this.onCupsSubmit}\n          >\n          </CupInput>\n          <Ingredients>\n          </Ingredients>\n        </main>\n      </div>\n    );\n  }\n}\n\nconst CupInput = (onSubmit) =>\n        <form onSubmit = {onSubmit}>\n          <label>\n            Desired Cups:\n            <input\n              type=\"text\"\n              name=\"cups\"\n            />\n          </label>\n          <button type=\"submit\" value=\"Submit\">\n            Submit\n          </button>\n        </form>\n\nconst Ingredients = (waterGrams, coffeeGrams) =>\n  <div className=\"ingredients-result\">\n    <div className=\"coffee\">\n     \n      (g)\n    </div>\n    <div className=\"water\"> \n\n      (g)\n    </div>\n  </div>\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}