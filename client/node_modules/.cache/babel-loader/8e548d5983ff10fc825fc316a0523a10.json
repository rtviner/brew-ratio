{"ast":null,"code":"import _defineProperty from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { Component } from 'react'; // import PropTypes from 'prop-types';\n\nimport IncrementDecrementSet from 'increment.js';\nimport './App.css';\nvar DefaultCups = 2;\nvar DefaultCoffee = 36;\nvar DefaultWater = 560;\nvar DefaultRatio = \"15.5\";\nvar CoffeeGrindsLabel = \"g ground coffee\";\nvar CupsLabel = \"10oz servings\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      goldenRatio: DefaultRatio,\n      cups: DefaultCups,\n      coffee: DefaultCoffee,\n      water: DefaultWater,\n      error: null,\n      coffeeOrServings: 'Servings desired'\n    };\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmitCoffee = _this.onSubmitCoffee.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmitCups = _this.onSubmitCups.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onClick\",\n    value: function onClick(event) {\n      var target = event.target;\n      var value = event.target.value;\n      var name = target.name;\n      target.type === 'button' ? this.setState(_defineProperty({}, name, value)) : !value ? //if empty string is submitted set state value to zero***\n      this.setState(_defineProperty({}, name, \"\")) : this.setState(_defineProperty({}, name, parseFloat(value)));\n    }\n  }, {\n    key: \"onSubmitCoffee\",\n    value: function onSubmitCoffee(event) {\n      var _this$state = this.state,\n          coffee = _this$state.coffee,\n          goldenRatio = _this$state.goldenRatio;\n      this.setCups(coffee, parseFloat(goldenRatio));\n      event.preventDefault();\n    }\n  }, {\n    key: \"onSubmitCups\",\n    value: function onSubmitCups(event) {\n      var _this$state2 = this.state,\n          cups = _this$state2.cups,\n          goldenRatio = _this$state2.goldenRatio;\n      this.setIngredients(cups, parseFloat(goldenRatio));\n      event.preventDefault();\n    }\n  }, {\n    key: \"setCups\",\n    value: function setCups(coffee, goldenRatio) {\n      var cupSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 280;\n      var possibleCups = coffee * goldenRatio / cupSize;\n      var roundedPossibleCups = Math.round(possibleCups * 4) / 4;\n      this.setIngredients(roundedPossibleCups, goldenRatio);\n    }\n  }, {\n    key: \"setIngredients\",\n    value: function setIngredients(cups, goldenRatio) {\n      var cupSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 280;\n      var waterGrams = Math.round(cups * cupSize);\n      var coffeeGrams = Math.round(waterGrams / goldenRatio);\n      this.setState({\n        cups: cups,\n        coffee: coffeeGrams,\n        water: waterGrams\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          cups = _this$state3.cups,\n          coffee = _this$state3.coffee,\n          water = _this$state3.water,\n          coffeeOrServings = _this$state3.coffeeOrServings,\n          goldenRatio = _this$state3.goldenRatio;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Brew Ratio\")), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Brew By\"), React.createElement(\"div\", {\n        className: \"coffeeOrCupsInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"CupOrGrind\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"CupOrGrind\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(IncrementDecrementSet, {\n        name: \"servings\",\n        title: \"Servings Amount\",\n        interval: \"1\",\n        setIntervalTime: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"CupOrGrind\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(ButtonInput, {\n        className: coffeeOrServings === \"Servings desired\" ? \"active\" : \"inactive\",\n        id: \"servings\",\n        name: \"coffeeOrServings\",\n        value: \"Servings desired\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })))), coffeeOrServings === \"Coffee on hand\" ? React.createElement(\"div\", {\n        className: \"grindsInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"interactions labelInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(CupGrindInput, {\n        label: \"Enter weight of coffee in grams\",\n        id: \"coffeeInput\",\n        name: \"coffee\",\n        onChange: this.onClick,\n        onSubmit: this.onSubmitCoffee,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(Ingredients, {\n        coffee: cups,\n        water: water,\n        label: CupsLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        className: \"cupsInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(CupGrindInput, {\n        label: \"Enter number of 10oz brewed servings\",\n        id: \"cupsInput\",\n        name: \"cups\",\n        onChange: this.onClick,\n        onSubmit: this.onSubmitCups,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(Ingredients, {\n        coffee: coffee,\n        water: water,\n        label: CoffeeGrindsLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"strengthInput interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Coffee:1g Water\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(ButtonInput, {\n        className: goldenRatio === \"18\" ? \"active\" : \"inactive\",\n        id: \"light\",\n        name: \"goldenRatio\",\n        value: \"18\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"light\")), React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(ButtonInput, {\n        className: goldenRatio === \"15.5\" ? \"active\" : \"inactive\",\n        id: \"med\",\n        name: \"goldenRatio\",\n        value: \"15.5\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"med\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"medium\")), React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(ButtonInput, {\n        className: goldenRatio === \"13\" ? \"active\" : \"inactive\",\n        id: \"strong\",\n        name: \"goldenRatio\",\n        value: \"13\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"strong\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"strong\"))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar CupGrindInput = function CupGrindInput(_ref) {\n  var label = _ref.label,\n      id = _ref.id,\n      name = _ref.name,\n      onChange = _ref.onChange,\n      onSubmit = _ref.onSubmit;\n  return React.createElement(\"form\", {\n    className: \"CupGrindInput\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"CupOrGrind\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, label), React.createElement(\"input\", {\n    id: id,\n    name: name,\n    type: \"number\",\n    step: \".01\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nvar Ingredients = function Ingredients(_ref2) {\n  var coffee = _ref2.coffee,\n      water = _ref2.water,\n      label = _ref2.label;\n  return React.createElement(\"div\", {\n    className: \"ingredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"coffeeOrCups\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"Ingredients\"), coffee, \" \", label), React.createElement(\"div\", {\n    className: \"water\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, water, \" g water\"));\n};\n\nvar ButtonInput = function ButtonInput(_ref3) {\n  var className = _ref3.className,\n      id = _ref3.id,\n      name = _ref3.name,\n      value = _ref3.value,\n      onClick = _ref3.onClick;\n  return React.createElement(\"span\", {\n    className: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: className,\n    type: \"button\",\n    id: id,\n    name: name,\n    value: value,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","Component","IncrementDecrementSet","DefaultCups","DefaultCoffee","DefaultWater","DefaultRatio","CoffeeGrindsLabel","CupsLabel","App","props","state","goldenRatio","cups","coffee","water","error","coffeeOrServings","onClick","bind","onSubmitCoffee","onSubmitCups","event","target","value","name","type","setState","parseFloat","setCups","preventDefault","setIngredients","cupSize","possibleCups","roundedPossibleCups","Math","round","waterGrams","coffeeGrams","CupGrindInput","label","id","onChange","onSubmit","Ingredients","ButtonInput","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport IncrementDecrementSet from 'increment.js';\nimport './App.css';\n\nconst DefaultCups = 2;\nconst DefaultCoffee = 36;\nconst DefaultWater = 560;\nconst DefaultRatio = \"15.5\";\nconst CoffeeGrindsLabel = \"g ground coffee\";\nconst CupsLabel = \"10oz servings\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      goldenRatio: DefaultRatio, \n      cups: DefaultCups,\n      coffee: DefaultCoffee,\n      water: DefaultWater, \n      error: null,\n      coffeeOrServings: 'Servings desired',\n    };\n\n    this.onClick = this.onClick.bind(this);\n    this.onSubmitCoffee = this.onSubmitCoffee.bind(this);\n    this.onSubmitCups = this.onSubmitCups.bind(this);\n  }\n\n  onClick(event) {\n    const target = event.target;\n    const value = event.target.value;\n    const name = target.name;\n\n    (target.type === 'button')\n      ? this.setState({ [name]: value })\n      : (!(value)) //if empty string is submitted set state value to zero***\n      ? this.setState({ [name]: \"\"})\n      : this.setState({ [name]: parseFloat(value)});\n  }\n\n  onSubmitCoffee(event) {\n    const { coffee, goldenRatio } = this.state;\n    this.setCups(coffee, parseFloat(goldenRatio));\n    event.preventDefault();\n  }\n\n  onSubmitCups(event) {\n    const { cups, goldenRatio } = this.state;\n    this.setIngredients(cups, parseFloat(goldenRatio));\n    event.preventDefault();\n  }\n\n  setCups(coffee, goldenRatio, cupSize = 280) {\n    const possibleCups = (coffee * goldenRatio) / cupSize;\n    const roundedPossibleCups = Math.round(possibleCups * 4) / 4;\n\n    this.setIngredients(roundedPossibleCups, goldenRatio);\n  }\n\n  setIngredients(cups, goldenRatio, cupSize=280) {   \n    const waterGrams = Math.round(cups * cupSize);\n    const coffeeGrams = Math.round(waterGrams / goldenRatio);\n\n    this.setState({\n        cups: cups,\n        coffee: coffeeGrams,\n        water: waterGrams\n    });\n  }\n\n  render() {\n    const { cups, coffee, water, coffeeOrServings, goldenRatio } = this.state;\n\n    return (\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Brew Ratio</h1>\n        </header>\n\n        <main>\n        <h2>Brew By</h2>\n\n          <div className=\"coffeeOrCupsInput\">\n    \n            <form className=\"CupOrGrind\">\n              <div className=\"CupOrGrind\">\n\n                <IncrementDecrementSet\n                  name=\"servings\"\n                  title=\"Servings Amount\"\n                  interval=\"1\"\n                  setIntervalTime={this.onClick}\n                />\n              </div>\n              <div className=\"CupOrGrind\">\n                <ButtonInput \n                  className = {(coffeeOrServings === \"Servings desired\") ? \"active\" : \"inactive\"}\n                  id=\"servings\"\n                  name=\"coffeeOrServings\"\n                  value=\"Servings desired\"\n                  onClick={this.onClick}\n                />\n              </div>\n              \n            </form>\n          </div>\n\n          { (coffeeOrServings === \"Coffee on hand\")\n            ? <div className=\"grindsInput\">\n                <div className=\"interactions labelInput\">\n                    <CupGrindInput \n                      label=\"Enter weight of coffee in grams\"\n                      id=\"coffeeInput\"\n                      name='coffee'\n                      onChange={this.onClick}\n                      onSubmit = {this.onSubmitCoffee}\n                    >\n                    </CupGrindInput>\n                </div>  \n                <Ingredients\n                  coffee={cups}\n                  water={water}\n                  label={CupsLabel}\n                >\n                </Ingredients>\n              </div>  \n            : <div className=\"cupsInput\">\n                <div className=\"interactions\">\n                    <CupGrindInput \n                      label=\"Enter number of 10oz brewed servings\"\n                      id=\"cupsInput\"\n                      name='cups'\n                      onChange={this.onClick}\n                      onSubmit = {this.onSubmitCups}\n                    >\n                    </CupGrindInput>\n                  \n                </div>\n\n                <Ingredients\n                  coffee={coffee}\n                  water={water}\n                  label={CoffeeGrindsLabel}\n                >\n                </Ingredients>\n              </div>\n            } \n\n          <div className=\"strengthInput interactions\">\n            <h2>Coffee:1g Water</h2>\n            <form> \n\n              <div className=\"strength\"> \n                  <ButtonInput\n                    className = {(goldenRatio === \"18\") ? \"active\" : \"inactive\"} \n                    id=\"light\"\n                    name=\"goldenRatio\"\n                    value=\"18\"\n                    onClick={this.onClick}\n                  />\n                <label className=\"strength\" htmlFor=\"light\">light</label>\n              </div>\n\n              <div className=\"strength\">\n                <ButtonInput\n                  className = {(goldenRatio === \"15.5\") ? \"active\" : \"inactive\"} \n                  id=\"med\"\n                  name=\"goldenRatio\"\n                  value=\"15.5\"\n                  onClick={this.onClick}\n                />\n                <label className=\"strength\" htmlFor=\"med\">medium</label>\n              </div>\n\n              <div className=\"strength\">\n                <ButtonInput\n                   className = {(goldenRatio === \"13\") ? \"active\" : \"inactive\"}\n                  id=\"strong\"\n                  name=\"goldenRatio\"                \n                  value=\"13\"\n                  onClick={this.onClick}\n                />\n                <label className=\"strength\" htmlFor=\"strong\">strong</label>\n              </div>\n\n            </form>\n          </div>\n\n        </main>\n      </div>\n    );\n  }\n}\n\nconst CupGrindInput = ({label, id, name, onChange, onSubmit}) =>\n        <form className=\"CupGrindInput\" onSubmit = {onSubmit}>\n            <label className=\"CupOrGrind\">{label}</label>\n            <input\n              id={id}\n              name={name}\n              type=\"number\"\n              step=\".01\"\n              onChange={onChange}\n            />\n          <button type=\"submit\" >\n            Submit\n          </button>\n        </form>\n\nconst Ingredients = ({ coffee, water, label }) =>\n  <div className=\"ingredients\">\n    <div className=\"coffeeOrCups\">\n      <h2>Ingredients</h2>\n      {coffee} {label}\n    </div>\n    <div className=\"water\"> \n      {water} g water\n    </div>\n  </div>\n\nconst ButtonInput = ({ className, id, name, value, onClick }) =>\n  <span className=\"button\">\n    <input\n      className = {className}\n      type=\"button\"\n      id={id}\n      name={name}\n      value={value}\n      onClick={onClick}\n    />   \n  </span>\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}