{"ast":null,"code":"import _classCallCheck from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nvar DefaultCups = 2;\nvar DefaultRatio = 15.5;\nvar CoffeeGrindsLabel = \"g coffee (ground)\";\nvar CupsLabel = \"10oz cups\"; //input coffeeGrams available (user input number) and goldenRatio and outPuts number of cups possible\n\nvar DesiredCups = function DesiredCups(coffeeGrams) {\n  var goldenRatio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 15;\n  return coffeeGrams / goldenRatio;\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      cups: DefaultCups,\n      goldenRatio: DefaultRatio,\n      ingredients: '',\n      error: null,\n      selectedButton: 'no'\n    };\n    _this.onSubmitChange = _this.onCupsSubmitChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onCupsSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onButtonChange = _this.onButtonChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onButtonChange\",\n    value: function onButtonChange(event) {\n      this.setState({\n        selectedButton: event.target.value\n      });\n    }\n  }, {\n    key: \"onSubmitChange\",\n    value: function onSubmitChange(event) {\n      //make sure input is a number here or post an error message\n      isNaN(event.target.value) ? this.setState({\n        cups: 0\n      }) : this.setState({\n        cups: parseFloat(event.target.value)\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      var cups = this.state.cups;\n      var goldenRatio = this.state.goldenRatio;\n      this.setIngredients(cups, goldenRatio);\n      event.preventDefault();\n    }\n  }, {\n    key: \"setCups\",\n    value: function setCups(coffee, goldenRatio) {\n      var possibleCups = Math.round(coffee / goldenRatio);\n      this.setIngredients(possibleCups, goldenRatio);\n    }\n  }, {\n    key: \"setIngredients\",\n    value: function setIngredients(cups, goldenRatio) {\n      var cupSize = 280;\n      var waterGrams = Math.round(cupSize * cups); // const coffeeGrams = (waterGrams, goldenRatio = 15) => waterGrams / goldenRatio;\n\n      var coffeeGrams = Math.round(waterGrams / goldenRatio);\n      this.setState({\n        ingredients: {\n          coffee: coffeeGrams,\n          water: waterGrams\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          cups = _this$state.cups,\n          ingredients = _this$state.ingredients,\n          selectedButton = _this$state.selectedButton;\n      var coffee = ingredients.coffee;\n      var water = ingredients.water;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Brew Ratio\")), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Coffee beans running low?\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Check \\\"yes\\\" below if you have a random amount of ground coffee left to brew.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Check \\\"no\\\" if you prefer to brew a specific number of cups.\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(RadioInput, {\n        value: \"yes\",\n        onChange: this.onButtonChange,\n        checked: this.state.selectedButton === 'yes',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(RadioInput, {\n        value: \"no\",\n        onChange: this.onButtonChange,\n        checked: this.state.selectedButton === 'no',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))), this.state.selectedButton === 'yes' ? React.createElement(\"div\", {\n        className: \"grindsInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"How much ground beans do you have (g)?\", React.createElement(CupGrindInput, {\n        value: ingredients.coffee,\n        onChange: this.onSubmitChange,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))), React.createElement(Ingredients, {\n        coffee: cups,\n        water: water,\n        label: CupsLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        className: \"cupsInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Desired \", CupsLabel, \":\", React.createElement(CupGrindInput, {\n        value: cups,\n        onChange: this.onSubmitChange,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }))), React.createElement(Ingredients, {\n        coffee: coffee,\n        water: water,\n        label: CoffeeGrindsLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar CupGrindInput = function CupGrindInput(_ref) {\n  var value = _ref.value,\n      onChange = _ref.onChange,\n      onSubmit = _ref.onSubmit;\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    step: \".01\",\n    value: value,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nvar Ingredients = function Ingredients(_ref2) {\n  var coffee = _ref2.coffee,\n      water = _ref2.water,\n      label = _ref2.label;\n  return React.createElement(\"div\", {\n    className: \"ingredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"coffeeOrCups\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, coffee, \" \", label), React.createElement(\"div\", {\n    className: \"water\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, water, \"g water\"));\n};\n\nvar RadioInput = function RadioInput(_ref3) {\n  var value = _ref3.value,\n      onChange = _ref3.onChange,\n      checked = _ref3.checked;\n  return React.createElement(\"span\", {\n    className: \"radioButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    id: value,\n    name: \"coffeeLowQuestion\",\n    value: value,\n    onChange: onChange,\n    deafaultChecked: checked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, value));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","Component","DefaultCups","DefaultRatio","CoffeeGrindsLabel","CupsLabel","DesiredCups","coffeeGrams","goldenRatio","App","props","state","cups","ingredients","error","selectedButton","onSubmitChange","onCupsSubmitChange","bind","onSubmit","onCupsSubmit","onButtonChange","event","setState","target","value","isNaN","parseFloat","setIngredients","preventDefault","coffee","possibleCups","Math","round","cupSize","waterGrams","water","CupGrindInput","onChange","Ingredients","label","RadioInput","checked"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst DefaultCups = 2;\nconst DefaultRatio = 15.5;\nconst CoffeeGrindsLabel = \"g coffee (ground)\";\nconst CupsLabel = \"10oz cups\"\n\n//input coffeeGrams available (user input number) and goldenRatio and outPuts number of cups possible\nconst DesiredCups = (coffeeGrams, goldenRatio = 15) => coffeeGrams / goldenRatio;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cups: DefaultCups,\n      goldenRatio: DefaultRatio,\n      ingredients: '',\n      error: null,\n      selectedButton: 'no',\n    };\n\n    this.onSubmitChange = this.onCupsSubmitChange.bind(this);\n    this.onSubmit = this.onCupsSubmit.bind(this);\n    this.onButtonChange = this.onButtonChange.bind(this);\n  }\n\n  onButtonChange(event) {\n    this.setState({ selectedButton: event.target.value })\n  }\n\n  onSubmitChange(event) {\n    //make sure input is a number here or post an error message\n    (isNaN(event.target.value)) ? this.setState({ cups: 0}): this.setState({ cups: parseFloat(event.target.value) });\n  }\n\n  onSubmit(event) {\n    const { cups } = this.state;\n    const { goldenRatio } = this.state;\n    this.setIngredients(cups, goldenRatio); \n    event.preventDefault();\n  }\n\n  setCups(coffee, goldenRatio) {\n    const possibleCups = Math.round(coffee / goldenRatio);\n    this.setIngredients(possibleCups, goldenRatio);\n  }\n\n  setIngredients(cups, goldenRatio) {\n    const cupSize = 280;\n    const waterGrams = Math.round(cupSize * cups);\n    // const coffeeGrams = (waterGrams, goldenRatio = 15) => waterGrams / goldenRatio;\n    const coffeeGrams = Math.round(waterGrams / goldenRatio);\n\n    this.setState({\n      ingredients: {\n        coffee: coffeeGrams,\n        water: waterGrams\n      }\n    });\n  }\n\n  render() {\n    const { cups, ingredients, selectedButton } = this.state;\n    const coffee = (ingredients.coffee);\n    const water = (ingredients.water);\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Brew Ratio</h1>\n        </header>\n        <main>\n          <div className=\"interactions\">\n            <h2>Coffee beans running low?</h2>\n            <p>Check \"yes\" below if you have a random amount of ground coffee left to brew.</p>\n            <p>Check \"no\" if you prefer to brew a specific number of cups.</p>\n            <form>\n              <RadioInput \n                value=\"yes\"\n                onChange={this.onButtonChange}\n                checked={this.state.selectedButton === 'yes'}\n              />\n              <RadioInput \n                value=\"no\"\n                onChange={this.onButtonChange}\n                checked={this.state.selectedButton === 'no'}\n              />\n              </form>\n          </div>\n          { (this.state.selectedButton === 'yes')\n            ? <div className=\"grindsInput\">\n                <div className=\"interactions\">\n                  <label>How much ground beans do you have (g)?\n                    <CupGrindInput \n                      value={ingredients.coffee}\n                      onChange={this.onSubmitChange}\n                      onSubmit = {this.onSubmit}\n                    >\n                    </CupGrindInput>\n                  </label>\n                </div>  \n                <Ingredients\n                  coffee={cups}\n                  water={water}\n                  label={CupsLabel}\n                >\n                </Ingredients>\n              </div>  \n            : <div className=\"cupsInput\">\n                <div className=\"interactions\">\n                  <label>Desired {CupsLabel}:\n                    <CupGrindInput \n                      value={cups}\n                      onChange={this.onSubmitChange}\n                      onSubmit = {this.onSubmit}\n                    >\n                    </CupGrindInput>\n                  </label>   \n                </div>\n                <Ingredients\n                  coffee={coffee}\n                  water={water}\n                  label={CoffeeGrindsLabel}\n                >\n                </Ingredients>\n              </div>\n            }  \n        </main>\n      </div>\n    );\n  }\n}\n\nconst CupGrindInput = ({value, onChange, onSubmit}) =>\n        <form onSubmit = {onSubmit}>\n            <input\n              type=\"number\"\n              step=\".01\"\n              value={value}\n              onChange={onChange}\n            />\n          <button type=\"submit\" >\n            Submit\n          </button>\n        </form>\n\nconst Ingredients = ({ coffee, water, label }) =>\n  <div className=\"ingredients\">\n    <div className=\"coffeeOrCups\">\n      {coffee} {label}\n    </div>\n    <div className=\"water\"> \n      {water}g water\n    </div>\n  </div>\n\nconst RadioInput = ({ value, onChange, checked }) =>\n  <span className=\"radioButton\">\n    <input \n      type=\"radio\"\n      id={value}\n      name=\"coffeeLowQuestion\"\n      value={value}\n      onChange={onChange}\n      deafaultChecked={checked}\n    />\n    <label for={value}>{value}</label>\n  </span>\n   \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}