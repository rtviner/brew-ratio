{"ast":null,"code":"import _classCallCheck from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport QuantityInput from './components/QuantityInput';\nimport StrengthInput from './components/StrengthInput';\nimport Timer from './components/Timer';\nvar DefaultWater = 558;\nvar DefaultRatio = 15.5;\nvar DefaultMinutes = 3;\nvar DefaultSeconds = 0;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.setGoldenRatio = function (event) {\n      var ratio = event.target.value.split(\":\");\n\n      _this.setState({\n        goldenRatio: parseFloat(ratio[1])\n      });\n    };\n\n    _this.updateWater = function (event) {\n      var _this$state = _this.state,\n          waterGrams = _this$state.waterGrams,\n          goldenRatio = _this$state.goldenRatio;\n      var eventInfo = event.target.id.split('-');\n      var value = event.target.type === 'number' ? event.target.value : waterGrams;\n      var newWater;\n\n      if (eventInfo[0] === 'cups') {\n        if (eventInfo[1] === 'amount') {\n          newWater = value * 279;\n        } else {\n          newWater = eventInfo[1] === 'decrement' && waterGrams >= 69.75 ? value - 69.75 : value + 69.75;\n        }\n      } else if (eventInfo[0] === 'coffeeGrams') {\n        if (eventInfo[1] === 'amount') {\n          newWater = value * goldenRatio;\n        } else {\n          newWater = eventInfo[1] === 'decrement' && waterGrams >= goldenRatio ? value - goldenRatio : value + goldenRatio;\n        }\n      } else if (eventInfo[0] === 'waterGrams') {\n        if (eventInfo[1] === 'amount') {\n          newWater = value;\n        } else {\n          newWater = eventInfo[1] === 'decrement' && waterGrams >= 1 ? value - 1 : value + 1;\n        }\n      }\n\n      _this.setState({\n        waterGrams: newWater\n      });\n    };\n\n    _this.resetTimer = function () {\n      _this.stopTimer();\n\n      _this.setState({\n        minutes: DefaultMinutes,\n        seconds: DefaultSeconds\n      });\n    };\n\n    _this.playPause = function () {\n      if (_this.state.timerOn) _this.stopTimer();else _this.countdown();\n    };\n\n    _this.stopTimer = function () {\n      _this.setState({\n        timerOn: false\n      });\n\n      clearTimeout(_this.tick);\n    };\n\n    _this.countdown = function () {\n      var _this$state2 = _this.state,\n          minutes = _this$state2.minutes,\n          seconds = _this$state2.seconds;\n      var intervalTime = minutes * 60 + seconds;\n      var endTime = new Date().getTime() + intervalTime * 1000 + 500;\n\n      _this.setState({\n        timerOn: true,\n        timerEnd: endTime\n      });\n\n      var updateClock = function updateClock() {\n        var msLeft = endTime - new Date().getTime(); // if (msLeft <= 0) {\n        //     // make a ding noise\n        // }\n\n        if (msLeft >= 0) {\n          var currentTime = new Date(msLeft); // intervalTime = Math.floor(msLeft / 1000),\n\n          _this.setState({\n            minutes: currentTime.getUTCMinutes(),\n            seconds: currentTime.getUTCSeconds()\n          });\n\n          _this.tick = setTimeout(updateClock, currentTime.getUTCMilliseconds() + 500);\n        }\n      };\n\n      updateClock();\n    };\n\n    _this.stepUpTime = function () {\n      var _this$state3 = _this.state,\n          minutes = _this$state3.minutes,\n          seconds = _this$state3.seconds;\n      var currentMinutes = minutes;\n      var currentSeconds = seconds;\n      var newMinutes;\n      var newSeconds;\n\n      if (seconds === 59) {\n        newMinutes = currentMinutes + 1;\n        newSeconds = 0;\n\n        _this.setState({\n          minutes: newMinutes,\n          seconds: newSeconds\n        });\n      } else if (minutes < 5) {\n        newSeconds = currentSeconds + 1;\n\n        _this.setState({\n          seconds: newSeconds\n        });\n      }\n    };\n\n    _this.stepDownTime = function () {\n      var _this$state4 = _this.state,\n          minutes = _this$state4.minutes,\n          seconds = _this$state4.seconds;\n      var currentMinutes = minutes;\n      var currentSeconds = seconds;\n      var newMinutes;\n      var newSeconds;\n\n      if (seconds === 0 && minutes > 2) {\n        newMinutes = currentMinutes - 1;\n        newSeconds = 59;\n\n        _this.setState({\n          minutes: newMinutes,\n          seconds: newSeconds\n        });\n      }\n\n      if (seconds > 0) {\n        newSeconds = currentSeconds - 1;\n\n        _this.setState({\n          seconds: newSeconds\n        });\n      }\n    };\n\n    _this.saveSettings = function () {\n      var _this$state5 = _this.state,\n          goldenRatio = _this$state5.goldenRatio,\n          waterGrams = _this$state5.waterGrams,\n          minutes = _this$state5.minutes,\n          seconds = _this$state5.seconds;\n      localStorage.setItem('goldenRatio', goldenRatio);\n      localStorage.setItem('waterGrams', waterGrams);\n      localStorage.setItem('minutes', minutes);\n      localStorage.setItem('seconds', seconds);\n    };\n\n    _this.state = {\n      goldenRatio: DefaultRatio,\n      waterGrams: DefaultWater,\n      timerEnd: 0,\n      minutes: DefaultMinutes,\n      seconds: DefaultSeconds,\n      timerOn: false,\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var goldenRatio = parseFloat(localStorage.getItem('goldenRatio')) || DefaultRatio;\n      var waterGrams = parseFloat(localStorage.getItem('waterGrams')) || DefaultWater;\n      var minutes = parseFloat(localStorage.getItem('minutes')) || DefaultMinutes;\n      var seconds = parseFloat(localStorage.getItem('seconds')) || DefaultSeconds;\n      this.setState({\n        goldenRatio: goldenRatio,\n        waterGrams: waterGrams,\n        minutes: minutes,\n        seconds: seconds\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.tick);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state6 = this.state,\n          goldenRatio = _this$state6.goldenRatio,\n          waterGrams = _this$state6.waterGrams,\n          minutes = _this$state6.minutes,\n          seconds = _this$state6.seconds;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(StrengthInput, {\n        goldenRatio: goldenRatio,\n        setGoldenRatio: this.setGoldenRatio,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(QuantityInput, {\n        waterGrams: waterGrams,\n        goldenRatio: goldenRatio,\n        updateWater: this.updateWater,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(Timer, {\n        minutes: minutes,\n        seconds: seconds,\n        stepUpTime: this.stepUpTime,\n        stepDownTime: this.stepDownTime,\n        playPause: this.playPause,\n        resetTimer: this.resetTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"saveSettings\",\n        className: \"rectButton\",\n        type: \"button\",\n        onClick: this.saveSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Save Settings\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","Component","QuantityInput","StrengthInput","Timer","DefaultWater","DefaultRatio","DefaultMinutes","DefaultSeconds","App","props","setGoldenRatio","event","ratio","target","value","split","setState","goldenRatio","parseFloat","updateWater","state","waterGrams","eventInfo","id","type","newWater","resetTimer","stopTimer","minutes","seconds","playPause","timerOn","countdown","clearTimeout","tick","intervalTime","endTime","Date","getTime","timerEnd","updateClock","msLeft","currentTime","getUTCMinutes","getUTCSeconds","setTimeout","getUTCMilliseconds","stepUpTime","currentMinutes","currentSeconds","newMinutes","newSeconds","stepDownTime","saveSettings","localStorage","setItem","error","getItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport './App.css';\n\nimport QuantityInput from './components/QuantityInput';\nimport StrengthInput from './components/StrengthInput';\nimport Timer from './components/Timer';\n\nconst DefaultWater = 558\nconst DefaultRatio = 15.5\nconst DefaultMinutes = 3\nconst DefaultSeconds = 0\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      goldenRatio: DefaultRatio,\n      waterGrams: DefaultWater,\n      timerEnd: 0,\n      minutes: DefaultMinutes,\n      seconds: DefaultSeconds,\n      timerOn: false,\n      error: null,\n    }\n  }\n\n  componentDidMount() {\n    const goldenRatio = parseFloat(localStorage.getItem('goldenRatio')) || DefaultRatio;\n    const waterGrams = parseFloat(localStorage.getItem('waterGrams'))\n        || DefaultWater;\n    const minutes = parseFloat(localStorage.getItem('minutes'))\n        || DefaultMinutes;\n    const seconds = parseFloat(localStorage.getItem('seconds'))\n        || DefaultSeconds;\n    this.setState({ goldenRatio, waterGrams, minutes, seconds });\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.tick)\n  }\n\n  setGoldenRatio = (event) => {\n    let ratio = event.target.value.split(\":\");\n    this.setState({\n      goldenRatio: parseFloat(ratio[1]),\n    })\n  }\n\n  updateWater = (event) => {\n    const { waterGrams, goldenRatio } = this.state\n    const eventInfo = event.target.id.split('-')\n    let value = event.target.type === 'number' ? event.target.value : waterGrams\n    let newWater\n\n    if (eventInfo[0] === 'cups') {\n      if (eventInfo[1] === 'amount') {\n        newWater = value * 279\n      } else {\n        newWater =\n          eventInfo[1] === 'decrement' && waterGrams >= 69.75\n            ? value - 69.75\n            : value + 69.75\n      }\n    } else if (eventInfo[0] === 'coffeeGrams') {\n      if (eventInfo[1] === 'amount') {\n        newWater = value * goldenRatio\n      } else {\n        newWater =\n          eventInfo[1] === 'decrement' && waterGrams >= goldenRatio\n            ? value - goldenRatio\n            : value + goldenRatio\n      }\n    } else if (eventInfo[0] === 'waterGrams') {\n      if (eventInfo[1] === 'amount') {\n        newWater = value\n      } else {\n        newWater =\n          eventInfo[1] === 'decrement' && waterGrams >= 1\n            ? value - 1\n            : value + 1\n      }\n    }\n    this.setState({ waterGrams: newWater })\n  }\n\n  resetTimer = () => {\n    this.stopTimer()\n    this.setState({\n      minutes: DefaultMinutes,\n      seconds: DefaultSeconds,\n    })\n  }\n\n  playPause = () => {\n    if (this.state.timerOn) this.stopTimer()\n    else this.countdown()\n  }\n\n  stopTimer = () => {\n    this.setState({ timerOn: false })\n    clearTimeout(this.tick)\n  }\n\n  countdown = () => {\n    const { minutes, seconds } = this.state;\n    let intervalTime = (minutes * 60)  + seconds;\n    let endTime = new Date().getTime() + intervalTime * 1000 + 500\n\n    this.setState({\n      timerOn: true,\n      timerEnd: endTime,\n    })\n\n    const updateClock = () => {\n      let msLeft = endTime - new Date().getTime()\n      // if (msLeft <= 0) {\n      //     // make a ding noise\n      // }\n      if (msLeft >= 0) {\n        let currentTime = new Date(msLeft)\n        // intervalTime = Math.floor(msLeft / 1000),\n        this.setState({\n          minutes: currentTime.getUTCMinutes(),\n          seconds: currentTime.getUTCSeconds(),\n        })\n        this.tick = setTimeout(\n          updateClock,\n          currentTime.getUTCMilliseconds() + 500\n        )\n      }\n    }\n    updateClock()\n  }\n\n  stepUpTime = () => {\n    const { minutes, seconds } = this.state;\n    const currentMinutes = minutes;\n    const currentSeconds = seconds;\n    let newMinutes;\n    let newSeconds;\n    if (seconds === 59) {\n      newMinutes = currentMinutes + 1;\n      newSeconds = 0;\n      this.setState({ \n        minutes: newMinutes,\n        seconds: newSeconds\n      });\n    }\n    else if (minutes < 5) {\n      newSeconds = currentSeconds + 1;\n      this.setState({ seconds: newSeconds });\n    }\n  }\n\n  stepDownTime = () => {\n    const { minutes, seconds } = this.state;\n    const currentMinutes = minutes;\n    const currentSeconds = seconds;\n    let newMinutes;\n    let newSeconds;\n    if (seconds === 0 && minutes > 2) {\n      newMinutes = currentMinutes - 1;\n      newSeconds = 59;\n      this.setState({ \n        minutes: newMinutes,\n        seconds: newSeconds \n      });\n    }\n    if (seconds > 0) {\n      newSeconds = currentSeconds - 1;\n      this.setState({ seconds: newSeconds });\n    }\n  }\n\n  saveSettings = () => {\n    const { goldenRatio, waterGrams, minutes, seconds } = this.state;\n    localStorage.setItem('goldenRatio', goldenRatio);\n    localStorage.setItem('waterGrams', waterGrams);\n    localStorage.setItem('minutes', minutes);\n    localStorage.setItem('seconds', seconds);\n  }\n\n  render() {\n    const { goldenRatio, waterGrams, minutes, seconds } = this.state\n\n    return (\n      <div className=\"App\">\n        <main>\n          <StrengthInput \n            goldenRatio = {goldenRatio}\n            setGoldenRatio = {this.setGoldenRatio}\n          />\n          <QuantityInput \n            waterGrams = {waterGrams}\n            goldenRatio = {goldenRatio}\n            updateWater = {this.updateWater}\n          />\n          <Timer \n            minutes = {minutes}\n            seconds = {seconds}\n            stepUpTime = {this.stepUpTime}\n            stepDownTime = {this.stepDownTime}\n            playPause = {this.playPause}\n            resetTimer = {this.resetTimer}\n          />\n          <button\n            id=\"saveSettings\"\n            className=\"rectButton\"\n            type=\"button\"\n            onClick={this.saveSettings}\n          >\n            Save Settings\n          </button>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}