{"ast":null,"code":"import _defineProperty from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js\";\nimport React, { Component } from 'react';\nimport { IncrementDecrementSet } from './increment.js';\nimport { InputButton } from \"./inputButton.js\";\nimport './App.css';\nvar DefaultBrewAmt = 20;\nvar DefaultCoffee = 36;\nvar DefaultWater = 560;\nvar DefaultRatio = \"15.5\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      goldenRatio: DefaultRatio,\n      brewAmount: DefaultBrewAmt,\n      coffeeGrams: DefaultCoffee,\n      waterGrams: DefaultWater,\n      error: null\n    };\n    _this.incrementOrDecrementQuantity = _this.incrementOrDecrementQuantity.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateAllQuantities = _this.updateAllQuantities.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"incrementOrDecrementQuantity\",\n    value: function incrementOrDecrementQuantity(event) {\n      var eventInfo = event.target.id.split(\"-\");\n      var name = eventInfo[0];\n      var currentQuantity = this.state[name];\n      var newQuantity;\n\n      if (eventInfo[1] === \"increment\") {\n        newQuantity = currentQuantity + 1;\n      }\n\n      if (eventInfo[1] === \"decrement\" && currentQuantity > 1) {\n        newQuantity = currentQuantity - 1;\n      }\n\n      this.setState(_defineProperty({}, name, newQuantity));\n      this.updateAllQuantities(quantity1, quantity2); //Need to recalculate and update other two quantity states that are not name too\n    } //no longer a submit button\n    //   onSubmitCoffee(event) {\n    //     const { coffeeGrams, goldenRatio } = this.state;\n    //     this.setServings(coffeeGrams, parseFloat(goldenRatio));\n    //     event.preventDefault();\n    //   }\n    // //no longer a submit button\n    //   onSubmitServings(event) {\n    //     const { servings, goldenRatio } = this.state;\n    //     this.setIngredients(servings, parseFloat(goldenRatio));\n    //     event.preventDefault();\n    //   }\n    //this is not being called right now\n\n  }, {\n    key: \"setBrewAmount\",\n    value: function setBrewAmount(coffeeGrams, goldenRatio) {\n      var servingSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 280;\n      var possibleServings = coffeeGrams * goldenRatio / servingSize;\n      var roundedPossibleServings = Math.round(possibleServings * 4) / 4;\n      this.setIngredients(roundedPossibleServings, goldenRatio);\n    } //this is not being called right now\n\n  }, {\n    key: \"setIngredients\",\n    value: function setIngredients(brewAmount, goldenRatio) {\n      var servingSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 280;\n      var waterGrams = Math.round(brewAmount * servingSize);\n      var coffeeGrams = Math.round(waterGrams / goldenRatio);\n      this.setState({\n        brewAmount: brewAmount,\n        coffeeGrams: coffeeGrams,\n        waterGrams: waterGrams\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          brewAmount = _this$state.brewAmount,\n          coffeeGrams = _this$state.coffeeGrams,\n          waterGrams = _this$state.waterGrams,\n          goldenRatio = _this$state.goldenRatio;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Brew Ratio\")), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"adjustables\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(IncrementDecrementSet, {\n        name: \"brewAmount\",\n        title: \"Brew Amount\",\n        value: \"\".concat(brewAmount, \" (oz)\"),\n        setQuantity: this.incrementOrDecrementQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(IncrementDecrementSet, {\n        name: \"coffeeGrams\",\n        title: \"Ground Coffee\",\n        value: \"\".concat(coffeeGrams, \" (g)\"),\n        setQuantity: this.incrementOrDecrementQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(IncrementDecrementSet, {\n        name: \"waterGrams\",\n        title: \"Water\",\n        value: \"\".concat(waterGrams, \" (g/mL)\"),\n        setQuantity: this.incrementOrDecrementQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"strengthInput interactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"g Coffee:1g Water\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(InputButton, {\n        className: goldenRatio === \"18\" ? \"active\" : \"inactive\",\n        id: \"light\",\n        name: \"goldenRatio\",\n        value: \"18\",\n        onClick: this.setQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"light\")), React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(InputButton, {\n        className: goldenRatio === \"15.5\" ? \"active\" : \"inactive\",\n        id: \"med\",\n        name: \"goldenRatio\",\n        value: \"15.5\",\n        onClick: this.setQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"med\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"medium\")), React.createElement(\"div\", {\n        className: \"strength\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(InputButton, {\n        className: goldenRatio === \"13\" ? \"active\" : \"inactive\",\n        id: \"strong\",\n        name: \"goldenRatio\",\n        value: \"13\",\n        onClick: this.setQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"strength\",\n        htmlFor: \"strong\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"strong\"))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/beccaviner/Desktop/sites/brew-ratio/brew-ratio/src/App.js"],"names":["React","Component","IncrementDecrementSet","InputButton","DefaultBrewAmt","DefaultCoffee","DefaultWater","DefaultRatio","App","props","state","goldenRatio","brewAmount","coffeeGrams","waterGrams","error","incrementOrDecrementQuantity","bind","updateAllQuantities","event","eventInfo","target","id","split","name","currentQuantity","newQuantity","setState","quantity1","quantity2","servingSize","possibleServings","roundedPossibleServings","Math","round","setIngredients","setQuantity"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { IncrementDecrementSet } from './increment.js';\nimport { InputButton } from \"./inputButton.js\";\nimport './App.css';\n\nconst DefaultBrewAmt = 20;\nconst DefaultCoffee = 36;\nconst DefaultWater = 560;\nconst DefaultRatio = \"15.5\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      goldenRatio: DefaultRatio, \n      brewAmount: DefaultBrewAmt,\n      coffeeGrams: DefaultCoffee,\n      waterGrams: DefaultWater, \n      error: null,\n    };\n\n    this.incrementOrDecrementQuantity = this\n      .incrementOrDecrementQuantity.bind(this);\n    this.updateAllQuantities = this\n      .updateAllQuantities.bind(this);\n\n  }\n\n\n  incrementOrDecrementQuantity (event) {\n    const eventInfo = event.target.id.split(\"-\");\n    const name = eventInfo[0];\n    const currentQuantity  = this.state[name];\n    let newQuantity;\n\n    if (eventInfo[1] === \"increment\" ) {\n      newQuantity = currentQuantity + 1;\n    }\n\n    if (eventInfo[1] === \"decrement\" && currentQuantity > 1) {\n      newQuantity = currentQuantity - 1;\n    }\n    this.setState({ [name]: newQuantity });\n    this.updateAllQuantities(quantity1, quantity2);\n    //Need to recalculate and update other two quantity states that are not name too\n  }\n\n//no longer a submit button\n\n//   onSubmitCoffee(event) {\n//     const { coffeeGrams, goldenRatio } = this.state;\n//     this.setServings(coffeeGrams, parseFloat(goldenRatio));\n//     event.preventDefault();\n//   }\n\n// //no longer a submit button\n//   onSubmitServings(event) {\n//     const { servings, goldenRatio } = this.state;\n//     this.setIngredients(servings, parseFloat(goldenRatio));\n//     event.preventDefault();\n//   }\n\n//this is not being called right now\n  setBrewAmount(coffeeGrams, goldenRatio, servingSize = 280) {\n    const possibleServings = (coffeeGrams * goldenRatio) / servingSize;\n    const roundedPossibleServings = Math.round(possibleServings * 4) / 4;\n\n    this.setIngredients(roundedPossibleServings, goldenRatio);\n  }\n\n//this is not being called right now\n  setIngredients(brewAmount, goldenRatio, servingSize=280) {   \n    const waterGrams = Math.round(brewAmount * servingSize);\n    const coffeeGrams = Math.round(waterGrams / goldenRatio);\n\n    this.setState({\n        brewAmount: brewAmount,\n        coffeeGrams: coffeeGrams,\n        waterGrams: waterGrams\n    });\n  }\n\n  render() {\n    const { brewAmount, coffeeGrams, waterGrams, goldenRatio } = this.state;\n\n    return (\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Brew Ratio</h1>\n        </header>\n\n        <main>\n          <div id=\"adjustables\">\n            <IncrementDecrementSet\n              name=\"brewAmount\"\n              title=\"Brew Amount\"\n              value={`${brewAmount} (oz)`}\n              setQuantity=\n                {this.incrementOrDecrementQuantity}\n            />\n            <IncrementDecrementSet\n              name=\"coffeeGrams\"\n              title=\"Ground Coffee\"\n              value={`${coffeeGrams} (g)`}\n              setQuantity=\n                {this.incrementOrDecrementQuantity}\n            />\n            <IncrementDecrementSet\n              name=\"waterGrams\"\n              title=\"Water\"\n              value={`${waterGrams} (g/mL)`}\n              setQuantity=\n                {this.incrementOrDecrementQuantity}\n            />\n          </div>\n\n          <div className=\"strengthInput interactions\">\n            <h2>g Coffee:1g Water</h2>\n            <form> \n\n              <div className=\"strength\"> \n                  <InputButton\n                    className = {(goldenRatio === \"18\") ? \"active\" : \"inactive\"} \n                    id=\"light\"\n                    name=\"goldenRatio\"\n                    value=\"18\"\n                    onClick={this.setQuantity}\n                  />\n                <label className=\"strength\" htmlFor=\"light\">light</label>\n              </div>\n\n              <div className=\"strength\">\n                <InputButton\n                  className = {(goldenRatio === \"15.5\") ? \"active\" : \"inactive\"} \n                  id=\"med\"\n                  name=\"goldenRatio\"\n                  value=\"15.5\"\n                  onClick={this.setQuantity}\n                />\n                <label className=\"strength\" htmlFor=\"med\">medium</label>\n              </div>\n\n              <div className=\"strength\">\n                <InputButton\n                   className = {(goldenRatio === \"13\") ? \"active\" : \"inactive\"}\n                  id=\"strong\"\n                  name=\"goldenRatio\"                \n                  value=\"13\"\n                  onClick={this.setQuantity}\n                />\n                <label className=\"strength\" htmlFor=\"strong\">strong</label>\n              </div>\n\n            </form>\n          </div>\n\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}